###########################
# Annexation Events concerning Europe
###########################
# By lots of folks
# Converted from on_actions to decisions by Rylock and Dr_Njitram
# Any new post-annexation events need to have their triggers in the KR_on_actions file
###########################

# Table of Contents
#	This might sound arcane to you, but we are following a center-west-north-east-south route. You'll get the hang of it
#
# Europe
#	Central Europe
#		Germany
#			Alsace
#			Luxemburg
#			Rheinland
#			North Germany
#			Schleswig
#			Prussia (+ East & West Prussia)
#			Posen
#			Masuria
#			Memel
#			Upper Silesia
#			Bavaria
#		Poland
#			Bialystok
#		UBD
#			Estonia
#			Latvia
#		Lithuania
#			Vilnius
#		Austria
#			Austria proper
#			Bohemia
#			Galicia
#				Bukovina
#			Hungary
#				Slovakia
#				Transcarpathia
#				Transylvania
#				West Banat
#				Vojvodina
#				Burgenland
#			Croatia
#				Dalmatia
#				Istria
#			Triest
#			Slovenia
#			Trentino
#		Switzerland
#			Romandy
#			Ticino
#
#	Western Europe
#		France
#			Brittany
#			Pas-de-Calais
#		Britain
#			Scotland
#			Wales
#		Ireland
#		Netherlands
#		Belgium
#			Wallonia
#
#	Northern Europe
#		Denmark
#			Iceland
#			Greenland
#		Norway
#		Sweden
#			Aland
#		Finland
#			Karelia
#
#	Eastern Europe
#		Ukraine
#			Brest
#		White Ruthenia
#			Eastern White Ruth.
#		European Russia
#			Dvinsk
#			Siberia
#
#	Southeastern Europe
#		Albania
#		Montenegro
#		Bosnia
#		Kosovo
#		Serbia
#			Nis
#			Macedonia
#		Romania
#		Bulgaria
#		Constantinople
#		Greece
#			Thessaloniki
#			Keraferia
#			Northern Epirus
#
#	Southern Europe
#		Spain
#			Galicia
#			Central Spain
#			Euskadi
#			Catalonia
#		Portugal
#		Southern France
#		Corsica
#		Italy
#			Aosta
#			Piedmont
#			Lombardy
#			Venetia
#			Emilia
#			Tuscany
#			Central Italy
#			Rome
#			Southern Italy
#			Sardinia
#		Malta

add_namespace = annex

country_event = { #Check for possible annexations (donotlog)
	id = annex.1
	hidden = yes
	is_triggered_only = yes

	trigger = {
		is_subject = no
		NOT = {
			# Special tags - these shouldn't exist outside of very specific circumstances
			tag = XXA #debug tag
			tag = INR #HND civil war
			original_tag = IKH #not meant to survive
			AND = {
				has_civil_war = yes
				any_enemy_country = {
					is_dynamic_country = yes
					civilwar_target = ROOT #== start_civil_war
				}
			}
		}
	}

	option = {
		every_owned_state = {
			limit = {
				has_state_flag = annexation_trigger_state
				is_controlled_by = ROOT
				NOT = { is_core_of = ROOT }
				NOT = { has_state_flag = occupied_by_@ROOT }
				NOT = { has_state_flag = temporarily_disabled_annexation_@ROOT }
			}
			check_potential_annexations = yes
		}
		clr_country_flag = KR_checking_for_possible_annexations
	}
}

state_event = { #Generic "Land Granted" event
	id = annex.2
	title = annex.2.t
	desc = annex.2.d

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.2 option annex.2.a"
		name = annex.2.a
		effect_tooltip = { THIS = { transfer_state_to = ROOT } }
	}
}

##############################################
### LAND EXCHANGE FOR ALLIANCE EVENT CHAIN ###
##############################################

country_event = { #Offering land in exchange for faction membership
	id = annex.5
	title = "[GetLandExchangeOfferEventTitle]"
	desc = "[GetLandExchangeOfferEventDesc]"

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.5 option 1"
		name = "[GetLandExchangeOfferEventOptionAccept]"
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					AND = {
						tag = SER
						BPL_game_rule_wait_to_disband = yes
					}
					AND = {
						tag = BUL
						OR = {
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_GER }
								GER = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = GER } }
							}
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_AUS }
								AUS = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = AUS } }
							}
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_RUS }
								RUS = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = RUS } }
							}
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_BPL }
								BPL = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = BPL } }
							}
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_INT }
								INT = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = INT } }
							}
						}
					}
				}
			}
		}
		effect_tooltip = {
			if = {
				limit = { is_in_faction_with = BPL }
				belgrade_pact_is_disbanded = yes
				peace_out_non_neighbours_after_leaving_faction = yes
			}
			else_if = {
				limit = { is_in_faction = yes }
				every_other_country = {
					limit = {
						is_in_faction_with = ROOT
						is_subject = no
					}
					country_event = annex.8
				}
				leave_faction = yes
				peace_out_non_neighbours_after_leaving_faction = yes
			}
		}
		FROM = {
			effect_tooltip = {
				every_owned_state = {
					limit = {
						is_in_array = { ROOT.offered_states_array = THIS }
						is_claim_or_core_of_PREV = no
					}
					transfer_state_to = ROOT
				}
				faction_leader = { add_to_faction = ROOT }
			}
			country_event = { id = annex.6 days = 1 }
		}
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.5 option 2"
		name = "[GetLandExchangeOfferEventOptionRefuse]"
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					AND = {
						tag = SER
						BPL_game_rule_wait_to_disband = yes
					}
					AND = {
						tag = BUL
						OR = {
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_GER }
								GER = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = GER } }
							}
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_AUS }
								AUS = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = AUS } }
							}
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_RUS }
								RUS = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = RUS } }
							}
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_BPL }
								BPL = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = BPL } }
							}
							AND = {
								has_game_rule = { rule = BUL_forpol option = BUL_FORPOL_INT }
								INT = {
									exists = yes
									is_subject = no
								}
								FROM = { NOT = { is_in_faction_with = INT } }
							}
						}
					}
				}
			}
		}
		FROM = { country_event = { id = annex.7 days = 1 } }
		recheck_annexations = yes
	}
}

country_event = { #Land exchange deal has been struck
	id = annex.6
	title = "[GetLandExchangeAcceptedEventTitle]"
	desc = "[GetLandExchangeAcceptedEventDesc]"

	trigger = {
		is_in_faction = yes
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.6 option 1"
		name = "[GetLandExchangeAcceptedEventOption]"
		FROM = {
			if = {
				limit = { is_in_faction_with = BPL }
				belgrade_pact_is_disbanded = yes
				peace_out_non_neighbours_after_leaving_faction = yes
			}
			else_if = {
				limit = { is_in_faction = yes }
				every_other_country = {
					limit = {
						is_in_faction_with = PREV
						is_subject = no
					}
					country_event = annex.8
				}
				leave_faction = yes
				peace_out_non_neighbours_after_leaving_faction = yes
			}
		}
		every_owned_state = {
			limit = {
				is_in_array = { FROM.offered_states_array = THIS }
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = FROM
		}
		faction_leader = { add_to_faction = FROM }
		reverse_add_opinion_modifier = { target = FROM modifier = KR_returned_land }
		hidden_effect = {
			for_each_scope_loop = {
				array = FROM.offered_states_array
				clr_state_flag = temporarily_disabled_annexation_@ROOT
			}
			clear_array = FROM.offered_states_array
			recheck_annexations_immediate = yes
		}
	}
}

country_event = { #Land exchange deal has been refused
	id = annex.7
	title = "[GetLandExchangeRefusedEventTitle]"
	desc = "[GetLandExchangeRefusedEventDesc]"

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.7 option 1"
		name = "[GetLandExchangeRefusedEventOption]"
		for_each_scope_loop = {
			array = FROM.offered_states_array
			clr_state_flag = temporarily_disabled_annexation_@ROOT
		}
		clear_array = FROM.offered_states_array
		recheck_annexations_immediate = yes
	}
}

country_event = { #Land exchange notification to allies
	id = annex.8
	title = "[GetLandExchangeNotificationEventTitle]"
	desc = "[GetLandExchangeNotificationEventDesc]"

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.8 option 1"
		name = "[GetLandExchangeNotificationEventOption]"
		add_opinion_modifier = { target = FROM modifier = KR_hates_govt }
		recheck_annexations = yes
	}
}

#####################################
##   C E N T R A L   E U R O P E   ##
#####################################

country_event = { #Fate of Germany
	id = annex.1000
	title = annexation_GER_CONQ
	desc = annexation_GER_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = GRU } }
				add_to_temp_array = { core_removal_array = GRU }
				remove_all_cores_and_claims_of_tags = yes
				GER = {
					GER_wilhelm_iv = {
						remove_all_country_leader_roles = yes
						set_nationality = GER
					}
				}
				if = {
					limit = { NOT = { PRE = { has_country_leader = { character = RUS_boris_romanov } } } }
					RUS = {
						RUS_boris_romanov = {
							set_character_name = RUS_boris_romanov
							remove_all_country_leader_roles = yes
							set_nationality = RUS
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						original_tag = FRA
						original_tag = NFA
					}
				}
				42 = { retain_state = yes } #Palatinate
				51 = { retain_state = yes } #Eastern Rhineland
				781 = { retain_state = yes } #Western Rhineland
			}
			if = {
				limit = { original_tag = AUS }
				every_state = {
					limit = { is_south_germany = yes }
					retain_state = yes
				}
			}
		}
	}

	option = { #release republican Germany
		log = "[GetLogInfo]: event annex.1000 option annex.1000.a"
		name = annex.1000.a
		trigger = {
			has_socialist_government = no
			GEX = { is_ally_of_ROOT = no }
			NOT = {
				any_country_with_original_tag = {
					original_tag_to_check = GRU
					exists = yes
					is_monarchy = no
					has_socialist_government = no
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_can_crown_boris_in_germany = yes
			}
		}
		generate_new_german_puppet = yes
		hidden_effect = {
			GER = {
				GER_kurt_schumacher = {
					set_nationality = var:tag_to_release
					promote_character = yes
				}
				GER_erich_kochweser = {
					set_nationality = var:tag_to_release
					promote_character = yes
				}
				GER_gustav_krupp = {
					set_nationality = var:tag_to_release
					promote_character = yes
				}
				GER_heinrich_bruning = {
					set_nationality = var:tag_to_release
					promote_character = yes
				}
				GER_franz_von_papen = {
					set_nationality = var:tag_to_release
					promote_character = yes
				}
				GER_erwin_von_witzleben = {
					set_nationality = var:tag_to_release
					promote_character = yes
				}
				GER_heinrich_class = {
					set_nationality = var:tag_to_release
					promote_character = yes
				}
			}
			var:tag_to_release = {
				set_cosmetic_tag = GRU_republic
				german_puppet_set_best_capital = yes
				create_non_socialist_german_government = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #release socialist Germany
		log = "[GetLogInfo]: event annex.1000 option annex.1000.b"
		name = annex.1000.b
		trigger = {
			has_socialist_government = yes
			NOT = {
				any_country_with_original_tag = {
					original_tag_to_check = GRU
					exists = yes
					has_socialist_government = yes
				}
			}
		}
		ai_chance = { base = 100 }
		generate_new_german_puppet = yes
		hidden_effect = {
			GER = {
				GER_willi_munzenberg = {
					set_nationality = var:tag_to_release
					promote_character = totalist_subtype
					promote_character = syndicalist_subtype
					promote_character = radical_socialist_subtype
				}
			}
			var:tag_to_release = {
				set_cosmetic_tag = GRU_socialist
				german_puppet_set_best_capital = yes
				create_socialist_german_government = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #release imperial Germany
		log = "[GetLogInfo]: event annex.1000 option annex.1000.c"
		name = annex.1000.c
		trigger = {
			has_socialist_government = no
			NOT = { has_government = national_populist }
			NOT = { country_exists = GEX }
			NOT = {
				any_country_with_original_tag = {
					original_tag_to_check = GRU
					exists = yes
					is_monarchy = yes
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_can_crown_boris_in_germany = yes
			}
		}
		generate_new_german_puppet = yes
		var:tag_to_release = {
			set_cosmetic_tag = GRU_empire
			GER_create_wilhelm_iv = yes
			hidden_effect = {
				german_puppet_set_best_capital = yes
				create_non_socialist_german_government = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #release imperial Germany, Romanov edition
		log = "[GetLogInfo]: event annex.1000 option annex.1000.d"
		name = annex.1000.d
		trigger = {
			RUS_can_crown_boris_in_germany = yes
			GEX = { is_ally_of_ROOT = no }
			NOT = {
				any_country_with_original_tag = {
					original_tag_to_check = GRU
					exists = yes
					is_monarchy = yes
				}
			}
		}
		ai_chance = { base = 100 }
		generate_new_german_puppet = yes
		var:tag_to_release = {
			set_cosmetic_tag = GRU_empire
			RUS_create_puppet_boris_romanov = yes
			hidden_effect = {
				german_puppet_set_best_capital = yes
				create_non_socialist_german_government = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #split Germany
		log = "[GetLogInfo]: event annex.1000 option annex.1000.e"
		name = annex.1000.e
		trigger = {
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = { #only consider this if you own at least three releasable German areas
				factor = 0
				count_triggers = {
					amount = 3
					AND = {
						NOT = { country_exists = NGF }
						has_valid_north_germany_annexation_state = yes
					}
					AND = {
						NOT = { country_exists = RHI }
						has_valid_rhineland_annexation_state = yes
					}
					AND = {
						NOT = { country_exists = BAY }
						has_valid_south_germany_annexation_state = yes
					}
					AND = {
						NOT = { country_exists = PRE }
						OR = {
							has_valid_brandenburg_annexation_state = yes
							has_valid_east_oder_annexation_state = yes
						}
					}
				}
			}
		}
		custom_effect_tooltip = new_annexation_decisions_tt
		set_country_flag = { flag = GER_CONQ days = 100 value = 1 }
		recheck_annexations_immediate = yes
	}

	option = { #GROSSDEUTSCHLAND
		log = "[GetLogInfo]: event annex.1000 option annex.1000.f"
		name = annex.1000.f
		trigger = {
			original_tag = AUS
			AUS_has_habsburgs = yes
			AUS_can_annex_german_lands = yes
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 60 }
		effect_tooltip = {
			every_state = {
				limit = {
					is_germany = yes
					is_south_germany = no
				}
				add_claim_of_ROOT = yes
				enable_state_integration_80_compliance = yes
			}
			every_state = {
				limit = { is_south_germany = yes }
				add_claim_of_ROOT = yes
				enable_state_integration_50_compliance = yes
			}
		}
		hidden_effect = {
			every_state = {
				limit = { is_full_germany = yes }
				if = {
					limit = { is_south_germany = yes }
					add_claim_of_ROOT = yes
					enable_state_integration_50_compliance = yes
				}
				else_if = {
					limit = { is_germany = yes }
					add_claim_of_ROOT = yes
					enable_state_integration_80_compliance = yes
				}
				else = { #border regions
					enable_state_integration_80_compliance = yes
				}
			}
		}
		every_subject_country = {
			limit = { is_germany_or_splinter_tag = yes }
			ROOT = {
				annex_country = {
					target = PREV
					transfer_troops = yes
				}
			}
		}
		set_cosmetic_tag = AUS_germany
		occupy_large_country = yes
	}

	option = { #give to GEX
		log = "[GetLogInfo]: event annex.1000 option annex.europe.give_to_gex"
		name = annex.europe.give_to_gex
		trigger = {
			GEX = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 100 }
		every_owned_state = {
			limit = {
				OR = {
					is_germany = yes
					is_core_of = GEX
					is_claimed_by = GEX
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = GEX
		}
		recheck_annexations = yes
	}

	option = { #occupy all
		log = "[GetLogInfo]: event annex.1000 option annex.occupation"
		name = annex.occupation
		trigger = {
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		set_country_flag = GER_CONQ
		set_country_flag = PRE_CONQ
		set_country_flag = RHI_CONQ
		set_country_flag = BAY_CONQ
		set_country_flag = NGF_CONQ
		occupy_massive_country = yes
	}
}

country_event = { #Fate of Alsace-Lorraine
	id = annex.1001
	title = annexation_ALSACE_CONQ
	desc = annexation_ALSACE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					is_french_tag = yes
					is_germany_or_splinter_tag = yes
					AND = {
						original_tag = AUS
						AUS_can_annex_german_lands = yes
						owns_state = 780
					}
				}
			}
			save_event_target_as = can_annex_alsace
		}
		if = {
			limit = {
				var:785.owner = { #Lorraine
					is_french_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:785.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				var:42.owner = { #Palatinate
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:42.owner = { save_event_target_as = german_palatinate }
		}
		if = {
			limit = {
				var:780.owner = { #Baden
					OR = {
						is_germany_or_splinter_tag = yes
						AND = {
							original_tag = AUS
							AUS_can_annex_german_lands = yes
						}
					}
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_palatinate }
				}
			}
			var:780.owner = { save_event_target_as = german_baden }
		}
	}

	option = { #Give to France
		log = "[GetLogInfo]: event annex.1001 option annex.1001.a"
		name = annex.1001.a
		trigger = {
			has_event_target = france
			is_french_tag = no
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_event_target = can_annex_alsace
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:german_palatinate
					is_ally_with = event_target:german_baden
				}
				NOT = { is_ally_with = event_target:france }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		28 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give to German tag 1 (owner of Palatinate)
		log = "[GetLogInfo]: event annex.1001 option annex.1001.b"
		name = annex.1001.b
		trigger = {
			has_event_target = german_palatinate
			is_germany_or_splinter_tag = no
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				has_event_target = can_annex_alsace
			}
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:france
				event_target:france = { is_subject = no }
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:france
					is_ally_with = event_target:german_baden
				}
				NOT = { is_ally_with = event_target:german_palatinate }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_palatinate }
		28 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give to German tag 2 (owner of Baden)
		log = "[GetLogInfo]: event annex.1001 option annex.1001.c"
		name = annex.1001.c
		trigger = {
			has_event_target = german_baden
			is_germany_or_splinter_tag = no
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				has_event_target = can_annex_alsace
			}
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:france
				event_target:france = { is_subject = no }
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:france
					is_ally_with = event_target:german_palatinate
				}
				NOT = { is_ally_with = event_target:german_baden }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_baden }
		28 = {
			transfer_state_and_add_claim = yes
			hidden_effect = {
				var:tag_to_release = { PREV = { enable_state_integration_50_compliance = yes } }
			}
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1001 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_alsace
		}
		ai_chance = { base = 100 }
		28 = {
			add_claim_of_ROOT = yes
			enable_state_integration_50_compliance = yes
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1001 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_alsace }
		}
		ai_chance = { base = 0 }
		set_country_flag = ALSACE_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Luxembourg
	id = annex.1002
	title = annexation_LUX_CONQ
	desc = annexation_LUX_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					tag = BLG
					original_tag = WAL
					is_french_tag = yes
					is_germany_or_splinter_tag = yes
				}
			}
			save_event_target_as = can_annex_luxembourg
		}
		if = {
			limit = {
				var:28.owner = { #Alsace-Lorraine
					is_french_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:28.owner = { save_event_target_as = france }
		}
		else_if = {
			limit = {
				var:741.owner = { #Ardennes
					is_french_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:741.owner = { save_event_target_as = france }
		}
		if = {
			limit = { BLG = { ROOT_can_grant_land = yes } }
			BLG = { save_event_target_as = belgium }
		}
		else_if = {
			limit = { WAL = { ROOT_can_grant_land = yes } }
			WAL = { save_event_target_as = belgium }
		}
		if = {
			limit = {
				var:781.owner = { #Western Rhineland
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:781.owner = { save_event_target_as = germany }
		}
	}

	option = { #Give to France
		log = "[GetLogInfo]: event annex.1002 option annex.1002.a"
		name = annex.1002.a
		trigger = {
			has_event_target = france
			is_french_tag = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = can_annex_luxembourg
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:belgium
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:germany
				NOT = { is_ally_with = event_target:france }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		if = {
			limit = { 741 = { is_valid_annexation_state = yes } }
			741 = { transfer_state_and_add_claim = yes }
		}
		8 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give to Belgium
		log = "[GetLogInfo]: event annex.1002 option annex.1002.b"
		name = annex.1002.b
		trigger = {
			has_event_target = belgium
			741 = {
				OR = {
					is_valid_annexation_state = yes
					is_owned_by = event_target:belgium
				}
			}
			NOT = {
				tag = BLG
				original_tag = WAL
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = can_annex_luxembourg
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:france
				NOT = { is_ally_with = event_target:belgium }
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:germany
				NOT = { is_ally_with = event_target:belgium }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		8 = { transfer_state_and_add_claim = yes }
		if = {
			limit = { owns_state = 741 } #Ardennes
			741 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1002 option annex.1002.c"
		name = annex.1002.c
		trigger = {
			has_event_target = germany
			is_germany_or_splinter_tag = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = can_annex_luxembourg
			}
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:france
					is_ally_with = event_target:belgium
				}
				NOT = { is_ally_with = event_target:germany }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		8 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1002 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_luxembourg
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = belgium
				is_french_tag = yes
				NOT = { owns_state = 948 } #Liège
			}
		}
		8 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1002 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_luxembourg }
		}
		ai_chance = { base = 0 }
		set_country_flag = LUX_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of the Rhineland
	id = annex.1003
	title = annexation_RHI_CONQ
	desc = annexation_RHI_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = RHI } }
				add_to_temp_array = { core_removal_array = RHI }
				remove_all_cores_and_claims_of_tags = yes
				RHI = { remove_ideas = RHI_rhenish_reparations }
			}
			if = {
				limit = {
					OR = {
						42 = { is_valid_annexation_state = yes } #Western Rhineland
						781 = { is_valid_annexation_state = yes } #Palatinate
					}
				}
				save_event_target_as = controls_rhine_west_bank
			}
			if = {
				limit = {
					51 = { is_valid_annexation_state = yes } #Eastern Rhineland
				}
				save_event_target_as = controls_rhine_east_bank
			}
			if = {
				limit = {
					var:55.owner = { #Hesse
						is_germany_or_splinter_tag = yes
						ROOT_can_grant_land = yes
					}
				}
				var:55.owner = { save_event_target_as = germany }
			}
		}
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1003 option annex.1003.a"
		name = annex.1003.a
		trigger = {
			NOT = { country_exists = RHI }
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_major = yes
			}
			modifier = {
				factor = 0
				has_event_target = germany
				AI_trigger_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 4
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
		}
		set_temp_variable = { tag_to_release = RHI }
		every_state = {
			limit = { is_rhineland = yes }
			remove_claim_and_add_core_of_target = yes
		}
		release_targeted_tag = yes
	}

	option = { #puppet with reparations
		log = "[GetLogInfo]: event annex.1003 option annex.1003.b"
		name = annex.1003.b
		trigger = {
			is_major = yes
			NOT = { country_exists = RHI }
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				has_event_target = germany
				AI_trigger_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 4
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
		}
		set_temp_variable = { tag_to_release = RHI }
		every_state = {
			limit = { is_rhineland = yes }
			remove_claim_and_add_core_of_target = yes
		}
		release_targeted_tag = yes
		var:tag_to_release = { add_ideas = RHI_rhenish_reparations }
	}

	option = { #give it to Germany
		log = "[GetLogInfo]: event annex.1003 option annex.1003.c"
		name = annex.1003.c
		trigger = {
			has_event_target = germany
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = event_target:germany }
		if = {
			limit = { var:tag_to_release = { original_tag = RHI } }
			every_owned_state = {
				limit = {
					is_rhineland = yes
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_without_overriding_occupation = yes
			}
		}
		else = {
			every_state = {
				limit = {
					is_rhineland = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
			every_owned_state = {
				limit = {
					is_rhineland = yes
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_without_overriding_occupation = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #occupy Rhineland, give the rest to Germany
		log = "[GetLogInfo]: event annex.1003 option annex.1003.d"
		name = annex.1003.d
		trigger = {
			is_french_tag = yes
			has_event_target = controls_rhine_west_bank
			has_event_target = germany
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		42 = { add_claim_of_ROOT = yes }
		781 = { add_claim_of_ROOT = yes }
		occupy_medium_country = yes

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:germany }
		51 = { add_core_of_target_and_transfer_if_owned = yes }
	}

	option = { #occupy Rhineland
		log = "[GetLogInfo]: event annex.1003 option annex.1003.e"
		name = annex.1003.e
		trigger = {
			is_french_tag = yes
			has_event_target = controls_rhine_west_bank
			NOT = { has_event_target = controls_rhine_east_bank }
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		42 = { add_claim_of_ROOT = yes }
		781 = { add_claim_of_ROOT = yes }
		occupy_medium_country = yes
	}

	option = { #give it to GEX
		log = "[GetLogInfo]: event annex.1003 option annex.europe.give_to_gex"
		name = annex.europe.give_to_gex
		trigger = {
			GEX = { is_ally_of_ROOT = yes }
		}
		every_owned_state = {
			limit = {
				is_rhineland = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = GEX
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1003 option annex.occupation"
		name = annex.occupation
		trigger = {
			OR = {
				is_french_tag = no
				has_event_target = controls_rhine_east_bank
			}
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		if = {
			limit = { is_french_tag = yes }
			42 = { add_claim_of_ROOT = yes }
			781 = { add_claim_of_ROOT = yes }
		}
		occupy_large_country = yes
		set_country_flag = RHI_CONQ
	}
}

country_event = { #Fate of North Germany
	id = annex.1004
	title = annexation_NGF_CONQ
	desc = annexation_NGF_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = NGF } }
				add_to_temp_array = { core_removal_array = NGF }
				remove_all_cores_and_claims_of_tags = yes
			}
		}
		if = {
			limit = {
				var:147.owner = { #Prussian Saxony
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:147.owner = { save_event_target_as = german_magdeburg }
		}
		if = {
			limit = {
				var:60.owner = { #Franconia
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_magdeburg }
				}
			}
			var:60.owner = { save_event_target_as = german_franconia }
		}
		if = {
			limit = {
				var:51.owner = { #Eastern Rhineland
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_magdeburg }
					NOT = { tag = event_target:german_franconia }
				}
			}
			var:51.owner = { save_event_target_as = german_rhineland }
		}
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1004 option annex.1004.a"
		name = annex.1004.a
		trigger = {
			NOT = { country_exists = NGF }
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					has_event_target = german_magdeburg
					has_event_target = german_franconia
					has_event_target = german_rhineland
				}
				AI_trigger_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 4
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
		}
		set_temp_variable = { tag_to_release = NGF }
		every_state = {
			limit = { is_north_germany = yes }
			add_core_of = var:tag_to_release
		}
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Give to German tag 1 (owner of Prussian Saxony)
		log = "[GetLogInfo]: event annex.1004 option annex.1004.b"
		name = annex.1004.b
		trigger = {
			has_event_target = german_magdeburg
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = no
				OR = {
					is_ally_with = event_target:german_franconia
					is_ally_with = event_target:german_rhineland
					AND = {
						is_major = yes
						NOT = { country_exists = NGF }
					}
				}
				NOT = { is_ally_with = event_target:german_magdeburg }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_magdeburg }
		every_state = {
			limit = { is_north_germany = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_north_germany = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Give to German tag 2 (owner of Franconia)
		log = "[GetLogInfo]: event annex.1004 option annex.1004.c"
		name = annex.1004.c
		trigger = {
			has_event_target = german_franconia
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = no
				OR = {
					is_ally_with = event_target:german_magdeburg
					is_ally_with = event_target:german_rhineland
					AND = {
						is_major = yes
						NOT = { country_exists = NGF }
					}
				}
				NOT = { is_ally_with = event_target:german_franconia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_franconia }
		every_state = {
			limit = { is_north_germany = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_north_germany = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Give to German tag 3 (owner of Eastern Rhineland)
		log = "[GetLogInfo]: event annex.1004 option annex.1004.d"
		name = annex.1004.d
		trigger = {
			has_event_target = german_rhineland
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = no
				OR = {
					is_ally_with = event_target:german_magdeburg
					is_ally_with = event_target:german_franconia
					AND = {
						is_major = yes
						NOT = { country_exists = NGF }
					}
				}
				NOT = { is_ally_with = event_target:german_rhineland }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_rhineland }
		every_state = {
			limit = { is_north_germany = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_north_germany = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #give it to GEX
		log = "[GetLogInfo]: event annex.1004 option annex.europe.give_to_gex"
		name = annex.europe.give_to_gex
		trigger = {
			GEX = { is_ally_of_ROOT = yes }
		}
		every_owned_state = {
			limit = {
				is_north_germany = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = GEX
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1004 option annex.occupation"
		name = annex.occupation
		trigger = {
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		occupy_large_country = yes
		set_country_flag = NGF_CONQ
	}
}

country_event = { #Fate of Northern Schleswig
	id = annex.1005
	title = annexation_SCHLESWIG_CONQ
	desc = annexation_SCHLESWIG_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					is_germany_or_splinter_tag = yes
					original_tag = DEN
					original_tag = SCA
				}
			}
			save_event_target_as = can_annex_northern_schleswig
		}
		if = {
			limit = {
				var:99.owner = { #Jutland
					OR = {
						original_tag = DEN
						original_tag = SCA
					}
					ROOT_can_grant_land = yes
				}
			}
			var:99.owner = { save_event_target_as = denmark }
		}
		if = {
			limit = {
				var:58.owner = { #Schleswig-Holstein
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:58.owner = { save_event_target_as = germany }
		}
	}

	option = { #Give it to Denmark/Scandinavia
		log = "[GetLogInfo]: event annex.1005 option annex.1005.a"
		name = annex.1005.a
		trigger = {
			has_event_target = denmark
			NOT = { has_event_target = can_annex_northern_schleswig }
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				is_ally_with = event_target:germany
				NOT = { is_ally_with = event_target:denmark }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:denmark }
		782 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to the Germans
		log = "[GetLogInfo]: event annex.1005 option annex.1005.b"
		name = annex.1005.b
		trigger = {
			has_event_target = germany
			NOT = { has_event_target = can_annex_northern_schleswig }
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				has_event_target = denmark
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:denmark
				NOT = { is_ally_with = event_target:germany }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		782 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1005 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_northern_schleswig
		}
		ai_chance = { base = 1000 }
		add_state_claim = 782 #Northern Schleswig
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1005 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_northern_schleswig }
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = SCHLESWIG_CONQ
	}
}

country_event = { #Fate of Brandenburg
	id = annex.1006
	title = annexation_BRANDENBURG_CONQ
	desc = annexation_BRANDENBURG_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = PRE } }
				add_to_temp_array = { core_removal_array = PRE }
				remove_all_cores_and_claims_of_tags = yes
				PRE = {
					drop_cosmetic_tag = yes
					if = {
						limit = { has_character = RUS_boris_romanov }
						RUS_boris_romanov = {
							set_character_name = RUS_boris_romanov
							remove_all_country_leader_roles = yes
							set_nationality = RUS
						}
					}
				}
			}
			GRU = {
				if = {
					limit = {
						exists = no
						has_character = RUS_boris_romanov
					}
					RUS_boris_romanov = {
						set_character_name = RUS_boris_romanov
						remove_all_country_leader_roles = yes
						set_nationality = RUS
					}
				}
			}
			if = {
				limit = {
					var:59.owner = { #Hanover
						is_germany_or_splinter_tag = yes
						ROOT_can_grant_land = yes
						NOT = { tag = PRE }
					}
				}
				var:59.owner = { save_event_target_as = german_hanover }
			}
			if = {
				limit = {
					var:58.owner = { #Schleswig-Holstein
						is_germany_or_splinter_tag = yes
						ROOT_can_grant_land = yes
						NOT = { tag = PRE }
						NOT = { tag = event_target:german_hanover }
					}
				}
				var:58.owner = { save_event_target_as = german_holstein }
			}
		}
	}

	option = { #puppet PRE
		log = "[GetLogInfo]: event annex.1006 option annex.1006.a"
		name = annex.1006.a
		trigger = {
			NOT = { country_exists = PRE }
			64 = { is_valid_annexation_state = yes } #Brandenburg
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				RUS_can_crown_boris_in_germany = yes
			}
			modifier = {
				factor = 0
				OR = {
					has_event_target = german_hanover
					has_event_target = german_holstein
				}
				AI_trigger_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 4
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
		}
		set_temp_variable = { tag_to_release = PRE }
		every_state = {
			limit = { is_brandenburg = yes }
			add_core_of = var:tag_to_release
		}
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #puppet PRE with Romanov monarch
		log = "[GetLogInfo]: event annex.1006 option annex.1006.b"
		name = annex.1006.b
		trigger = {
			NOT = { country_exists = PRE }
			64 = { is_valid_annexation_state = yes } #Brandenburg
			RUS_can_crown_boris_in_germany = yes
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = PRE }
		every_state = {
			limit = { is_brandenburg = yes }
			add_core_of = var:tag_to_release
		}
		release_targeted_tag = yes
		var:tag_to_release = {
			hidden_effect = { set_cosmetic_tag = PRE_monarchy }
			RUS_create_puppet_boris_romanov = yes
		}
		recheck_annexations = yes
	}

	option = { #Give to PRE
		log = "[GetLogInfo]: event annex.1006 option annex.1006.c"
		name = annex.1006.c
		trigger = {
			PRE = { ROOT_can_grant_land = yes }
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:german_hanover
					is_ally_with = event_target:german_holstein
				}
				NOT = { is_ally_with = PRE }
			}
		}
		set_temp_variable = { tag_to_release = PRE }
		every_state = {
			limit = { is_brandenburg = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_brandenburg = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Give to German tag 1 (owner of Hanover)
		log = "[GetLogInfo]: event annex.1006 option annex.1006.d"
		name = annex.1006.d
		trigger = {
			has_event_target = german_hanover
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = no
				OR = {
					is_ally_with = PRE
					is_ally_with = event_target:german_holstein
					AND = {
						is_major = yes
						NOT = { country_exists = PRE }
					}
				}
				NOT = { is_ally_with = event_target:german_hanover }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_hanover }
		if = {
			limit = { 64 = { is_valid_annexation_state = yes } } #Brandenburg
			every_state = {
				limit = {
					OR = {
						is_brandenburg = yes
						is_saxony = yes
					}
				}
				add_core_of = var:tag_to_release
			}
			every_owned_state = {
				limit = {
					OR = {
						is_brandenburg = yes
						is_saxony = yes
					}
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_to = var:tag_to_release
			}
		}
		else = {
			every_state = {
				limit = { is_brandenburg = yes }
				add_core_of = var:tag_to_release
			}
			every_owned_state = {
				limit = {
					is_brandenburg = yes
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_to = var:tag_to_release
			}
		}
		recheck_annexations = yes
	}

	option = { #Give to German tag 2 (owner of Schleswig-Holstein)
		log = "[GetLogInfo]: event annex.1006 option annex.1006.e"
		name = annex.1006.e
		trigger = {
			has_event_target = german_holstein
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = no
				OR = {
					is_ally_with = PRE
					is_ally_with = event_target:german_hanover
					AND = {
						is_major = yes
						NOT = { country_exists = PRE }
					}
				}
				NOT = { is_ally_with = event_target:german_holstein }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_holstein }
		if = {
			limit = { 64 = { is_valid_annexation_state = yes } } #Brandenburg
			every_state = {
				limit = {
					OR = {
						is_brandenburg = yes
						is_saxony = yes
					}
				}
				add_core_of = var:tag_to_release
			}
			every_owned_state = {
				limit = {
					OR = {
						is_brandenburg = yes
						is_saxony = yes
					}
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_to = var:tag_to_release
			}
		}
		else = {
			every_state = {
				limit = { is_brandenburg = yes }
				add_core_of = var:tag_to_release
			}
			every_owned_state = {
				limit = {
					is_brandenburg = yes
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_to = var:tag_to_release
			}
		}
		recheck_annexations = yes
	}

	option = { #give it to GEX
		log = "[GetLogInfo]: event annex.1006 option annex.europe.give_to_gex"
		name = annex.europe.give_to_gex
		trigger = {
			GEX = { is_ally_of_ROOT = yes }
		}
		every_state = {
			limit = {
				region = 8 #Lower Germany
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = GEX
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1006 option annex.occupation"
		name = annex.occupation
		trigger = {
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { factor = 0 }
		set_country_flag = PRE_CONQ
		occupy_large_country = yes
	}
}

country_event = { #Fate of West Prussia
	id = annex.1007
	title = annexation_WESTPRUSSIA_CONQ
	desc = annexation_WESTPRUSSIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				POL = {
					OR = {
						owns_state = 86 #Posen
						owns_state = 777 #Masuria
					}
					ROOT_can_grant_land = yes
				}
			}
			POL = { save_event_target_as = poland }
		}
		if = {
			limit = {
				var:63.owner = { #Farther Pomerania
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:63.owner = { save_event_target_as = german_pomerania }
		}
		if = {
			limit = {
				var:777.owner = { #Masuria
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_pomerania }
				}
			}
			var:777.owner = { save_event_target_as = german_masuria }
		}
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1007 option annex.1007.a"
		name = annex.1007.a
		trigger = {
			has_event_target = poland
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:poland }
				OR = {
					is_ally_with = event_target:german_pomerania
					is_ally_with = event_target:german_masuria
				}
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = POL }
		776 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to German tag 1 (owner of Farther Pomerania)
		log = "[GetLogInfo]: event annex.1007 option annex.1007.b"
		name = annex.1007.b
		trigger = {
			has_event_target = german_pomerania
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				has_event_target = poland
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				has_event_target = german_masuria
				event_target:german_masuria = { original_tag = EPR }
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:poland
					is_ally_with = event_target:german_masuria
				}
				NOT = { is_ally_with = event_target:german_pomerania }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_pomerania }
		776 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to German tag 2 (owner of Masuria)
		log = "[GetLogInfo]: event annex.1007 option annex.1007.c"
		name = annex.1007.c
		trigger = {
			has_event_target = german_masuria
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				has_event_target = poland
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:poland
					is_ally_with = event_target:german_pomerania
				}
				has_event_target = german_masuria
				NOT = {
					is_ally_with = event_target:german_masuria
					event_target:german_masuria = { original_tag = EPR }
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_masuria }
		776 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1007 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = POL
				is_germany_or_splinter_tag = yes
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT } #Warsaw == RUS has annexed Poland
				}
			}
		}
		ai_chance = { base = 1000 }
		add_state_claim = 776
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1007 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				original_tag = POL
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = WESTPRUSSIA_CONQ
	}
}

country_event = { #Fate of East Prussia
	id = annex.1008
	title = annexation_EASTPRUSSIA_CONQ
	desc = annexation_EASTPRUSSIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		188 = { retain_state = yes } #Memel
		776 = { retain_state = yes } #West Prussia
		777 = { retain_state = yes } #Masuria
	}

	option = { #Release East Prussia
		log = "[GetLogInfo]: event annex.1008 option annex.1008.a"
		name = annex.1008.a
		trigger = {
			is_germany_or_splinter_tag = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				original_tag = POL
				has_government = national_populist
			}
		}
		set_temp_variable = { tag_to_release = EPR }
		every_state = {
			limit = { is_prussia = yes }
			add_core_of = var:tag_to_release
		}
		release_targeted_tag = yes
	}

	option = { #Give it to the Germans
		log = "[GetLogInfo]: event annex.1008 option annex.1008.b"
		name = annex.1008.b
		trigger = {
			is_germany_or_splinter_tag = no
			var:63.owner = {
				is_germany_or_splinter_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				original_tag = POL
				has_government = national_populist
			}
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = yes
				OR = {
					NOT = {
						any_country_with_original_tag = {
							original_tag_to_check = GRU
							is_ally_with = ROOT
						}
					}
					AND = {
						POL = { ROOT_can_grant_land = yes }
						OR = {
							776 = {
								OR = {
									is_owned_by = POL
									is_valid_annexation_state = yes
								}
							}
							777 = {
								OR = {
									is_owned_by = POL
									is_valid_annexation_state = yes
								}
							}
						}
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 63.owner }
		5 = { transfer_state_and_add_claim = yes } #East Prussia
	}

	option = { #Annex East Prussia
		log = "[GetLogInfo]: event annex.1008 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = POL
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					has_government = national_populist
					var:63.owner = { is_germany_or_splinter_tag = no }
					var:63.owner = { ROOT_can_grant_land = no }
				}
			}
		}
		add_state_claim = 5
		occupy_medium_country = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1008 option annex.integration"
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = { base = 1000 }
		add_state_claim = 5
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1008 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = EASTPRUSSIA_CONQ
	}
}

country_event = { #Fate of Posen
	id = annex.1009
	title = annexation_POSEN_CONQ
	desc = annexation_POSEN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { POL = { ROOT_can_grant_land = yes } }
			POL = { save_event_target_as = poland }
		}
		if = {
			limit = {
				var:66.owner = { #Lower Silesia
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:66.owner = { save_event_target_as = german_silesia }
		}
		if = {
			limit = {
				var:68.owner = { #Neumark
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_silesia }
				}
			}
			var:68.owner = { save_event_target_as = german_neumark }
		}
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1009 option annex.1009.a"
		name = annex.1009.a
		trigger = {
			has_event_target = poland
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:german_silesia
					is_ally_with = event_target:german_neumark
				}
				NOT = { is_ally_with = event_target:poland }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:poland }
		86 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give to German tag 1 (owner of Lower Silesia)
		log = "[GetLogInfo]: event annex.1009 option annex.1009.b"
		name = annex.1009.b
		trigger = {
			has_event_target = german_silesia
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				has_event_target = poland
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:poland
					is_ally_with = event_target:german_neumark
				}
				NOT = { is_ally_with = event_target:german_silesia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_silesia }
		86 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give to German tag 2 (owner of Neumark)
		log = "[GetLogInfo]: event annex.1009 option annex.1009.c"
		name = annex.1009.c
		trigger = {
			has_event_target = german_neumark
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				has_event_target = poland
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:poland
					is_ally_with = event_target:german_silesia
				}
				NOT = { is_ally_with = event_target:german_neumark }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_neumark }
		86 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1009 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = POL
				is_germany_or_splinter_tag = yes
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT } #== RUS has annexed Poland
				}
			}
		}
		ai_chance = { base = 1000 }
		86 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1009 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				original_tag = POL
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = POSEN_CONQ
	}
}

country_event = { #Fate of Masuria
	id = annex.1010
	title = annexation_MASURIA_CONQ
	desc = annexation_MASURIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { POL = { ROOT_can_grant_land = yes } }
			POL = { save_event_target_as = poland }
		}
		if = {
			limit = {
				var:5.owner = { #East Prussia
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:5.owner = { save_event_target_as = germany }
		}
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1010 option annex.1010.a"
		name = annex.1010.a
		trigger = {
			has_event_target = poland
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				AI_trigger_country_wants_to_dismantle_germany = no
				is_ally_with = event_target:germany
				NOT = { is_ally_with = event_target:poland }
			}
		}
		set_temp_variable = { tag_to_release = event_target:poland }
		777 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to the Germans
		log = "[GetLogInfo]: event annex.1010 option annex.1010.b"
		name = annex.1010.b
		trigger = {
			has_event_target = germany
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_event_target = poland
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:poland
				NOT = { is_ally_with = event_target:germany }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		777 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1010 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = POL
				is_germany_or_splinter_tag = yes
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 1000 }
		777 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1010 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				original_tag = POL
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = MASURIA_CONQ
	}
}

country_event = { #Fate of Memel
	id = annex.1011
	title = annexation_MEMEL_CONQ
	desc = annexation_MEMEL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = LIT
					is_germany_or_splinter_tag = yes
					AND = {
						original_tag = BAT
						11 = { is_claim_or_core_of_PREV = yes } #Kaunas
					}
				}
			}
			save_event_target_as = can_annex_memel
		}
		if = {
			limit = { LIT = { ROOT_can_grant_land = yes } }
			LIT = { save_event_target_as = lithuania }
		}
		else_if = {
			limit = {
				BAT = {
					is_ally_of_ROOT = yes
					11 = { is_claim_or_core_of_PREV = yes } #Kaunas
				}
			}
			BAT = { save_event_target_as = lithuania }
		}
		if = {
			limit = {
				var:5.owner = { #East Prussia
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:5.owner = { save_event_target_as = germany }
		}
	}

	option = { #Give it to Lithuania
		log = "[GetLogInfo]: event annex.1011 option annex.1011.a"
		name = annex.1011.a
		trigger = {
			has_event_target = lithuania
			NOT = { has_event_target = can_annex_memel }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_ally_with = event_target:germany
				NOT = { is_ally_with = event_target:lithuania }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:lithuania }
		188 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to the Germans
		log = "[GetLogInfo]: event annex.1011 option annex.1011.b"
		name = annex.1011.b
		trigger = {
			has_event_target = germany
			NOT = { has_event_target = can_annex_memel }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_event_target = lithuania
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:lithuania
				NOT = { is_ally_with = event_target:germany }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		188 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to POL
		log = "[GetLogInfo]: event annex.1011 option annex.1011.c"
		name = annex.1011.c
		trigger = {
			NOT = { has_event_target = can_annex_memel }
			POL = {
				owns_state = 5 #East Prussia
				is_ally_of_ROOT = yes
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_event_target = lithuania
			}
		}
		set_temp_variable = { tag_to_release = POL }
		188 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1011 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				has_event_target = can_annex_memel
				AND = {
					owns_state = 189 #Samogitia
					OR = {
						original_tag = POL
						is_russian_tag = yes
						is_LITBEL = yes
					}
				}
				AND = {
					original_tag = POL
					owns_state = 5 #East Prussia
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				original_tag = POL
				has_event_target = lithuania
			}
		}
		add_state_claim = 188
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1011 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_memel }
			NOT = {
				AND = {
					owns_state = 189 #Samogitia
					OR = {
						original_tag = POL
						is_russian_tag = yes
						is_LITBEL = yes
					}
				}
				AND = {
					original_tag = POL
					owns_state = 5 #East Prussia
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = MEMEL_CONQ
	}
}

country_event = { #Fate of Upper Silesia
	id = annex.1012
	title = annexation_UPPERSILESIA_CONQ
	desc = annexation_UPPERSILESIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { POL = { ROOT_can_grant_land = yes } }
			POL = { save_event_target_as = poland }
		}
		if = {
			limit = {
				var:66.owner = { #Lower Silesia
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:66.owner = { save_event_target_as = germany }
		}
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1012 option annex.1012.a"
		name = annex.1012.a
		trigger = {
			has_event_target = poland
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_ally_with = event_target:germany
				NOT = { is_ally_with = event_target:poland }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:poland }
		67 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to the Germans
		log = "[GetLogInfo]: event annex.1012 option annex.1012.b"
		name = annex.1012.b
		trigger = {
			has_event_target = germany
			is_germany_or_splinter_tag = no
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_event_target = poland
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:poland
				NOT = { is_ally_with = event_target:germany }
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		67 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1012 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = POL
				is_germany_or_splinter_tag = yes
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 1000 }
		add_state_claim = 67
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1012 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				original_tag = POL
				AND = {
					is_russian_tag = yes
					10 = { is_claimed_by = ROOT }
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = UPPERSILESIA_CONQ
	}
}

country_event = { #Fate of South Germany
	id = annex.1013
	title = annexation_BAY_CONQ
	desc = annexation_BAY_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = BAY } }
				add_to_temp_array = { core_removal_array = BAY }
				remove_all_cores_and_claims_of_tags = yes
			}
		}
		if = {
			limit = {
				var:55.owner = { #Hesse
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:55.owner = { save_event_target_as = german_hesse }
		}
		if = {
			limit = {
				var:60.owner = { #Thuringia
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_hesse }
				}
			}
			var:60.owner = { save_event_target_as = german_thuringia }
		}
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1013 option annex.1013.a"
		name = annex.1013.a
		trigger = {
			NOT = { country_exists = BAY }
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					has_event_target = german_hesse
					has_event_target = german_thuringia
				}
				AI_trigger_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 4
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
		}
		set_temp_variable = { tag_to_release = BAY }
		every_state = {
			limit = { region = 7 } #Upper Germany
			add_core_of = var:tag_to_release
		}
		release_targeted_tag = yes
		BAY_puppet_setup = yes
		recheck_annexations = yes
	}

	option = { #Give to German tag 1 (owner of Hesse)
		log = "[GetLogInfo]: event annex.1013 option annex.1013.b"
		name = annex.1013.b
		trigger = {
			has_event_target = german_hesse
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				original_tag = AUS
				has_subject = event_target:german_hesse
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:german_thuringia
					AND = {
						is_major = yes
						NOT = { country_exists = BAY }
					}
				}
				NOT = { is_ally_with = event_target:german_hesse }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_hesse }
		every_state = {
			limit = { is_south_germany = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_south_germany = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Give to German tag 2 (owner of Thuringia)
		log = "[GetLogInfo]: event annex.1013 option annex.1013.c"
		name = annex.1013.c
		trigger = {
			has_event_target = german_thuringia
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:german_hesse
					AND = {
						is_major = yes
						NOT = { country_exists = BAY }
					}
				}
				NOT = { is_ally_with = event_target:german_thuringia }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_thuringia }
		every_state = {
			limit = { is_south_germany = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_south_germany = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #give to AUS
		log = "[GetLogInfo]: event annex.1013 option annex.1013.d"
		name = annex.1013.d
		trigger = {
			AUS = {
				is_ally_of_ROOT = yes
				AUS_can_annex_german_lands = yes
			}
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = AUS }
		if = {
			limit = { has_subject = AUS }
			every_state = {
				limit = { is_south_germany = yes }
				add_claim_of_target_and_transfer_if_owned = yes
				hidden_effect = {
					var:tag_to_release = { PREV = { enable_state_integration_50_compliance = yes } }
				}
			}
		}
		else = {
			every_state = {
				limit = { is_south_germany = yes }
				transfer_if_owned = yes
				hidden_effect = {
					var:tag_to_release = { PREV = { enable_state_integration_50_compliance = yes } }
				}
			}
		}
		if = {
			limit = { AUS = { AUS_has_habsburgs = no } }
			var:tag_to_release = { set_cosmetic_tag = AUS_SGF }
		}
		recheck_annexations = yes
	}

	option = { #give to GEX
		log = "[GetLogInfo]: event annex.1013 option annex.europe.give_to_gex"
		name = annex.europe.give_to_gex
		trigger = {
			GEX = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 200 }
		every_owned_state = {
			limit = { is_south_germany = yes }
			transfer_state_to = GEX
		}
		recheck_annexations = yes
	}

	option = { #integrate the south German lands
		log = "[GetLogInfo]: event annex.1013 option annex.1013.e"
		name = annex.1013.e
		trigger = {
			original_tag = AUS
			AUS_can_annex_german_lands = yes
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 80 }
		every_state = {
			limit = { is_south_germany = yes }
			add_claim_of_ROOT = yes
			enable_state_integration_50_compliance = yes
		}
		occupy_medium_country = yes
		if = {
			limit = { AUS_has_habsburgs = no }
			set_cosmetic_tag = AUS_SGF
		}
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1013 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				AND = {
					original_tag = AUS
					AUS_can_annex_german_lands = yes
				}
				GEX = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = { base = 0 }
		occupy_large_country = yes
		set_country_flag = BAY_CONQ
	}
}

country_event = { #Fate of Poland
	id = annex.1014
	title = annexation_POL_CONQ
	desc = annexation_POL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			POL = {
				POL_remove_monarchy = yes
				if = {
					limit = { has_character = AUS_karl_albrecht_von_habsburg }
					AUS_karl_albrecht_von_habsburg = {
						set_character_name = AUS_karl_albrecht_von_habsburg
						clr_character_flag = is_monarch
						remove_all_country_leader_roles = yes
						if = {
							limit = { AUS = { AUS_has_habsburgs = yes } }
							set_nationality = AUS
						}
						else = {
							retire = yes
						}
					}
				}
				if = {
					limit = { has_character = POL_konstanty_rokossowski }
					POL_konstanty_rokossowski = { set_nationality = FRA }
				}
				if = {
					limit = { has_cosmetic_tag = POL_AUS_kingdom }
					drop_cosmetic_tag = yes
				}
			}
			every_state = {
				limit = {
					OR = {
						is_core_of = POL
						is_claimed_by = POL
					}
					NOT = {
						state = 10 #Warsaw
						state = 87 #Kalisz
						state = 88 #Krakow
						state = 90 #Kielce
						state = 91 #Lwow
						state = 92 #Lublin
						state = 97 #Bialystok
						state = 98 #Plock
						state = 1088 #Chelm
					}
				}
				remove_core_of = POL
				remove_claim_by = POL
			}
			80 = { retain_state = yes } #Cernauti
			91 = { retain_state = yes } #Lwow
			97 = { retain_state = yes } #Bialystok
			713 = { retain_state = yes } #Suceava
			1088 = { retain_state = yes } #Chelm
			if = {
				limit = { original_tag = AUS }
				88 = { retain_state = yes } #Krakow
			}
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1014 option annex.1014.a"
		name = annex.1014.a
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = yes
			}
		}
		set_temp_variable = { tag_to_release = POL }
		release_targeted_tag = yes
		POL_puppet_setup = yes
		recheck_annexations = yes
	}

	option = { #liberate with GAL
		log = "[GetLogInfo]: event annex.1014 option annex.1014.b"
		name = annex.1014.b
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = yes
			}
			modifier = {
				factor = 0.25
				UKR = { is_ally_of_ROOT = yes }
			}
		}
		trigger = {
			OR = {
				has_subject = GAL
				91 = { is_valid_annexation_state = yes } #Lwow
				88 = { #Krakow
					is_valid_annexation_state = yes
					NOT = { is_core_of = POL }
				}
			}
		}
		88 = { clear_retain_state = yes } #Krakow
		91 = { clear_retain_state = yes } #Lwow
		1088 = { clear_retain_state = yes } #Chelm
		73 = { retain_state = yes } #Transcarpathia
		80 = { retain_state = yes } #Cernauti
		713 = { retain_state = yes } #Suceava

		hidden_effect = {
			if = {
				limit = { has_subject = GAL }
				GAL = {
					transfer_units_fraction = {
						target = POL
						army_ratio = 1
						stockpile_ratio = 1
						navy_ratio = 1
						air_ratio = 1
						keep_unit_leaders_trigger = { always = yes }
					}
				}
				annex_country = { target = GAL transfer_troops = yes }
			}
		}

		set_temp_variable = { tag_to_release = POL }
		POL = { set_transfer_target_cores = yes }
		GAL = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_claims = yes

		hidden_effect = {
			puppet_released_tag_nocosmetic = yes
			POL_galicia_joins_poland = yes
			POL_puppet_setup = yes
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1014 option annex.1014.c"
		name = annex.1014.c
		trigger = {
			OR = {
				tag = TRM
				RUS_is_expansionist = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_monarchy = no
			}
		}
		every_state = {
			limit = {
				OR = {
					state = 10 #Warsaw
					state = 87 #Kalisz
					state = 90 #Kielce
					state = 92 #Lublin
					state = 97 #Bialystok
					state = 98 #Plock
					state = 1088 #Chelm
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		set_country_flag = POL_CONQ
		occupy_medium_country = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1014 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				tag = TRM
				RUS_is_expansionist = yes
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = POL_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Bialystok
	id = annex.1015
	title = annexation_BIALYSTOK_CONQ
	desc = annexation_BIALYSTOK_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = POL
					AND = {
						original_tag = WHR
						owns_state = 94 #Volkovysk
					}
					AND = {
						original_tag = LIT
						owns_state = 96 #Vilnius
					}
				}
			}
			save_event_target_as = can_annex_bialystok
		}
		if = {
			limit = { POL = { ROOT_can_grant_land = yes } }
			POL = { save_event_target_as = poland }
		}
		if = {
			limit = {
				var:204.owner = { #Novogrudok
					OR = {
						AND = {
							tag = WHR
							ROOT_can_grant_land = yes
						}
						AND = {
							is_russian_tag = yes
							is_ally_with = ROOT
							NOT = { tag = ROOT }
						}
					}
					OR = {
						owns_state = 94 #Volkovysk
						94 = { is_valid_annexation_state = yes }
					}
				}
			}
			var:204.owner = { save_event_target_as = belarus }
		}
		if = {
			limit = {
				LIT = {
					ROOT_can_grant_land = yes
					OR = {
						owns_state = 96 #Vilnius
						96 = { is_valid_annexation_state = yes }
					}
				}
			}
			LIT = { save_event_target_as = lithuania }
		}
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1015 option annex.1015.a"
		name = annex.1015.a
		trigger = {
			has_event_target = poland
			NOT = { has_event_target = can_annex_bialystok }
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = event_target:poland }
		97 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to Belarus
		log = "[GetLogInfo]: event annex.1015 option annex.1015.b"
		name = annex.1015.b
		trigger = {
			has_event_target = belarus
			NOT = { has_event_target = can_annex_bialystok }
		}
		ai_chance = { base = 20 }
		set_temp_variable = { tag_to_release = event_target:belarus }
		94 = { transfer_state_and_add_claim = yes } #Volkovysk
		97 = { transfer_state_and_add_claim = yes } #Bialystok
	}

	option = { #Give it to Lithuania
		log = "[GetLogInfo]: event annex.1015 option annex.1015.c"
		name = annex.1015.c
		trigger = {
			has_event_target = lithuania
			NOT = { has_event_target = can_annex_bialystok }
		}
		ai_chance = { base = 20 }
		set_temp_variable = { tag_to_release = event_target:lithuania }
		96 = { transfer_state_and_add_core = yes } #Vilnius
		97 = { transfer_state_and_add_claim = yes } #Bialystok
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1015 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = POL
		}
		97 = { add_claim_of_ROOT = yes } #Bialystok
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1015 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = WHR
			owns_state = 96 #Volkovysk
		}
		94 = { add_claim_of_ROOT = yes } #Volkovysk
		97 = { add_claim_of_ROOT = yes } #Bialystok
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1015 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = LIT
			owns_state = 96 #Vilnius
		}
		96 = { remove_claim_and_add_core_of_ROOT = yes } #Vilnius
		97 = { add_claim_of_ROOT = yes } #Bialystok
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1015 option annex.integration"
		name = annex.integration
		trigger = {
			is_russian_tag = yes
			owns_state = 94 #Volkovysk
			owns_state = 96 #Vilnius
		}
		97 = { add_claim_of_ROOT = yes } #Bialystok
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1015 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				has_event_target = can_annex_bialystok
				AND = {
					is_russian_tag = yes
					owns_state = 94 #Volkovysk
					owns_state = 96 #Vilnius
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = BIALYSTOK_CONQ
	}
}

country_event = { #Fate of Estonia
	id = annex.1016
	title = annexation_EST_CONQ
	desc = annexation_EST_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			EST = {
				if = {
					limit = { NOT = { has_character = EST_johan_laidoner } }
					EST_johan_laidoner = { set_nationality = PREV }
				}
			}
			SCA = {
				every_unit_leader = {
					limit = { has_character_flag = EST_leader }
					set_nationality = EST
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
		}
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1016 option annex.1016.a"
		name = annex.1016.a
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
			}
			modifier = {
				factor = 0
				BAT = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		if = {
			limit = { tag = RUS }
			set_country_flag = RUS_will_liberate_baltic
		}
		set_temp_variable = { tag_to_release = EST }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #give to UBD
		log = "[GetLogInfo]: event annex.1016 option annex.1016.b"
		name = annex.1016.b
		trigger = {
			BAT = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		EST = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1016 option annex.1016.c"
		name = annex.1016.c
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_country_flag = RUS_will_liberate_baltic
			}
		}
		every_state = {
			limit = {
				region = 37 #Baltic States
				is_core_of = EST
			}
			hidden_effect = {
				if = {
					limit = {
						has_resistance = yes
						occupied_country_tag = BAT
					}
					set_temp_variable = { original_compliance = THIS.compliance }
					set_temp_variable = { original_resistance = THIS.resistance }
					cancel_resistance = yes
				}
				start_resistance = EST
				if = {
					limit = { has_variable = original_compliance }
					set_compliance = original_compliance
				}
				if = {
					limit = { has_variable = original_resistance }
					set_resistance = original_resistance
				}
			}
			if = {
				limit = {
					is_claim_or_core_of_ROOT = no
					NOT = {
						is_claim_or_core_of_owner = yes
						owner = {
							NOT = { tag = ROOT }
							is_ally_with = ROOT
						}
					}
				}
				add_claim_by = ROOT
			}
		}
		set_country_flag = RUS_will_annex_baltic
		add_political_power = -25
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1016 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_russian_tag = no
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = EST_CONQ
	}
}

country_event = { #Fate of Latvia
	id = annex.1017
	title = annexation_LAT_CONQ
	desc = annexation_LAT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = BAT } }
				add_to_temp_array = { core_removal_array = BAT }
				remove_all_cores_and_claims_of_tags = yes
			}
			every_state = {
				limit = {
					OR = {
						is_core_of = LAT
						is_claimed_by = LAT
					}
					NOT = { region = 37 } #Baltic States
				}
				remove_core_of = LAT
				remove_claim_by = LAT
			}
			LAT = {
				every_character = {
					limit = { has_character_flag = SOV_character }
					clr_character_flag = SOV_character
					set_nationality = SOV
				}
			}
			880 = { retain_state = yes } #Latgale
		}
	}

	is_triggered_only = yes

	option = { #puppet
		log = "[GetLogInfo]: event annex.1017 option annex.1017.a"
		name = annex.1017.a
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
			}
			modifier = {
				factor = 0
				BAT = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0.25
				tag = GER
			}
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		if = {
			limit = { tag = RUS }
			set_country_flag = RUS_will_liberate_baltic
		}
		set_temp_variable = { tag_to_release = LAT }
		release_targeted_tag = yes
		hidden_effect = {
			LAT = {
				LAT_move_leaders = yes
				if = {
					limit = { has_socialist_government = yes }
					load_focus_tree = LAT_socialist_focus
					unlock_national_focus = LAT_the_second_iskolat
				}
				else = {
					load_focus_tree = LAT_auth_tree
					unlock_national_focus = LAT_2nd_awakening
				}
				if = {
					limit = { has_country_leader = { character = LAT_janis_kurelis } }
					promote_character = {
						character = LAT_karlis_ulmanis
						ideology = authoritarian_democrat_subtype
					}
					promote_character = LAT_kristaps_upelnieks
				}
				if = {
					limit = { controls_state = 842 } #Riga
					remove_ideas = LAT_remember_riga
					set_capital = { state = 842 remember_old_capital = no }
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #Liberate the Baltic Union!
		log = "[GetLogInfo]: event annex.1017 option annex.1017.b"
		name = annex.1017.b
		trigger = {
			NOT = {
				tag = LIT
				tag = EST
				country_exists = BAT
			}
			has_socialist_government = yes
			OR = {
				11 = { is_valid_annexation_state = yes } #Kaunas
				13 = { is_valid_annexation_state = yes } #Estonia
				96 = { is_valid_annexation_state = yes } #Vilnius
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		every_state = {
			limit = {
				region = 37 #Baltic States
				NOT = {
					state = 96 #Vilnius
					state = 880 #Latgale
				}
			}
			add_core_of_target_and_transfer_if_owned = yes
		}
		puppet_released_tag = yes
		setup_puppet_baltic_union = yes
	}

	option = { #restore UBD
		log = "[GetLogInfo]: event annex.1017 option annex.1017.c"
		name = annex.1017.c
		trigger = {
			tag = GER
			NOT = { country_exists = BAT }
		}
		ai_chance = { base = 80 }
		BAT = {
			add_state_core = 12 #Livonia
			add_state_core = 13 #Estonia
			add_state_core = 190 #Courland
			add_state_core = 191 #Northern Livonia
			add_state_core = 842 #Riga
		}
		set_temp_variable = { tag_to_release = BAT }
		release_targeted_tag = yes
		hidden_effect = {
			BAT = { LAT_move_leaders = yes }
		}
		recheck_annexations = yes
	}

	option = { #give to BAT
		log = "[GetLogInfo]: event annex.1017 option annex.1017.d"
		name = annex.1017.d
		trigger = {
			BAT = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		LAT = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_cores = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1017 option annex.1017.e"
		name = annex.1017.e
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_country_flag = RUS_will_liberate_baltic
			}
		}
		every_state = {
			limit = {
				region = 37 #Baltic States
				is_core_of = LAT
			}
			hidden_effect = {
				if = {
					limit = {
						has_resistance = yes
						occupied_country_tag = LAT
					}
					set_temp_variable = { original_compliance = THIS.compliance }
					set_temp_variable = { original_resistance = THIS.resistance }
					cancel_resistance = yes
					start_resistance = LAT
					if = {
						limit = { has_variable = original_compliance }
						set_compliance = original_compliance
					}
					if = {
						limit = { has_variable = original_resistance }
						set_resistance = original_resistance
					}
				}
			}
			if = {
				limit = {
					is_claim_or_core_of_ROOT = no
					NOT = {
						is_claim_or_core_of_owner = yes
						owner = {
							NOT = { tag = ROOT }
							is_ally_with = ROOT
						}
					}
				}
				add_claim_by = ROOT
			}
		}
		set_country_flag = RUS_will_annex_baltic
		add_political_power = -25
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1017 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_russian_tag = no
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = LAT_CONQ
	}
}

country_event = { #Fate of Lithuania
	id = annex.1018
	title = annexation_LIT_CONQ
	desc = annexation_LIT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = LIT
						is_claimed_by = LIT
					}
					NOT = { state = 11 } #Kaunas
					NOT = { state = 96 } #Vilnius
					NOT = { state = 189 } #Samogitia
					NOT = { state = 655 } #Sudovia
				}
				remove_core_of = LIT
				remove_claim_by = LIT
			}
			96 = { retain_state = yes } #Vilnius
			LIT = {
				LIT_remove_monarchy = yes
				remove_ideas = {
					LIT_german_aviation_advisors
					LIT_long_road_to_pluralism_idea
					LIT_german_economic_dominance_1
					LIT_german_economic_dominance_2
				}
				if = {
					limit = { ROOT = { NOT = { has_government = national_populist } } }
					remove_ideas = {
						LIT_aftermath_of_the_coup
						LIT_uprising_army
						LIT_wolfs_state_1
						LIT_wolfs_state_2
						LIT_wolfs_state_3
						LIT_corporate_nation_state_1
						LIT_corporate_nation_state_2
						LIT_corporate_nation_state_3
						LIT_national_purity_1
						LIT_national_purity_2
						LIT_national_purity_3
						LIT_national_purity_4
						LIT_nationalist_fanaticism
						LIT_nationalist_equality
						LIT_nationalist_welfare
					}
				}

				#move back the generals in BAT
				LIT_vincas_vitkauskas = { set_nationality = LIT }
				LIT_kazys_ladiga = { set_nationality = LIT }
				LIT_povilas_julius_labanauskas = { set_nationality = LIT }
			}
		}
	}

	option = { #Release Lithuania
		log = "[GetLogInfo]: event annex.1018 option annex.1018.a"
		name = annex.1018.a
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
			}
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		if = {
			limit = { tag = RUS }
			set_country_flag = RUS_will_liberate_baltic
		}
		set_temp_variable = { tag_to_release = LIT }
		every_owned_state = {
			limit = {
				is_core_of = LIT
				is_claim_or_core_of_ROOT = no
				NOT = { state = 96 } #Vilnius
			}
			transfer_state_to = var:tag_to_release
		}
		puppet_released_tag = yes
		LIT_puppet_setup = yes
	}

	option = { #give to BAT
		log = "[GetLogInfo]: event annex.1018 option annex.1017.c"
		name = annex.1017.c
		trigger = {
			BAT = { is_ally_of_ROOT = yes }
			has_socialist_government = yes
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_country_flag = RUS_will_annex_baltic
			}
		}
		set_temp_variable = { tag_to_release = BAT }
		every_state = {
			limit = {
				is_core_of = LIT
				is_claim_or_core_of_ROOT = no
				NOT = { state = 96 } #Vilnius
			}
			add_core_of_target_and_transfer_if_owned = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1018 option annex.1018.b"
		name = annex.1018.b
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_country_flag = RUS_will_liberate_baltic
			}
		}
		every_state = {
			limit = {
				region = 37 #Baltic States
				is_core_of = LIT
				is_claim_or_core_of_ROOT = no
				NOT = {
					state = 188 #Memel
					AND = {
						is_claim_or_core_of_owner = yes
						owner = {
							NOT = { tag = ROOT }
							is_ally_with = ROOT
						}
					}
				}
			}
			add_claim_by = ROOT
		}
		set_country_flag = RUS_will_annex_baltic
		add_political_power = -40
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1018 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_russian_tag = no
		}
		ai_chance = { base = 0 }
		set_country_flag = LIT_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Vilnius
	id = annex.1019
	title = annexation_VILNIUS_CONQ
	desc = annexation_VILNIUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #give to Lithuania
		log = "[GetLogInfo]: event annex.1019 option annex.1019.a"
		name = annex.1019.a
		trigger = {
			NOT = {
				original_tag = POL
				original_tag = WHR
			}
			LIT = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0.5
				POL = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0
				POL = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = LIT }
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		96 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to BAT
		log = "[GetLogInfo]: event annex.1019 option annex.1019.b"
		name = annex.1019.b
		trigger = {
			NOT = {
				original_tag = POL
				original_tag = WHR
			}
			BAT = {
				is_ally_with = ROOT
				owns_state = 11 #Kaunas
			}
		}
		ai_chance = { base = 1000 }
		set_temp_variable = { tag_to_release = BAT }
		96 = { transfer_state_and_add_core = yes }
	}

	option = { #give to Poland
		log = "[GetLogInfo]: event annex.1019 option annex.1019.c"
		name = annex.1019.c
		trigger = {
			NOT = {
				original_tag = POL
				original_tag = WHR
			}
			POL = {
				ROOT_can_grant_land = yes
				OR = {
					owns_state = 97 #Bialystok
					97 = { is_valid_annexation_state = yes }
				}
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_russian_tag = yes
				owns_state = 11 #Kaunas
			}
			modifier = {
				factor = 0
				LIT = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		96 = { transfer_state_and_add_claim = yes }
		97 = { add_claim_of_target_and_transfer_if_owned = yes }
	}

	option = { #give to White Ruthenia
		log = "[GetLogInfo]: event annex.1019 option annex.1019.d"
		name = annex.1019.d
		trigger = {
			NOT = {
				original_tag = POL
				original_tag = WHR
			}
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					LIT = { is_ally_of_ROOT = yes }
					POL = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		96 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1019 option annex.integration"
		name = annex.integration
		trigger = { original_tag = LIT }
		96 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1019 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = WHR
				AND = {
					original_tag = POL
					owns_state = 97 #Bialystok
				}
				AND = {
					owns_state = 11 #Kaunas
					OR = {
						original_tag = BAT
						is_russian_tag = yes
					}
				}
			}
		}
		ai_chance = { base = 80 }
		96 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1019 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = LIT
				original_tag = WHR
				AND = {
					original_tag = POL
					owns_state = 97 #Bialystok
				}
				AND = {
					owns_state = 11 #Kaunas
					OR = {
						original_tag = BAT
						is_russian_tag = yes
					}
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = VILNIUS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Austria
	id = annex.1020
	title = annexation_AUS_CONQ
	desc = annexation_AUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			AUS = {
				every_character = {
					limit = { AUS_is_habsburg_family_member = yes }
					remove_all_country_leader_roles = yes
					set_nationality = XXA
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = AUS_paternal_autocrat_party_long
					name = AUS_paternal_autocrat_party
				}
				remove_ideas = {
					AUS_financial_ties_broken
					AUS_paid_reparations
					AUS_imperial_development_scheme
					AUS_DNF_political_instability
					AUS_DNF_political_instability-1
					AUS_DNF_political_instability-2
					AUS_kaiser_faith
				}
			}
			every_state = {
				limit = {
					OR = {
						is_core_of = AUS
						is_claimed_by = AUS
						has_variable = ambition_area_AUS
					}
					is_core_austria = no
				}
				remove_core_of = AUS
				remove_claim_by = AUS
				clear_variable = ambition_area_AUS
			}
			39 = { retain_state = yes } #Southern Tyrol
			784 = { retain_state = yes } #Burgenland
			1107 = { retain_state = yes } #Karavanks
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1020 option annex.1020.a"
		name = annex.1020.a
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		release_targeted_tag = yes
		var:tag_to_release = {
			if = {
				limit = {
					ROOT = { has_government = social_liberal }
				}
				set_politics = {
					ruling_party = social_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = social_democrat
					popularity = 60
				}
			}
			else_if = {
				limit = {
					ROOT = { has_government = market_liberal }
				}
				set_politics = {
					ruling_party = social_conservative
					elections_allowed = no
				}
				set_political_party = {
					ideology = social_conservative
					popularity = 60
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #give to Germany
		log = "[GetLogInfo]: event annex.1020 option annex.1020.b"
		name = annex.1020.b
		trigger = {
			is_germany_or_splinter_tag = no
			var:52.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = 52.owner }
		AUS = { set_transfer_target_cores = yes }
		effect_tooltip = { transfer_targeted_territory_and_add_claims = yes }
		hidden_effect = {
			every_state = {
				limit = { is_core_austria = yes }
				if = {
					limit = { NOT = { is_core_of = var:tag_to_release } }
					add_claim_by = var:tag_to_release
				}
				if = {
					limit = { is_valid_annexation_state = yes }
					transfer_state_without_overriding_occupation = yes
				}
				hidden_effect = {
					var:tag_to_release = { PREV = { enable_state_integration_50_compliance = yes } }
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #Danubian Republic of Councils
		log = "[GetLogInfo]: event annex.1020 option annex.1020.c"
		name = annex.1020.c
		trigger = {
			is_germany_or_splinter_tag = no
			AUS = { NOT = { has_completed_focus = AUS_military_occupation } }
			43 = { #Budapest
				is_owned_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = AUS }
		var:tag_to_release = {
			set_cosmetic_tag = AUS_danubia
			add_state_core = 43 #Central Hungary
			add_state_core = 154 #Alfold
			add_state_core = 155 #Transdanubia
			add_state_core = 664 #Miskolc
			add_state_core = 784 #Burgenland
		}
		784 = { clear_retain_state = yes }
		release_targeted_tag_nocosmetic = yes
	}

	option = { #old idea
		log = "[GetLogInfo]: event annex.1020 option annex.integration"
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = { base = 100 }
		every_state = {
			limit = { is_core_austria = yes }
			add_claim_of_ROOT = yes
			enable_state_integration_50_compliance = yes
		}
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1020 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
		}
		ai_chance = { base = 0 }
		set_country_flag = AUS_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Bohemia
	id = annex.1021
	title = annexation_CZE_CONQ
	desc = annexation_CZE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = CZE
						is_claimed_by = CZE
					}
					NOT = { region = 22 } #Bohemia
				}
				remove_core_of = CZE
				remove_claim_by = CZE
				clear_variable = ambition_area_CZE
			}
			924 = { retain_state = yes } #Teschen
			XXA = {
				every_character = {
					limit = { has_character_flag = CZE_character }
					set_nationality = CZE
				}
			}
			CZE = {
				promote_character = {
					character = CZE_jan_syrovy
					ideology = paternal_autocrat_subtype
				}
				CZE_change_portraits = yes
			}
		}
	}

	option = { #Liberate Bohemia
		log = "[GetLogInfo]: event annex.1021 option annex.1021.a"
		name = annex.1021.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_socialist_government = yes
				AUS = {
					is_ally_with = ROOT
					has_cosmetic_tag = AUS_danubia
				}
			}
			modifier = {
				factor = 3
				has_elected_government = yes
			}
		}
		set_temp_variable = { tag_to_release = CZE }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Czechoslovakia
		log = "[GetLogInfo]: event annex.1021 option annex.1021.b"
		name = annex.1021.b
		trigger = {
			70 = {
				is_owned_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = CZE }
		CZE = { set_transfer_target_cores = yes }
		SLO = { set_transfer_target_cores = yes }
		71 = { retain_state = yes } #Danubian Plain
		73 = { retain_state = yes } #Transcarpathia
		1090 = { retain_state = yes } #Pressburg

		release_targeted_tag_from_core_regions_and_add_cores = yes
		var:tag_to_release = { set_cosmetic_tag = CZE_czechoslavakia }
		recheck_annexations = yes
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1021 option annex.1021.c"
		name = annex.1021.c
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
		}
		ai_chance = { base = 1000 }
		set_temp_variable = { tag_to_release = AUS }
		CZE = { set_transfer_target_cores = yes }
		if = {
			limit = { has_subject = AUS }
			transfer_targeted_territory_and_add_cores = yes
		}
		else = {
			transfer_targeted_territory = yes
		}
	}

	option = { #Assimilate
		log = "[GetLogInfo]: event annex.1021 option annex.integration"
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0.15
				has_elected_government = yes
			}
		}
		add_state_claim = 9 #Prague
		add_state_claim = 69 #Liberec
		add_state_claim = 74 #Czech Silesia
		add_state_claim = 75 #Moravia
		add_state_claim = 786 #Budejovice
		add_state_claim = 924 #Teschen
		occupy_medium_country = yes
	}

	option = { #occupation
		log = "[GetLogInfo]: event annex.1021 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = CZE_CONQ
	}
}

country_event = { #Fate of Galicia and Lodomeria
	id = annex.1022
	title = annexation_GAL_CONQ
	desc = annexation_GAL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			GAL = {
				GAL_remove_karl_albrecht = yes
				activate_targeted_decision = { target = POL decision = GAL_unite_with_poland }
			}
			73 = { retain_state = yes } #Transcarpathia
			80 = { retain_state = yes } #Cernauti
			713 = { retain_state = yes } #Suceava

			if = {
				limit = { 88 = { is_valid_annexation_state = yes } } #Krakow
				save_event_target_as = polish_galicia
			}
			if = {
				limit = { 91 = { is_valid_annexation_state = yes } } #Krakow
				save_event_target_as = lwow
			}
			if = {
				limit = {
					OR = {
						91 = { is_valid_annexation_state = yes } #Lwow
						88 = { is_valid_annexation_state = yes } #Stanislawow
					}
				}
				save_event_target_as = ukrainian_galicia
			}
			if = {
				limit = { UKR = { ROOT_can_grant_land = yes } }
				save_event_target_as = ukraine
			}
			if = {
				limit = { POL = { ROOT_can_grant_land = yes } }
				save_event_target_as = poland
			}
			if = {
				limit = {
					is_russian_tag = yes
					OR = {
						owns_state = 199 #Proskurov
						owns_state = 792 #Volhynia
					}
				}
				save_event_target_as = russia_can_annex_galicia
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.a"
		name = annex.1022.a #Liberate Galicia
		trigger = {
			NOT = {
				country_exists = GAL
				original_tag = POL
				original_tag = UKR
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = yes
			}
			modifier = {
				factor = 0
				OR = {
					POL = { is_ally_of_ROOT = yes }
					UKR = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = GAL }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.b"
		name = annex.1022.b #Give to GAL
		trigger = {
			GAL = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = yes
			}
			modifier = {
				factor = 0
				OR = {
					POL = { is_ally_of_ROOT = yes }
					UKR = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = GAL }
		GAL = { set_transfer_target_cores = yes }
		transfer_targeted_territory = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.c"
		name = annex.1022.c #Give to Austria
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = yes
			}
		}
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				OR = {
					owns_state = 70 #Slovakia
					owns_state = 75 #Moravia
				}
				OR = {
					owns_state = 88 #Krakow
					88 = { is_valid_annexation_state = yes }
				}
				OR = {
					owns_state = 91 #Lwow
					owns_state = 73 #Transcarpathia
					91 = { is_valid_annexation_state = yes }
				}
			}
			NOT = {
				original_tag = POL
				original_tag = UKR
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		88 = { add_core_of_target_and_transfer_if_owned = yes }
		89 = { add_core_of_target_and_transfer_if_owned = yes }
		91 = { add_core_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.d"
		name = annex.1022.d #Give to Poland
		trigger = {
			has_event_target = poland
			OR = {
				NOT = { original_tag = UKR }
				NOT = { has_event_target = ukrainian_galicia }
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = yes
				has_event_target = ukrainian_galicia
			}
		}
		set_temp_variable = { tag_to_release = POL }
		88 = { add_claim_of_target_and_transfer_if_owned = yes }
		89 = { add_claim_of_target_and_transfer_if_owned = yes }
		91 = { add_claim_of_target_and_transfer_if_owned = yes }
		POL_galicia_joins_poland = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.e"
		name = annex.1022.e #Give to Ukraine
		trigger = {
			has_event_target = ukraine
			NOT = { has_event_target = polish_galicia }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				original_tag = POL
			}
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		89 = { add_claim_of_target_and_transfer_if_owned = yes }
		91 = { add_claim_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.f"
		name = annex.1022.f #Give to Ukraine, liberate the rest
		trigger = {
			has_event_target = ukraine
			has_event_target = polish_galicia
			NOT = { original_tag = POL }
			NOT = { country_exists = GAL }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
			}
			modifier = {
				factor = 0
				POL = { is_ally_of_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = GAL }
		var:tag_to_release = { transfer_state = 88 } #Krakow
		puppet_released_tag = yes

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = UKR }
		89 = { add_claim_of_target_and_transfer_if_owned = yes }
		91 = { add_claim_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.g"
		name = annex.1022.g #Split between UKR and POL, Lwow to Poland
		trigger = {
			has_event_target = poland
			has_event_target = ukraine
			has_event_target = polish_galicia
			has_event_target = ukrainian_galicia
			OR = {
				has_event_target = lwow
				POL = { owns_state = 91 } #Lwow
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
			}
		}
		set_temp_variable = { tag_to_release = POL }
		88 = { add_claim_of_target_and_transfer_if_owned = yes }
		91 = { add_claim_of_target_and_transfer_if_owned = yes }
		POL_galicia_joins_poland = yes

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = UKR }
		89 = { add_claim_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.h"
		name = annex.1022.h #Split between UKR and POL, Lwow to Ukraine
		trigger = {
			has_event_target = poland
			has_event_target = ukraine
			has_event_target = polish_galicia
			has_event_target = ukrainian_galicia
			OR = {
				has_event_target = lwow
				UKR = { owns_state = 91 } #Lwow
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
			}
		}
		set_temp_variable = { tag_to_release = POL }
		88 = { add_claim_of_target_and_transfer_if_owned = yes }
		POL_galicia_joins_poland = yes

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = UKR }
		89 = { add_claim_of_target_and_transfer_if_owned = yes }
		91 = { add_claim_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.i"
		name = annex.1022.i #Keep Polish Galicia, give the rest to Ukraine
		trigger = {
			original_tag = POL
			has_event_target = ukraine
			OR = {
				has_event_target = polish_galicia
				has_event_target = lwow
			}
			89 = { is_valid_annexation_state = yes } #Stanislawow
		}
		ai_chance = { base = 0 }
		add_state_claim = 88 #Krakow
		add_state_claim = 91 #Lwow
		POL_galicia_joins_poland = yes

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = UKR }
		89 = { transfer_state_and_add_core = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.j"
		name = annex.1022.j #Keep Ukrainian Galicia, liberate the rest
		trigger = {
			OR = {
				original_tag = UKR
				has_event_target = russia_can_annex_galicia #In case Poland is hostile
			}
			owns_state = 792 #Volhynia
			has_event_target = polish_galicia
			has_event_target = ukrainian_galicia
			NOT = { country_exists = GAL }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				has_event_target = poland
			}
		}
		89 = { add_claim_of_ROOT = yes }
		91 = { add_claim_of_ROOT = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = GAL }
		release_targeted_tag = yes
		if = {
			limit = { tag = UKR }
			GAL_characters_join_ukraine = yes
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.k"
		name = annex.1022.k #Keep Ukrainian Galicia, give the rest to Poland
		trigger = {
			original_tag = UKR
			has_event_target = polish_galicia
			has_event_target = ukrainian_galicia
			has_event_target = poland
		}
		ai_chance = { base = 100 }
		89 = { add_claim_of_ROOT = yes }
		91 = { add_claim_of_ROOT = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = POL }
		88 = { transfer_state_and_add_claim = yes }
		GAL_characters_join_ukraine = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1022 option annex.1022.l"
		name = annex.1022.l #Keep Ukrainian Galicia, occupy the rest
		trigger = {
			original_tag = UKR
			has_event_target = polish_galicia
			has_event_target = ukrainian_galicia
		}
		ai_chance = { base = 0 }
		89 = { remove_claim_and_add_core_of_ROOT = yes }
		91 = { remove_claim_and_add_core_of_ROOT = yes }

		custom_effect_tooltip = tooltip_white_line
		set_country_flag = GAL_CONQ
		occupy_small_country = yes
		GAL_characters_join_ukraine = yes
	}

	option = { #split with POL, Lwow to Poland
		log = "[GetLogInfo]: event annex.1022 option annex.1022.m"
		name = annex.1022.m
		trigger = {
			has_event_target = russia_can_annex_galicia
			has_event_target = poland
			has_event_target = ukrainian_galicia
			OR = {
				has_event_target = lwow
				POL = { owns_state = 91 } #Lwow
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = yes
				has_event_target = lwow
			}
		}
		add_state_claim = 89 #Stanislawow

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = POL }
		88 = { transfer_state_and_add_claim = yes } #Krakow
		91 = { transfer_state_and_add_claim = yes } #Lwow
	}

	option = { #split with POL, keep Lwow
		log = "[GetLogInfo]: event annex.1022 option annex.1022.n"
		name = annex.1022.n
		trigger = {
			has_event_target = russia_can_annex_galicia
			has_event_target = poland
			has_event_target = ukrainian_galicia
			has_event_target = polish_galicia
			has_event_target = lwow
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = yes
			}
		}
		add_state_claim = 89 #Stanislawow
		add_state_claim = 91 #Lwow

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = POL }
		88 = { transfer_state_and_add_claim = yes } #Krakow
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1022 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = POL
		}
		ai_chance = { base = 1000 }
		88 = { add_claim_of_ROOT = yes }
		89 = { add_claim_of_ROOT = yes }
		91 = { add_claim_of_ROOT = yes }
		POL_galicia_joins_poland = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1022 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = UKR
			NOT = { has_event_target = polish_galicia }
		}
		ai_chance = { base = 1000 }
		89 = { add_claim_of_ROOT = yes }
		91 = { add_claim_of_ROOT = yes }
		GAL_characters_join_ukraine = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1022 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = russia_can_annex_galicia
			owns_state = 89 #Stanislawow
			OR = {
				RUS_is_expansionist = yes
				NOT = { has_event_target = polish_galicia }
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				OR = {
					is_monarchy = no
					RUS_is_expansionist = no
				}
			}
		}
		if = {
			limit = { RUS_is_expansionist = yes }
			88 = { add_claim_of_ROOT = yes }
		}
		89 = { add_claim_of_ROOT = yes }
		91 = { add_claim_of_ROOT = yes }
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1022 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = AUS
			AUS_is_unified = yes
		}
		ai_chance = { base = 1000 }
		88 = { remove_claim_and_add_core_of_ROOT = yes }
		89 = { remove_claim_and_add_core_of_ROOT = yes }
		91 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #Occupy
		log = "[GetLogInfo]: event annex.1022 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = POL
				AND = {
					original_tag = UKR
					NOT = { has_event_target = polish_galicia }
				}
				AND = {
					has_event_target = russia_can_annex_galicia
					owns_state = 89 #Stanislawow
					NOT = { has_event_target = polish_galicia }
				}
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = GAL_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Bucovina
	id = annex.1023
	title = annexation_BUKOVINA_CONQ
	desc = annexation_BUKOVINA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		80 = { clear_retain_state = yes }
		713 = { clear_retain_state = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.a"
		name = annex.1023.a #Give it to AUS
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				OR = {
					AND = {
						owns_state = 89 #Stanislawow
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 80 #Cernauti
						ROOT = { owns_state = 713 } #Suceava
					}
					AND = {
						owns_state = 713 #Suceava
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 76 #Cluj
						ROOT = { owns_state = 713 } #Suceava
					}
				}
			}
			NOT = {
				original_tag = ROM
				original_tag = TRS
				original_tag = GAL
			}
		}
		ai_chance = { base = 40 }
		set_temp_variable = { tag_to_release = AUS }
		80 = { add_core_of_target_and_transfer_if_owned = yes }
		713 = { add_core_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.b"
		name = annex.1023.b #Give it to GAL
		trigger = {
			GAL = {
				ROOT_can_grant_land = yes
				OR = {
					AND = {
						owns_state = 89 #Stanislawow
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 80 #Cernauti
						ROOT = { owns_state = 713 } #Suceava
					}
				}
			}
			NOT = {
				original_tag = ROM
				original_tag = TRS
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				ROOT = { is_ally_with = GAL }
			}
			modifier = {
				factor = 10
				GAL = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = GAL }
		80 = { add_core_of_target_and_transfer_if_owned = yes }
		713 = { add_core_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.c"
		name = annex.1023.c #Give it to ROM
		trigger = {
			ROM = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = GAL
				original_tag = TRS
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				ROOT = { is_ally_with = ROM }
			}
			modifier = {
				factor = 10
				ROM = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = ROM }
		80 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		713 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.d"
		name = annex.1023.d #Give it to TRS
		trigger = {
			TRS = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = GAL
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				ROM = { ROOT_can_grant_land = yes }
			}
			modifier = {
				factor = 10
				ROOT = { is_ally_with = TRS }
			}
			modifier = {
				factor = 10
				TRS = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = TRS }
		80 = { add_core_of_target_and_transfer_if_owned = yes }
		713 = { add_core_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.e"
		name = annex.1023.e #Give it to POL
		trigger = {
			POL = {
				ROOT_can_grant_land = yes
				OR = {
					AND = {
						owns_state = 89 #Stanislawow
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 80 #Cernauti
						ROOT = { owns_state = 713 } #Suceava
					}
				}
			}
			NOT = {
				original_tag = ROM
				original_tag = TRS
				original_tag = GAL
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 10
				POL = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 10
				POL = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		80 = { add_claim_of_target_and_transfer_if_owned = yes }
		713 = { transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.f"
		name = annex.1023.f #Give it to UKR
		trigger = {
			UKR = {
				ROOT_can_grant_land = yes
				OR = {
					AND = {
						owns_state = 89 #Stanislawow
						ROOT = { owns_state = 80 } #Cernauti
					}
					AND = {
						owns_state = 80 #Cernauti
						ROOT = { owns_state = 713 } #Suceava
					}
				}
			}
			NOT = {
				original_tag = ROM
				original_tag = TRS
				original_tag = GAL
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				ROOT = { is_ally_with = UKR }
			}
			modifier = {
				factor = 10
				UKR = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		80 = { add_claim_of_target_and_transfer_if_owned = yes }
		713 = { transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.g"
		name = annex.1023.g #Split it between UKR and ROM
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			UKR = {
				ROOT_can_grant_land = yes
				owns_state = 89 #Stanislawow
			}
			ROM = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = ROM
				original_tag = TRS
				original_tag = GAL
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				UKR = { is_ally_of_ROOT = yes }
				ROM = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 10
				UKR = { same_government_type_as_ROOT = yes }
				ROM = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		80 = { transfer_state_and_add_core = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = ROM }
		713 = { transfer_state_and_add_claim_or_core = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.h"
		name = annex.1023.h #Split it between UKR and TRS
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			UKR = {
				ROOT_can_grant_land = yes
				owns_state = 89 #Stanislawow
			}
			TRS = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = ROM
				original_tag = TRS
				original_tag = GAL
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 10
				UKR = { is_ally_of_ROOT = yes }
				TRS = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 10
				UKR = { same_government_type_as_ROOT = yes }
				TRS = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		80 = { transfer_state_and_add_core = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = TRS }
		713 = { transfer_state_and_add_core = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.i"
		name = annex.1023.i #Split it between POL and ROM
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			POL = {
				ROOT_can_grant_land = yes
				owns_state = 89 #Stanislawow
			}
			ROM = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = ROM
				original_tag = TRS
				original_tag = GAL
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 10
				POL = { is_ally_of_ROOT = yes }
			}
			modifier = {
				add = 10
				POL = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		80 = { transfer_state_and_add_claim = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = ROM }
		713 = { transfer_state_and_add_claim_or_core = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1023 option annex.1023.j"
		name = annex.1023.j #Split it between POL and TRS
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			POL = {
				ROOT_can_grant_land = yes
				owns_state = 89 #Stanislawow
			}
			TRS = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = ROM
				original_tag = TRS
				original_tag = GAL
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 10
				POL = { is_ally_of_ROOT = yes }
				TRS = { is_ally_of_ROOT = yes }
			}
			modifier = {
				add = 10
				POL = { same_government_type_as_ROOT = yes }
				TRS = { same_government_type_as_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		80 = { transfer_state_and_add_claim = yes }

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = TRS }
		713 = { transfer_state_and_add_core = yes }
	}

	option = { #split with ROM
		log = "[GetLogInfo]: event annex.1023 option annex.1023.k"
		name = annex.1023.k
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			ROM = { ROOT_can_grant_land = yes }
			owns_state = 89 #Stanislawow
			OR = {
				is_russian_tag = yes
				original_tag = UKR
				original_tag = POL
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				original_tag = POL
				is_in_faction_with = AUS
				AUS = { is_faction_leader = yes }
			}
		}
		80 = { add_claim_of_ROOT = yes } #Cernauti
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = ROM }
		713 = { transfer_state_and_add_claim_or_core = yes } #Suceava
	}

	option = { #split with TRS
		log = "[GetLogInfo]: event annex.1023 option annex.1023.l"
		name = annex.1023.l
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			TRS = { ROOT_can_grant_land = yes }
			owns_state = 89 #Stanislawow
			OR = {
				is_russian_tag = yes
				original_tag = UKR
				original_tag = POL
			}
		}
		ai_chance = { base = 10 }
		80 = { add_claim_of_ROOT = yes } #Cernauti
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = TRS }
		713 = { transfer_state_and_add_core = yes } #Suceava
	}

	option = { #annex Cernauti
		log = "[GetLogInfo]: event annex.1023 option annex.1023.m"
		name = annex.1023.m
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = yes } #Suceava
			owns_state = 89 #Stanislawow
			OR = {
				is_russian_tag = yes
				original_tag = UKR
				original_tag = POL
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				ROM = { ROOT_can_grant_land = yes }
				NOT = {
					AND = {
						tag = POL
						is_in_faction_with = AUS
						AUS = { is_faction_leader = yes }
					}
				}
			}
		}
		80 = { add_claim_of_ROOT = yes } #Cernauti
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1023 option annex.integration"
		name = annex.integration
		trigger = {
			80 = { is_valid_annexation_state = yes } #Cernauti
			713 = { is_valid_annexation_state = no } #Suceava
			owns_state = 89 #Stanislawow
			OR = {
				is_russian_tag = yes
				original_tag = UKR
				original_tag = POL
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				ROM = { ROOT_can_grant_land = yes }
				NOT = {
					AND = {
						tag = POL
						is_in_faction_with = AUS
						AUS = { is_faction_leader = yes }
					}
				}
			}
		}
		80 = { add_claim_of_ROOT = yes } #Cernauti
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1023 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = ROM
		}
		ai_chance = { base = 1000 }
		80 = { add_claim_of_ROOT = yes }
		713 = { add_claim_of_ROOT = yes }
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1023 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = GAL
				original_tag = TRS
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = { base = 1000 }
		80 = { remove_claim_and_add_core_of_ROOT = yes }
		713 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1023 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = ROM
				original_tag = TRS
				original_tag = GAL
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
				AND = {
					owns_state = 89 #Stanislawow
					80 = { is_valid_annexation_state = yes } #Cernauti
					OR = {
						original_tag = UKR
						original_tag = POL
						is_russian_tag = yes
					}
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = BUKOVINA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Hungary
	id = annex.1024
	title = annexation_HUN_CONQ
	desc = annexation_HUN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			HUN = { HUN_remove_joseph_august = yes }
			every_state = {
				limit = {
					OR = {
						is_core_of = HUN
						is_claimed_by = HUN
					}
					NOT = {
						state = 43 #Central Hungary
						state = 154 #Alföld
						state = 155 #Transdanubia
						state = 664 #Miskolc
					}
				}
				remove_core_of = HUN
				remove_claim_by = HUN
				clear_variable = ambition_area_HUN
			}
		}
	}

	option = { #Liberate
		log = "[GetLogInfo]: event annex.1024 option annex.1024.b"
		name = annex.1024.b
		ai_chance = {
			base = 95
			modifier = {
				add = -70
				AUS = {
					AUS_is_unified = yes
					is_ally_of_ROOT = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1024 option annex.1031.b"
		name = annex.1031.b
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
		}
		ai_chance = { base = 1000 }
		set_temp_variable = { tag_to_release = AUS }
		HUN = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_cores = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1024 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = HUN_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Slovakia
	id = annex.1025
	title = annexation_SLO_CONQ
	desc = annexation_SLO_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.1025 option annex.1025.a"
		name = annex.1025.a #Liberate Slovakia
		trigger = {
			NOT = {
				original_tag = HUN
				original_tag = CZE
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
					owns_state = 1090 #Pressburg
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				AUS = {
					AUS_is_unified = yes
					is_ally_of_ROOT = yes
					OR = {
						owns_state = 1090
						1090 = { is_valid_annexation_state = yes } #Pressburg
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = SLO }
		70 = { transfer_state_and_add_core = yes } #Slovakia
		puppet_released_tag = yes
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1025 option annex.1025.b"
		name = annex.1025.b
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				OR = {
					owns_state = 1090
					1090 = { is_valid_annexation_state = yes } #Pressburg
				}
			}
			NOT = { original_tag = HUN }
			NOT = { original_tag = CZE }
		}
		ai_chance = { base = 1000 }
		set_temp_variable = { tag_to_release = AUS }
		70 = { transfer_state_and_add_core = yes } #Slovakia
		if = {
			limit = { var:tag_to_release = { owns_state = 43 } } #Central Hungary
			71 = { add_core_of_target_and_transfer_if_owned = yes } #Pressburg
		}
		1090 = { add_core_of_target_and_transfer_if_owned = yes } #Pressburg
	}

	option = { #Give to Hungary
		log = "[GetLogInfo]: event annex.1025 option annex.1025.c"
		name = annex.1025.c
		trigger = {
			HUN = { is_ally_of_ROOT = yes }
			NOT = { original_tag = HUN }
			NOT = { original_tag = CZE }
		}
		ai_chance = { base = 30 }
		set_temp_variable = { tag_to_release = HUN }
		70 = { transfer_state_and_add_claim = yes } #Slovakia
	}

	option = { #Give to Bohemia
		log = "[GetLogInfo]: event annex.1025 option annex.1025.d"
		name = annex.1025.d
		trigger = {
			CZE = { is_ally_of_ROOT = yes }
			NOT = { original_tag = HUN }
			NOT = { original_tag = CZE }
		}
		ai_chance = { base = 50 }
		set_temp_variable = { tag_to_release = CZE }
		70 = { transfer_state_and_add_core = yes } #Slovakia
		CZE = { set_cosmetic_tag = CZE_czechoslavakia }
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1025 option annex.1025.e"
		name = annex.1025.e
		trigger = {
			original_tag = CZE
		}
		ai_chance = { base = 1000 }
		70 = { remove_claim_and_add_core_of_ROOT = yes } #Slovakia
		set_cosmetic_tag = CZE_czechoslavakia
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1025 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = HUN
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
					owns_state = 1090 #Pressburg
				}
			}
		}
		ai_chance = { base = 1000 }
		70 = { add_claim_of_ROOT = yes } #Slovakia
		1090 = { add_claim_of_ROOT = yes } #Pressburg
	}

	option = { #Occupy Slovakia
		log = "[GetLogInfo]: event annex.1025 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = HUN
				original_tag = CZE
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
					owns_state = 1090 #Pressburg
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = SLO_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Transcarpathia
	id = annex.1026
	title = annexation_SLO_TRCARP_CONQ
	desc = annexation_SLO_TRCARP_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		73 = { clear_retain_state = yes }
		hidden_effect = {
			if = {
				limit = {
					OR = {
						original_tag = HUN
						original_tag = SLO
						original_tag = GAL
						AND = {
							original_tag = UKR
							owns_state = 91 #Lwow
						}
						AND = {
							original_tag = CZE
							owns_state = 71 #Eastern Slovakia
						}
						AND = {
							original_tag = AUS
							AUS_is_unified = yes
						}
						AND = {
							is_russian_tag = yes
							owns_state = 91 #Lwow
						}
					}
				}
				save_event_target_as = can_integrate
			}
			if = {
				limit = {
					var:91.owner = {
						OR = {
							original_tag = GAL
							original_tag = UKR
							is_russian_tag = yes
						}
						ROOT_can_grant_land = yes
					}
				}
				var:91.owner = { save_event_target_as = galicia }
			}
			if = {
				limit = { SLO = { ROOT_can_grant_land = yes } }
				SLO = { save_event_target_as = slovakia }
			}
			else_if = {
				limit = {
					CZE = {
						owns_state = 70 #Slovakia
						ROOT_can_grant_land = yes
					}
				}
				CZE = { save_event_target_as = slovakia }
			}
			if = {
				limit = {
					HUN = {
						ROOT_can_grant_land = yes
						OR = {
							owns_state = 70 #Slovakia
							owns_state = 154 #Alföld
						}
					}
				}
				HUN = { save_event_target_as = hungary }
			}
			if = {
				limit = {
					AUS = {
						AUS_is_unified = yes
						ROOT_can_grant_land = yes
						OR = {
							owns_state = 70 #Slovakia
							owns_state = 154 #Alföld
						}
					}
				}
				AUS = { save_event_target_as = austria }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1026 option annex.1026.a"
		name = annex.1026.a #Give it to GAL/UKR/RUS
		trigger = {
			NOT = { has_event_target = can_integrate }
			has_event_target = galicia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:galicia }
				event_target:galicia = { RUS_is_expansionist = yes }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:galicia }
				OR = {
					is_ally_with = event_target:austria
					is_ally_with = event_target:hungary
					is_ally_with = event_target:slovakia
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:galicia }
		73 = { transfer_state_and_add_core = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1026 option annex.1026.b"
		name = annex.1026.b #Give it to CZE/SLO
		trigger = {
			NOT = { has_event_target = can_integrate }
			has_event_target = slovakia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:slovakia }
				OR = {
					is_ally_with = event_target:austria
					is_ally_with = event_target:hungary
					is_ally_with = event_target:galicia
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:slovakia }
		73 = { transfer_state_and_add_core = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1026 option annex.1026.c"
		name = annex.1026.c #Give it to HUN
		trigger = {
			NOT = { has_event_target = can_integrate }
			has_event_target = hungary
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:hungary }
				OR = {
					is_ally_with = event_target:austria
					is_ally_with = event_target:galicia
					is_ally_with = event_target:slovakia
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:hungary }
		73 = { transfer_state_and_add_claim = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1026 option annex.1026.d"
		name = annex.1026.d #Give it to AUS
		trigger = {
			NOT = { has_event_target = can_integrate }
			has_event_target = austria
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:austria }
				OR = {
					is_ally_with = event_target:hungary
					is_ally_with = event_target:galicia
					is_ally_with = event_target:slovakia
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		73 = { transfer_state_and_add_core = yes }
	}
	option = { #annex
		log = "[GetLogInfo]: event annex.1026 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_integrate
		}
		ai_chance = { base = 1000 }
		if = {
			limit = {
				OR = {
					original_tag = HUN
					original_tag = UKR
					is_russian_tag = yes
				}
			}
			73 = { add_claim_of_ROOT = yes }
		}
		else = {
			73 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1026 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = { base = 0 }
		if = {
			limit = { RUS_is_expansionist = yes }
			add_state_claim = 73
		}
		else = {
			set_country_flag = SLO_TRCARP_CONQ
		}
		occupy_small_country = yes
	}
}

country_event = { #Fate of Transylvania
	id = annex.1027
	title = annexation_TRS_CONQ
	desc = annexation_TRS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			for_each_scope_loop = {
				array = TRS.core_states
				force_enable_resistance = { occupier = AUS occupied = TRS clear = yes }
				force_enable_resistance = { occupier = HUN occupied = TRS clear = yes }
				force_enable_resistance = { occupier = TRS occupied = TRS clear = yes }
			}
			875 = { retain_state = yes } #West Banat
		}
		if = {
			limit = {
				OR = {
					original_tag = HUN
					original_tag = ROM
					AND = {
						original_tag = AUS
						AUS_is_unified = yes
					}
				}
			}
			save_event_target_as = can_integrate_transylvania
		}
		else_if = {
			limit = {
				is_in_faction = yes
				OR = {
					is_major = yes
					is_ai = no
				}
				ROM = {
					exists = yes
					is_subject = no
					NOT = { is_in_faction_with = ROOT }
					has_capitulated = no
					both_socialist_or_both_not_socialist = yes
					at_war_with_or_justifying_wargoal_against_ROOT = no
					NOT = { has_country_flag = offered_transylvania_@ROOT }
				}
			}
			save_event_target_as = can_offer_transylvania_to_romania
		}
	}

	option = { #Liberate Transylvania
		log = "[GetLogInfo]: event annex.1027 option annex.1027.a"
		name = annex.1027.a
		trigger = {
			NOT = { has_event_target = can_integrate_transylvania }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				AUS = {
					AUS_is_unified = yes
					is_ally_of_ROOT = yes
					owns_state = 154
				}
			}
			modifier = {
				factor = 0
				HUN = { is_ally_of_ROOT = yes }
				84 = { is_core_of = HUN }
			}
			modifier = {
				factor = 0
				ROM = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0
				OR = {
					tag = SER
					tag = POL
					tag = ITA
				}
				ROM = { ROOT_can_grant_land = yes }
			}
		}
		set_temp_variable = { tag_to_release = TRS }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1027 option annex.1027.b"
		name = annex.1027.b
		trigger = {
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				owns_state = 154
			}
			NOT = { has_event_target = can_integrate_transylvania }
		}
		ai_chance = { base = 20 }
		set_temp_variable = { tag_to_release = AUS }
		every_state = {
			limit = { is_core_of = TRS }
			add_core_of_target_and_transfer_if_owned = yes
		}
		recheck_annexations = yes
	}

	option = { #Give to Hungary
		log = "[GetLogInfo]: event annex.1027 option annex.1027.c"
		name = annex.1027.c
		trigger = {
			HUN = { is_ally_of_ROOT = yes }
			NOT = { has_event_target = can_integrate_transylvania }
		}
		ai_chance = { base = 20 }
		set_temp_variable = { tag_to_release = HUN }
		every_state = {
			limit = { is_core_of = TRS }
			add_claim_of_target_and_transfer_if_owned = yes
		}
		recheck_annexations = yes
	}

	option = { #Give to Romania
		log = "[GetLogInfo]: event annex.1027 option annex.1027.e"
		name = annex.1027.e
		trigger = {
			ROM = { is_ally_of_ROOT = yes }
			NOT = { has_event_target = can_integrate_transylvania }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				original_tag = BUL
				ROM = { is_subject_of = BUL }
			}
		}
		set_temp_variable = { tag_to_release = ROM }
		every_state = {
			limit = { is_core_of = TRS }
			add_core_or_claim_of_target_and_transfer_if_owned = yes
		}
	}

	option = { #Split between HUN and ROM
		log = "[GetLogInfo]: event annex.1027 option annex.1027.f"
		name = annex.1027.f
		trigger = {
			owns_state = 83
			ROM = { is_ally_of_ROOT = yes }
			HUN = { is_ally_of_ROOT = yes }
			NOT = { has_event_target = can_integrate_transylvania }
		}
		ai_chance = { base = 40 }
		set_temp_variable = { tag_to_release = HUN }
		82 = { add_claim_of_target_and_transfer_if_owned = yes }
		83 = { add_claim_of_target_and_transfer_if_owned = yes }

		set_temp_variable = { tag_to_release = ROM }
		76 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		84 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		789 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
	}

	option = { #Split between AUS and ROM
		log = "[GetLogInfo]: event annex.1027 option annex.1027.g"
		name = annex.1027.g
		trigger = {
			owns_state = 83
			ROM = { is_ally_of_ROOT = yes }
			AUS = {
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
				owns_state = 154
			}
			NOT = { has_event_target = can_integrate_transylvania }
		}
		ai_chance = { base = 40 }
		set_temp_variable = { tag_to_release = AUS }
		82 = { add_core_of_target_and_transfer_if_owned = yes }
		83 = { add_core_of_target_and_transfer_if_owned = yes }

		set_temp_variable = { tag_to_release = ROM }
		76 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		84 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
		789 = { add_core_or_claim_of_target_and_transfer_if_owned = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1027 option annex.1027.h"
		name = annex.1027.h #Offer to ROM
		trigger = {
			has_event_target = can_offer_transylvania_to_romania
		}
		ai_chance = { base = 70 }
		set_country_flag = { flag = TRS_CONQ value = 1 days = 32 }
		set_country_flag = { flag = WESTBANAT_CONQ value = 1 days = 32 }
		set_country_flag = { flag = BUKOVINA_CONQ value = 1 days = 32 }
		ROM = {
			set_country_flag = offered_transylvania_@ROOT
			country_event = annex.289
		}
		recheck_annexations = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1027 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = ROM
				original_tag = HUN
			}
		}
		ai_chance = { base = 1000 }
		every_state = {
			limit = {
				is_core_of = TRS
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		recheck_annexations = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1027 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = AUS
			AUS_is_unified = yes
		}
		ai_chance = { base = 1000 }
		every_state = {
			limit = { is_core_of = TRS }
			remove_claim_and_add_core_of_ROOT = yes
		}
	}

	option = { #Occupy Transylvania
		log = "[GetLogInfo]: event annex.1027 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_integrate_transylvania }
		}
		ai_chance = { base = 0 }
		set_country_flag = TRS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of West Banat
	id = annex.1028
	title = annexation_WESTBANAT_CONQ
	desc = annexation_WESTBANAT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		875 = { clear_retain_state = yes }
		if = {
			limit = {
				OR = {
					original_tag = TRS
					original_tag = HUN
					original_tag = SER
					AND = {
						original_tag = CRO
						owns_state = 45 #Vojvodina
					}
					AND = {
						original_tag = ROM
						owns_state = 82 #Banat
					}
					AND = {
						original_tag = AUS
						AUS_is_unified = yes
					}
				}
			}
			save_event_target_as = can_annex_west_banat
		}
	}

	option = { #give to Serbia
		log = "[GetLogInfo]: event annex.1028 option annex.1028.a"
		name = annex.1028.a
		trigger = {
			SER = { ROOT_can_grant_land = yes }
			NOT = { has_event_target = can_annex_west_banat }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					ROM = { is_ally_of_ROOT = yes }
					TRS = { is_ally_of_ROOT = yes }
					CRO = { is_ally_of_ROOT = yes }
					HUN = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = SER }
			}
			modifier = {
				factor = 0
				original_tag = BUL
				SER = { is_subject_of = BUL }
			}
		}
		set_temp_variable = { tag_to_release = SER }
		875 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to Croatia
		log = "[GetLogInfo]: event annex.1028 option annex.1028.b"
		name = annex.1028.b
		trigger = {
			CRO = {
				owns_state = 45 #Vojvodina
				ROOT_can_grant_land = yes
			}
			NOT = { has_event_target = can_annex_west_banat }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					ROM = { is_ally_of_ROOT = yes }
					TRS = { is_ally_of_ROOT = yes }
					SER = { is_ally_of_ROOT = yes }
					HUN = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = CRO }
			}
		}
		set_temp_variable = { tag_to_release = CRO }
		875 = { transfer_state_and_add_core = yes }
	}

	option = { #give to Romania
		log = "[GetLogInfo]: event annex.1028 option annex.1028.c"
		name = annex.1028.c
		trigger = {
			var:82.owner = { #Banat
				OR = {
					original_tag = ROM
					original_tag = TRS
				}
				ROOT_can_grant_land = yes
			}
			NOT = { has_event_target = can_annex_west_banat }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					SER = { is_ally_of_ROOT = yes }
					CRO = { is_ally_of_ROOT = yes }
					HUN = { is_ally_of_ROOT = yes }
					AND = {
						original_tag = BUL
						ROM = { is_subject_of = BUL }
					}
				}
				NOT = { is_ally_with = 82.owner }
			}
		}
		set_temp_variable = { tag_to_release = 82.owner }
		if = {
			limit = {
				var:tag_to_release = { tag = TRS }
			}
			875 = { transfer_state_and_add_core = yes }
		}
		else = {
			875 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #give to Hungary
		log = "[GetLogInfo]: event annex.1028 option annex.1028.d"
		name = annex.1028.d
		trigger = {
			HUN = {
				owns_state = 45 #Vojvodina
				ROOT_can_grant_land = yes
			}
			NOT = { has_event_target = can_annex_west_banat }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					UKR = { is_ally_of_ROOT = yes }
					POL = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		875 = { transfer_state_and_add_claim = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1028 option annex.1028.e"
		name = annex.1028.e #Give it to AUS
		trigger = {
			AUS = {
				owns_state = 45 #Vojvodina
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
			NOT = { has_event_target = can_annex_west_banat }
		}
		ai_chance = { base = 40 }
		set_temp_variable = { tag_to_release = AUS }
		875 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1028 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_west_banat
		}
		ai_chance = { base = 1000 }
		if = {
			limit = {
				OR = {
					original_tag = SER
					original_tag = ROM
					original_tag = HUN
				}
			}
			875 = { add_claim_of_ROOT = yes }
		}
		else = {
			875 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1028 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_west_banat }
		}
		ai_chance = { base = 0 }
		set_country_flag = WESTBANAT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Vojvodina
	id = annex.1029
	title = annexation_VOJVODINA_CONQ
	desc = annexation_VOJVODINA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		45 = { clear_retain_state = yes }
		if = {
			limit = {
				OR = {
					original_tag = HUN
					AND = {
						original_tag = CRO
						owns_state = 794 #Syrmia
					}
					AND = {
						original_tag = SER
						owns_state = 794 #Syrmia
					}
					AND = {
						original_tag = AUS
						AUS_is_unified = yes
					}
				}
			}
			save_event_target_as = can_annex_vojvodina
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1029 option annex.1029.a"
		name = annex.1029.a #Give it to HUN
		trigger = {
			HUN = { ROOT_can_grant_land = yes }
			NOT = { has_event_target = can_annex_vojvodina }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				OR = {
					CRO = { is_ally_of_ROOT = yes }
					SER = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = HUN }
			}
			modifier = {
				factor = 0
				AUS = {
					owns_state = 43
					AUS_is_unified = yes
					is_ally_of_ROOT = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		45 = { transfer_state_and_add_claim = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1029 option annex.1029.b"
		name = annex.1029.b #Give it to AUS
		trigger = {
			AUS = {
				owns_state = 43 #Central Hungary
				AUS_is_unified = yes
				is_ally_of_ROOT = yes
			}
			NOT = { has_event_target = can_annex_vojvodina }
		}
		ai_chance = { base = 40 }
		set_temp_variable = { tag_to_release = AUS }
		45 = { transfer_state_and_add_core = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1029 option annex.1029.c"
		name = annex.1029.c #Give it to SER/CRO
		trigger = {
			var:794.owner = { #Syrmia
				OR = {
					original_tag = CRO
					original_tag = SER
				}
				ROOT_can_grant_land = yes
			}
			NOT = { has_event_target = can_annex_vojvodina }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				HUN = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = 794.owner }
			}
		}
		set_temp_variable = { tag_to_release = 794.owner }
		45 = { transfer_state_and_add_core = yes }
	}
	option = { #annex
		log = "[GetLogInfo]: event annex.1029 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_vojvodina
		}
		ai_chance = { base = 1000 }
		if = {
			limit = {
				OR = {
					original_tag = SER
					original_tag = HUN
				}
			}
			45 = { add_claim_of_ROOT = yes }
		}
		else = {
			45 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1029 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_vojvodina }
		}
		ai_chance = { base = 0 }
		set_country_flag = VOJVODINA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Burgenland
	id = annex.1030
	title = annexation_BURGENLAND_CONQ
	desc = annexation_BURGENLAND_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.1030 option annex.1030.a"
		name = annex.1030.a #give it to Austria/Germany
		trigger = {
			var:4.owner = {
				OR = {
					original_tag = AUS
					is_germany_or_splinter_tag = yes
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				HUN = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = 4.owner }
			}
		}
		set_temp_variable = { tag_to_release = 4.owner }
		if = {
			limit = { 4 = { is_core_of = var:tag_to_release } }
			784 = { transfer_state_and_add_core = yes }
		}
		else = {
			784 = { transfer_state_and_add_claim = yes }
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1030 option annex.1030.b"
		name = annex.1030.b #give it to Hungary
		trigger = {
			HUN = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_ally_with = 4.owner
				NOT = { is_ally_with = HUN }
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		784 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1030 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = AUS
				original_tag = HUN
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { original_tag = AUS }
			784 = { remove_claim_and_add_core_of_ROOT = yes }
		}
		else_if = {
			limit = { is_germany_or_splinter_tag = yes }
			784 = {
				add_claim_of_ROOT = yes
				enable_state_integration_50_compliance = yes
			}
		}
		else = {
			784 = { add_claim_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1030 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = BURGENLAND_CONQ
	}
}

country_event = { #Fate of Croatia
	id = annex.1031
	title = annexation_CRO_CONQ
	desc = annexation_CRO_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = SER
					original_tag = HUN
					AND = {
						original_tag = AUS
						AUS_is_unified = yes
					}
				}
			}
			save_event_target_as = can_annex_croatia
		}
		else = {
			if = {
				limit = {
					SER = {
						is_ally_of_ROOT = yes
						OR = {
							owns_state = 104 #Bosnia
							104 = { is_valid_annexation_state = yes } #Bosnia
						}
					}
				}
				SER = { save_event_target_as = serbia }
			}
			else_if = {
				limit = {
					is_in_faction = yes
					OR = {
						is_major = yes
						is_ai = no
					}
					SER = {
						exists = yes
						is_subject = no
						NOT = { is_in_faction_with = ROOT }
						has_capitulated = no
						both_socialist_or_both_not_socialist = yes
						at_war_with_or_justifying_wargoal_against_ROOT = no
						NOT = { has_country_flag = offered_croatia_@ROOT }
						OR = {
							owns_state = 104 #Bosnia
							104 = { is_valid_annexation_state = yes } #Bosnia
						}
					}
				}
				save_event_target_as = can_offer_croatia_to_serbia
			}
			if = {
				limit = {
					AUS = {
						AUS_is_unified = yes
						is_ally_of_ROOT = yes
						OR = {
							owns_state = 102 #Carniola
							102 = { is_valid_annexation_state = yes } #Carniola
						}
					}
				}
				AUS = { save_event_target_as = austria }
			}
			if = {
				limit = {
					HUN = {
						is_ally_of_ROOT = yes
						owns_state = 70 #Slovakia
						owns_state = 84 #Transylvania
						OR = {
							owns_state = 45 #Vojvodina
							45 = { is_valid_annexation_state = yes } #Vojvodina
						}
					}
				}
				HUN = { save_event_target_as = hungary }
			}
		}
		hidden_effect = {
			CRO_reset_cores_and_claims = yes
			45 = { retain_state = yes } #Vojvodina
			103 = { retain_state = yes } #Rijeka
			163 = { retain_state = yes } #Dalmatia
			736 = { retain_state = yes } #Istria
			794 = { retain_state = yes } #Syrmia
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1031 option annex.1031.a"
		name = annex.1031.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_event_target = can_annex_croatia
					has_event_target = can_offer_croatia_to_serbia
					has_event_target = serbia
					has_event_target = austria
					has_event_target = hungary
				}
				factor = 100
				original_tag = BUL
				SER = { is_subject_of = BUL }
			}
		}
		set_temp_variable = { tag_to_release = CRO }
		109 = { transfer_state_without_overriding_occupation = yes } #Central Croatia
		puppet_released_tag = yes
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1031 option annex.1031.b"
		name = annex.1031.b
		trigger = {
			has_event_target = austria
			NOT = { has_event_target = can_annex_croatia }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_event_target = can_offer_croatia_to_serbia
			}
			modifier = {
				factor = 0
				event_target:austria = { is_ai = yes }
				has_event_target = serbia
				event_target:serbia = { is_ai = no }
			}
			modifier = {
				factor = 0.5
				event_target:austria = { is_subject = yes }
				has_event_target = serbia
				event_target:serbia = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = AUS }
		109 = { transfer_state_and_add_core = yes } #Central Croatia
		102 = { add_core_of_target_and_transfer_if_owned = yes } #Carniola
	}

	option = { #Give it to Serbia
		log = "[GetLogInfo]: event annex.1031 option annex.1031.c"
		name = annex.1031.c
		trigger = {
			has_event_target = serbia
			NOT = { has_event_target = can_annex_croatia }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				event_target:serbia = { is_ai = yes }
				has_event_target = austria
				event_target:austria = { is_ai = no }
			}
			modifier = {
				factor = 0.5
				event_target:serbia = { is_ai = yes }
				has_event_target = austria
				event_target:austria = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = SER }
		109 = { transfer_state_and_add_claim = yes } #Central Croatia
		794 = {
			clear_retain_state = yes
			add_claim_of_target_and_transfer_if_owned = yes #Syrmia
		}
	}

	option = { #Give to Hungary
		log = "[GetLogInfo]: event annex.1031 option annex.1031.d"
		name = annex.1031.d
		trigger = {
			has_event_target = hungary
			NOT = { has_event_target = can_annex_croatia }
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = HUN }
		109 = { transfer_state_and_add_claim = yes } #Central Croatia
	}

	option = {
		log = "[GetLogInfo]: event annex.1031 option annex.1031.e"
		name = annex.1031.e #Offer to SER
		trigger = {
			has_event_target = can_offer_croatia_to_serbia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_event_target = austria
				event_target:austria = { is_ai = no }
			}
			modifier = {
				factor = 0.5
				has_event_target = austria
				event_target:austria = { is_subject = no }
			}
		}
		set_country_flag = { flag = CRO_CONQ value = 1 days = 32 }
		set_country_flag = { flag = CRO_DALMATIA_CONQ value = 1 days = 32 }
		set_country_flag = { flag = KOTOR_CONQ value = 1 days = 32 }
		set_country_flag = { flag = VOJVODINA_CONQ value = 1 days = 32 }
		set_country_flag = { flag = WESTBANAT_CONQ value = 1 days = 32 }
		set_country_flag = { flag = BOS_CONQ value = 1 days = 32 }
		set_country_flag = { flag = MNT_CONQ value = 1 days = 32 }
		SER = {
			set_country_flag = offered_croatia_@ROOT
			country_event = annex.285
		}
		recheck_annexations = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1031 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_croatia
		}
		ai_chance = { base = 1000 }
		if = {
			limit = {
				OR = {
					original_tag = SER
					original_tag = HUN
				}
			}
			109 = { add_claim_of_ROOT = yes }
		}
		else = {
			109 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1031 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_croatia }
		}
		ai_chance = { base = 0 }
		set_country_flag = CRO_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Dalmatia
	id = annex.1032
	title = annexation_CRO_DALMATIA_CONQ
	desc = annexation_CRO_DALMATIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					original_tag = VNC
					original_tag = CRO
					AND = {
						OR = {
							original_tag = SER
							original_tag = HUN
							AND = {
								original_tag = AUS
								AUS_is_unified = yes
							}
						}
						OR = {
							owns_state = 104 #Bosnia
							owns_state = 109 #Central Croatia
						}
					}
				}
			}
			save_event_target_as = can_annex_dalmatia
		}
		if = {
			limit = { CRO = { ROOT_can_grant_land = yes } }
			CRO = { save_event_target_as = croatia }
		}
		else_if = {
			limit = {
				var:109.owner = { #Central Croatia
					OR = {
						original_tag = SER
						original_tag = HUN
						original_tag = AUS
					}
					ROOT_can_grant_land = yes
				}
			}
			var:109.owner = { save_event_target_as = croatia }
		}
		if = {
			limit = {
				var:104.owner = { #Bosnia
					NOT = { tag = event_target:croatia }
					OR = {
						original_tag = SER
						original_tag = HUN
						original_tag = AUS
					}
					ROOT_can_grant_land = yes
				}
			}
			var:104.owner = { save_event_target_as = bosnia }
		}
		if = {
			limit = {
				var:160.owner = { #Venetia
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:160.owner = { save_event_target_as = italy }
		}
	}

	option = { #Give to owner of Croatia
		log = "[GetLogInfo]: event annex.1032 option annex.1032.a"
		name = annex.1032.a
		trigger = {
			has_event_target = croatia
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:croatia }
				OR = {
					is_ally_with = event_target:bosnia
					is_ally_with = event_target:italy
				}
			}
			modifier = {
				factor = 0
				has_event_target = can_annex_dalmatia
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		if = {
			limit = {
				var:tag_to_release = {
					OR = {
						original_tag = CRO
						original_tag = AUS
					}
				}
			}
			163 = { transfer_state_and_add_core = yes }
		}
		else = {
			163 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Give to owner of Bosnia
		log = "[GetLogInfo]: event annex.1032 option annex.1032.b"
		name = annex.1032.b
		trigger = {
			has_event_target = bosnia
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:bosnia }
				OR = {
					is_ally_with = event_target:croatia
					is_ally_with = event_target:italy
				}
			}
			modifier = {
				factor = 0
				has_event_target = can_annex_dalmatia
			}
		}
		set_temp_variable = { tag_to_release = event_target:bosnia }
		if = {
			limit = {
				var:tag_to_release = {
					OR = {
						original_tag = CRO
						original_tag = AUS
					}
				}
			}
			163 = { transfer_state_and_add_core = yes }
		}
		else = {
			163 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Give it to Italy
		log = "[GetLogInfo]: event annex.1032 option annex.1032.c"
		name = annex.1032.c
		trigger = {
			has_event_target = italy
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy }
				OR = {
					is_ally_with = event_target:croatia
					is_ally_with = event_target:bosnia
				}
			}
			modifier = {
				factor = 0
				has_event_target = can_annex_dalmatia
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy }
		163 = { transfer_state_and_add_claim = yes }
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1032 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_dalmatia
		}
		ai_chance = { base = 1000 }
		if = {
			limit = {
				OR = {
					original_tag = CRO
					original_tag = AUS
				}
			}
			163 = { remove_claim_and_add_core_of_ROOT = yes } #Dalmatia
		}
		else_if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 160.owner }
			163 = { add_claim_of_target_and_transfer_if_owned = yes } #Dalmatia
		}
		else = {
			163 = { add_claim_of_ROOT = yes } #Dalmatia
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1032 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_dalmatia }
		}
		ai_chance = { base = 0 }
		set_country_flag = CRO_DALMATIA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Slovenia
	id = annex.1033
	title = annexation_SLV_CONQ
	desc = annexation_SLV_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = AUS
					original_tag = CRO
					AND = {
						original_tag = SER
						owns_state = 109 #Central Croatia
					}
					AND = {
						is_germany_or_splinter_tag = yes
						owns_state = 4 #Vienna
					}
				}
			}
			save_event_target_as = can_annex_slovenia
		}
		if = {
			limit = { AUS = { ROOT_can_grant_land = yes } }
			AUS = { save_event_target_as = austria }
		}
		else_if = {
			limit = {
				var:835.owner = {
					is_germany_or_splinter_tag = yes
					is_ally_with = ROOT
					NOT = { tag = ROOT }
				}
			}
			var:835.owner = { save_event_target_as = austria }
		}
		if = {
			limit = {
				var:109.owner = { #Central Croatia
					OR = {
						original_tag = CRO
						original_tag = SER
					}
					ROOT_can_grant_land = yes
				}
			}
			var:109.owner = { save_event_target_as = croatia }
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1033 option annex.1033.a"
		name = annex.1033.a
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				has_event_target = can_annex_slovenia
			}
		}
		set_temp_variable = { tag_to_release = SLV }
		102 = { transfer_state_and_add_core = yes }
		puppet_released_tag = yes
	}

	option = { #give to Austria
		log = "[GetLogInfo]: event annex.1033 option annex.1033.b"
		name = annex.1033.b
		trigger = {
			has_event_target = austria
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_event_target = can_annex_slovenia
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:austria }
				is_ally_with = event_target:croatia
			}
			modifier = {
				factor = 0
				event_target:austria = { is_ai = yes }
				is_ally_with = event_target:croatia
				event_target:croatia = { is_ai = no }
			}
			modifier = {
				factor = 0.5
				event_target:austria = { is_subject = yes }
				is_ally_with = event_target:croatia
				event_target:croatia = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		if = {
			limit = { var:tag_to_release = { original_tag = AUS } }
			102 = { transfer_state_and_add_core = yes }
			if = {
				limit = { 1107 = { is_valid_annexation_state = yes } }
				1107 = { transfer_state_and_add_core = yes }
			}
		}
		else = {
			102 = {
				hidden_effect = { add_core_of = AUS }
				transfer_state_and_add_claim = yes
			}
			1107 = {
				if = {
					limit = { is_valid_annexation_state = yes }
					hidden_effect = { add_core_of = AUS }
					transfer_state_and_add_claim = yes
				}
			}
		}
	}

	option = { #give to CRO/SER
		log = "[GetLogInfo]: event annex.1033 option annex.1033.c"
		name = annex.1033.c
		trigger = {
			has_event_target = croatia
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_event_target = can_annex_slovenia
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:croatia }
				is_ally_with = event_target:austria
			}
			modifier = {
				factor = 0
				event_target:croatia = { is_ai = yes }
				is_ally_with = event_target:austria
				event_target:austria = { is_ai = no }
			}
			modifier = {
				factor = 0.5
				event_target:croatia = { is_subject = yes }
				is_ally_with = event_target:austria
				event_target:austria = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		if = {
			limit = { var:tag_to_release = { original_tag = CRO } }
			102 = { transfer_state_and_add_core = yes }
		}
		else = {
			102 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1033 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_slovenia
		}
		ai_chance = { base = 100 }
		if = {
			limit = {
				OR = {
					original_tag = SER
					is_germany_or_splinter_tag = yes
				}
			}
			102 = { add_claim_of_ROOT = yes }
		}
		else = {
			102 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1033 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_slovenia }
		}
		ai_chance = { base = 0 }
		set_country_flag = SLV_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Istria
	id = annex.1034
	title = annexation_ISTRIA_CONQ
	desc = annexation_ISTRIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		736 = { clear_retain_state = yes }
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					original_tag = VNC
					original_tag = AUS
					original_tag = SER
					original_tag = CRO
				}
			}
			save_event_target_as = can_integrate
		}
		if = {
			limit = {
				var:160.owner = { #Venetia
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:160.owner = { save_event_target_as = italy }
		}
		if = {
			limit = {
				AUS = {
					ROOT_can_grant_land = yes
					owns_state = 102 #Carniola
					OR = {
						owns_state = 103 #Rijeka
						owns_state = 683 #Gorizia
						103 = { is_valid_annexation_state = yes }
						683 = { is_valid_annexation_state = yes }
					}
				}
			}
			AUS = { save_event_target_as = austria }
		}
		if = {
			limit = {
				var:109.owner = {
					OR = {
						original_tag = SER
						original_tag = CRO
					}
					ROOT_can_grant_land = yes
					OR = {
						owns_state = 103 #Rijeka
						103 = { is_valid_annexation_state = yes }
					}
				}
			}
			var:109.owner = { save_event_target_as = croatia }
		}
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1034 option annex.1034.a"
		name = annex.1034.a
		trigger = {
			has_event_target = italy
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy }
				OR = {
					is_ally_with = event_target:austria
					is_ally_with = event_target:croatia
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy }
		736 = { transfer_state_and_add_claim = yes }
		var:tag_to_release = { country_event = annex.18 }
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1034 option annex.1034.b"
		name = annex.1034.b
		trigger = {
			has_event_target = austria
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:austria }
				OR = {
					is_ally_with = event_target:italy
					is_ally_with = event_target:croatia
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		736 = { transfer_state_and_add_core = yes }
		if = {
			limit = { 683 = { is_valid_annexation_state = yes } }
			683 = { transfer_state_and_add_core = yes }
		}
		else_if = {
			limit = { 103 = { is_valid_annexation_state = yes } }
			103 = { transfer_state_and_add_core = yes }
		}
	}

	option = { #Give to Croatia
		log = "[GetLogInfo]: event annex.1034 option annex.1034.c"
		name = annex.1034.c
		trigger = {
			has_event_target = croatia
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:croatia }
				OR = {
					is_ally_with = event_target:italy
					is_ally_with = event_target:austria
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		if = {
			limit = { event_target:croatia = { original_tag = CRO } }
			736 = { transfer_state_and_add_core = yes }
			103 = { add_core_of_target_and_transfer_if_owned = yes }
		}
		else = {
			736 = { transfer_state_and_add_claim = yes }
			103 = { add_claim_of_target_and_transfer_if_owned = yes }
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1034 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				has_event_target = can_integrate
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
					OR = {
						owns_state = 683 #Gorizia
						683 = { is_valid_annexation_state = yes }
					}
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = {
				OR = {
					original_tag = SER
					is_germany_or_splinter_tag = yes
				}
			}
			736 = { add_claim_of_ROOT = yes }
			103 = { add_claim_of_ROOT = yes }
		}
		else_if = {
			limit = { is_italian_tag = yes }
			if = {
				limit = { has_country_flag = SIC_confed }
				set_temp_variable = { tag_to_release = 160.owner }
				736 = { add_claim_of_target_and_transfer_if_owned = yes }
			}
			else = {
				736 = { add_claim_of_ROOT = yes }
			}
		}
		else = {
			736 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1034 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				has_event_target = can_integrate
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
					OR = {
						owns_state = 683 #Gorizia
						683 = { is_valid_annexation_state = yes }
					}
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = ISTRIA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Trieste
	id = annex.1035
	title = annexation_TRIESTE_CONQ
	desc = annexation_TRIESTE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					original_tag = VNC
					original_tag = AUS
					original_tag = SLV
				}
			}
			save_event_target_as = can_integrate
		}
		if = {
			limit = {
				var:759.owner = { #Friuli
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:759.owner = { save_event_target_as = italy }
		}
		if = {
			limit = {
				var:102.owner = { #Carniola
					OR = {
						original_tag = AUS
						original_tag = SLV
						original_tag = CRO
						AND = {
							original_tag = SER
							SER_has_founded_yugoslavia = yes
						}
					}
					ROOT_can_grant_land = yes
					OR = {
						owns_state = 683 #Gorizia
						683 = { is_valid_annexation_state = yes }
					}
				}
			}
			var:102.owner = { save_event_target_as = slovenia }
		}
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1035 option annex.1035.a"
		name = annex.1035.a
		trigger = {
			has_event_target = italy
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:italy }
		488 = { transfer_state_and_add_core = yes }
		var:tag_to_release = { country_event = annex.18 }
	}

	option = { #Give to AUS/SLV/CRO/SER
		log = "[GetLogInfo]: event annex.1035 option annex.1035.b"
		name = annex.1035.b
		trigger = {
			has_event_target = slovenia
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:slovenia }
				is_ally_with = event_target:italy
			}
		}
		set_temp_variable = { tag_to_release = event_target:slovenia }
		if = {
			limit = {
				var:tag_to_release = {
					OR = {
						original_tag = SER
						original_tag = CRO
					}
				}
			}
			488 = { transfer_state_and_add_claim = yes }
			683 = { add_claim_of_target_and_transfer_if_owned = yes }
		}
		else = {
			488 = { transfer_state_and_add_core = yes }
			683 = { add_core_of_target_and_transfer_if_owned = yes }
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1035 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				has_event_target = can_integrate
				AND = {
					original_tag = CRO
					owns_state = 102 #Carniola
				}
				AND = {
					original_tag = SER
					owns_state = 102 #Carniola
					SER_has_founded_yugoslavia = yes
				}
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
					owns_state = 102 #Carniola
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = {
				OR = {
					original_tag = SER
					original_tag = CRO
					is_germany_or_splinter_tag = yes
				}
			}
			488 = { add_claim_of_ROOT = yes }
			683 = { add_claim_of_ROOT = yes }
		}
		else_if = {
			limit = { is_italian_tag = yes }
			if = {
				limit = { has_country_flag = SIC_confed }
				set_temp_variable = { tag_to_release = 160.owner }
				488 = { add_claim_of_target_and_transfer_if_owned = yes }
			}
			else = {
				488 = { add_claim_of_ROOT = yes }
			}
		}
		else = {
			488 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1035 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				has_event_target = can_integrate
				AND = {
					original_tag = SER
					owns_state = 102 #Carniola
					SER_has_founded_yugoslavia = yes
				}
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
					owns_state = 102 #Carniola
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = TRIESTE_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Southern Tyrol & the Trentino
	id = annex.1036
	title = annexation_AUS_TRENT_CONQ
	desc = annexation_AUS_TRENT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					original_tag = LOM
					original_tag = VNC
				}
			}
			save_event_target_as = can_annex_trentino
		}
		if = {
			limit = {
				OR = {
					original_tag = AUS
					AND = {
						is_germany_or_splinter_tag = yes
						owns_state = 4 #Vienna
					}
				}
			}
			save_event_target_as = can_annex_southern_tyrol
		}
		if = {
			limit = {
				var:160.owner = { #Venetia
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:160.owner = { save_event_target_as = italy }
		}
		else_if = {
			limit = {
				var:159.owner = { #Lombardy
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:159.owner = { save_event_target_as = italy }
		}
		if = {
			limit = { AUS = { ROOT_can_grant_land = yes } }
			AUS = { save_event_target_as = austria }
		}
		else_if = {
			limit = {
				var:153.owner = { #Tyrol
					is_germany_or_splinter_tag = yes
					is_ally_of_ROOT = yes
				}
			}
			var:153.owner = { save_event_target_as = austria }
		}
	}

	option = { #Give to Italy
		log = "[GetLogInfo]: event annex.1036 option annex.1036.a"
		name = annex.1036.a
		trigger = {
			has_event_target = italy
			NOT = { has_event_target = can_annex_trentino }
			OR = {
				NOT = { has_event_target = can_annex_southern_tyrol }
				39 = { is_valid_annexation_state = no } #Southern Tyrol
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0 #should split
				has_event_target = italy
				has_event_target = austria
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:austria
				NOT = { is_ally_with = event_target:italy }
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy }
		if = {
			limit = { 39 = { is_valid_annexation_state = yes } }
			39 = { transfer_state_and_add_claim = yes }
		}
		if = {
			limit = { 783 = { is_valid_annexation_state = yes } }
			783 = { transfer_state_and_add_claim = yes }
		}
		var:tag_to_release = { country_event = annex.18 }
	}

	option = { #Give to Austria/Germany
		log = "[GetLogInfo]: event annex.1036 option annex.1036.b"
		name = annex.1036.b
		trigger = {
			has_event_target = austria
			NOT = { has_event_target = can_annex_southern_tyrol }
			OR = {
				NOT = { has_event_target = can_annex_trentino }
				783 = { is_valid_annexation_state = no } #Trentino
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0 #should split
				has_event_target = italy
				has_event_target = austria
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:italy
				NOT = { is_ally_with = event_target:austria }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		if = {
			limit = { 39 = { is_valid_annexation_state = yes } }
			if = {
				limit = { 4 = { is_core_of = var:tag_to_release } }
				39 = { transfer_state_and_add_core = yes }
			}
			else = {
				39 = { transfer_state_and_add_claim = yes }
			}
		}
		if = {
			limit = { 783 = { is_valid_annexation_state = yes } }
			if = {
				limit = { var:tag_to_release = { tag = AUS } }
				783 = { transfer_state_and_add_core = yes }
			}
			else = {
				783 = { transfer_state_and_add_claim = yes }
			}
		}
		var:tag_to_release = { country_event = annex.18 }
	}

	option = { #Split between Italy and Austria
		log = "[GetLogInfo]: event annex.1036 option annex.1036.c"
		name = annex.1036.c
		trigger = {
			has_event_target = italy
			has_event_target = austria
			NOT = { has_event_target = can_annex_trentino }
			NOT = { has_event_target = can_annex_southern_tyrol }
			39 = { is_valid_annexation_state = yes } #South Tyrol
			783 = { is_valid_annexation_state = yes } #Trentino
		}
		ai_chance = { base = 100 }

		# Trentino
		set_temp_variable = { tag_to_release = event_target:italy }
		783 = { transfer_state_and_add_claim = yes }
		var:tag_to_release = { country_event = annex.18 }
		custom_effect_tooltip = tooltip_white_line

		# South Tyrol
		set_temp_variable = { tag_to_release = event_target:austria }
		if = {
			limit = { 4 = { is_core_of = var:tag_to_release } }
			39 = { transfer_state_and_add_core = yes }
		}
		else = {
			39 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Annex the German lands, give the rest to Italy
		log = "[GetLogInfo]: event annex.1036 option annex.1036.e"
		name = annex.1036.e
		trigger = {
			has_event_target = can_annex_southern_tyrol
			has_event_target = italy
			39 = { is_valid_annexation_state = yes } #South Tyrol
			783 = { is_valid_annexation_state = yes } #Trentino
		}
		ai_chance = { base = 100 }

		# South Tyrol
		add_state_core = 39
		custom_effect_tooltip = tooltip_white_line

		# Trentino
		set_temp_variable = { tag_to_release = event_target:italy }
		783 = { transfer_state_and_add_claim = yes }
	}

	option = { #Annex the Italian lands, give the rest to Germany/Austria
		log = "[GetLogInfo]: event annex.1036 option annex.1036.f"
		name = annex.1036.f
		trigger = {
			has_event_target = can_annex_trentino
			has_event_target = austria
			783 = { is_valid_annexation_state = yes } #Trentino
			39 = { is_valid_annexation_state = yes } #South Tyrol
		}
		ai_chance = { base = 100 }

		# South Tyrol
		set_temp_variable = { tag_to_release = event_target:austria }
		if = {
			limit = { 4 = { is_core_of = var:tag_to_release } }
			39 = { transfer_state_and_add_core = yes }
		}
		else = {
			39 = { transfer_state_and_add_claim = yes }
		}
		custom_effect_tooltip = tooltip_white_line

		# Trentino
		if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 160.owner }
			783 = { transfer_state_and_add_claim = yes }
		}
		else = {
			783 = { add_claim_of_ROOT = yes }
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1036 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_trentino
		}
		ai_chance = {
			base = 100
			modifier = { #Non-NatPop Italy doesn't want Southern Tyrol
				factor = 0
				NOT = { has_government = national_populist }
				has_event_target = austria
			}
		}
		if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 160.owner }
			39 = { #Southern Tyrol
				if = {
					limit = { is_valid_annexation_state = yes }
					transfer_state_and_add_claim = yes
				}
			}
			783 = { #Trentino
				if = {
					limit = { is_valid_annexation_state = yes }
					transfer_state_and_add_claim = yes
				}
			}
		}
		else = {
			39 = { #Southern Tyrol
				if = {
					limit = { is_valid_annexation_state = yes }
					add_claim_of_ROOT = yes
				}
			}
			783 = { #Trentino
				if = {
					limit = { is_valid_annexation_state = yes }
					add_claim_of_ROOT = yes
				}
			}
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1036 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_southern_tyrol
		}
		ai_chance = {
			base = 100
			modifier = { #Germany doesn't want Trentino
				factor = 0
				has_event_target = italy
				NOT = { original_tag = AUS }
			}
		}
		39 = { #Southern Tyrol
			if = {
				limit = { is_valid_annexation_state = yes }
				if = {
					limit = { ROOT = { original_tag = AUS } }
					remove_claim_and_add_core_of_ROOT = yes
				}
				else = {
					add_claim_of_ROOT = yes
					enable_state_integration_50_compliance = yes
				}
			}
		}
		783 = { #Trentino
			if = {
				limit = { is_valid_annexation_state = yes }
				if = {
					limit = { ROOT = { original_tag = AUS } }
					remove_claim_and_add_core_of_ROOT = yes
				}
				else = {
					add_claim_of_ROOT = yes
				}
			}
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1036 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_trentino }
			NOT = { has_event_target = can_annex_southern_tyrol }
		}
		ai_chance = { base = 0 }
		set_country_flag = AUS_TRENT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Switzerland
	id = annex.1037
	title = annexation_SWI_CONQ
	desc = annexation_SWI_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { has_government = national_populist }
			set_global_flag = SWI_germanization
			SWI = {
				SWI_eugen_bircher = {
					set_nationality = PREV
					if = {
						limit = { has_ideology = national_populist_subtype }
						promote_character = national_populist_subtype
					}
					else = {
						add_country_leader_role = {
							country_leader = { ideology = national_populist_subtype }
							promote_leader = yes
						}
					}
				}
			}
		}
		else = {
			clr_global_flag = SWI_germanization
			SWI = { SWI_eugen_bircher = { retire = yes } }
		}

		760 = { retain_state = yes } #Romandy
		761 = { retain_state = yes } #Ticino

		if = {
			limit = {
				var:780.owner = { #Baden
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:780.owner = { save_event_target_as = germany }
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1037 option annex.1037.a"
		name = annex.1037.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
				has_government = national_populist
			}
			modifier = {
				factor = 0.4
				has_authoritarian_government = yes
				is_ally_with = event_target:germany
			}
		}
		set_temp_variable = { tag_to_release = SWI }
		release_targeted_tag = yes
		if = {
			limit = { tag = GER }
			SWI = { complete_national_focus = SWI_german_aid }
		}
		else_if = {
			limit = { tag = AUS }
			SWI = { complete_national_focus = SWI_austrian_assisstance }
		}
		else_if = {
			limit = { has_socialist_government = yes }
			SWI = {
				complete_national_focus = SWI_bend_to_france
				unlock_national_focus = SWI_referendum_syndicalism
			}
		}
	}

	option = { #Give to Germany
		log = "[GetLogInfo]: event annex.1037 option annex.1037.b"
		name = annex.1037.b
		trigger = {
			has_event_target = germany
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				is_germany_or_splinter_tag = yes
				has_government = national_populist
			}
			modifier = {
				add = 60
				has_authoritarian_government = yes
				is_ally_with = event_target:germany
			}
		}
		set_temp_variable = { tag_to_release = event_target:germany }
		3 = { #Swiss Plateau
			add_claim_of_target_and_transfer_if_owned = yes
			hidden_effect = { var:tag_to_release = { PREV = { enable_state_integration_80_compliance = yes } } }
		}
		151 = { #Eastern Switzerland
			add_claim_of_target_and_transfer_if_owned = yes
			hidden_effect = { var:tag_to_release = { PREV = { enable_state_integration_80_compliance = yes } } }
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1037 option annex.integration"
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				has_government = national_populist
			}
		}
		3 = { #Swiss Plateau
			add_claim_of_ROOT = yes
			enable_state_integration_80_compliance = yes
		}
		151 = { #Eastern Switzerland
			add_claim_of_ROOT = yes
			enable_state_integration_80_compliance = yes
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1037 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = SWI_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Romandy
	id = annex.1039
	title = annexation_ROMANDY_CONQ
	desc = annexation_ROMANDY_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Return to SWI
		log = "[GetLogInfo]: event annex.1039 option annex.1039.a"
		name = annex.1039.a
		trigger = {
			SWI = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_french_tag = yes
				NOT = { is_ally_with = SWI }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = SWI }
				var:27.owner = { #Bourgogne
					is_french_tag = yes
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = SWI }
		760 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Return to our French allies
		log = "[GetLogInfo]: event annex.1039 option annex.1039.b"
		name = annex.1039.b
		trigger = {
			is_french_tag = no
			var:27.owner = { #Bourgogne
				is_french_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = 27.owner }
				is_ally_with = SWI
			}
		}
		set_temp_variable = { tag_to_release = 27.owner }
		760 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1039 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = { base = 30 }
		760 = { add_claim_of_ROOT = yes }
	}

	option = { #Keep it
		log = "[GetLogInfo]: event annex.1039 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_french_tag = no
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = ROMANDY_CONQ
	}
}

country_event = { #Fate of Ticino
	id = annex.1040
	title = annexation_TICINO_CONQ
	desc = annexation_TICINO_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Return to SWI
		log = "[GetLogInfo]: event annex.1040 option annex.1040.a"
		name = annex.1040.a
		trigger = {
			SWI = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_italian_unifier_tag = yes
				NOT = { is_ally_with = SWI }
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = SWI }
				var:159.owner = { #Lombardy
					is_italian_tag = yes
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = SWI }
		761 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Return to our Italian allies
		log = "[GetLogInfo]: event annex.1040 option annex.1040.b"
		name = annex.1040.b
		trigger = {
			is_italian_unifier_tag = no
			var:159.owner = { #Lombardy
				is_italian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = 159.owner }
				is_ally_with = SWI
			}
		}
		set_temp_variable = { tag_to_release = 159.owner }
		761 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1040 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				is_italian_unifier_tag = yes
				original_tag = LOM
			}
		}
		ai_chance = { base = 30 }
		if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 159.owner }
			761 = { transfer_state_and_add_claim = yes }
		}
		else = {
			761 = { add_claim_of_ROOT = yes }
		}
	}

	option = { #Keep it
		log = "[GetLogInfo]: event annex.1040 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_italian_unifier_tag = no
			NOT = { original_tag = LOM }
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = TICINO_CONQ
	}
}

#####################################
##   W E S T E R N   E U R O P E   ##
#####################################

country_event = { #Fate of France
	id = annex.1041
	title = annexation_FRA_CONQ
	desc = annexation_FRA_CONQ_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					is_mainland_france_state = no
					NOT = { state = 1 } #Corsica
				}
				remove_core_of = FRA
				remove_claim_by = FRA
			}
			1 = { retain_state = yes } #Corsica
			14 = { retain_state = yes } #Upper Brittany
			17 = { retain_state = yes } #Pas-de-Calais
			28 = { retain_state = yes } #Alsace-Lorraine
			29 = { retain_state = yes } #Dunkirk
			735 = { retain_state = yes } #Savoy
			762 = { retain_state = yes } #Nice
			779 = { retain_state = yes } #Labourd
			817 = { retain_state = yes } #Roussillon
			943 = { retain_state = yes } #Upper Savoy
			980 = { retain_state = yes } #Lille
			983 = { retain_state = yes } #Brittany
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1041 option annex.1041.a"
		name = annex.1041.a #Restore the Commune of France!
		ai_chance = { base = 100 }
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = FRA }
		}
		set_temp_variable = { tag_to_release = FRA }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1041 option annex.1041.b"
		name = annex.1041.b #Restore the French Republic!
		ai_chance = { base = 100 }
		trigger = {
			is_ally_with = ENT
			NOT = { country_exists = NFA }
			has_socialist_government = no
		}
		set_temp_variable = { tag_to_release = NFA }
		FRA = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_claims = yes
		puppet_released_tag = yes
		hidden_effect = { NFA_puppet_setup = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1041 option annex.1041.c"
		name = annex.1041.c #Set up a French Puppet Government
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				tag = GER
				NFA = { is_ai = no }
			}
		}
		trigger = {
			has_socialist_government = no
			NOT = {
				is_ally_with = ENT
				is_ally_with = NFA
				country_exists = FRP
			}
		}
		set_temp_variable = { tag_to_release = FRP }
		FRA = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_cores = yes
		puppet_released_tag = yes
		if = {
			limit = { country_exists = NFA }
			reverse_add_opinion_modifier = {
				target = NFA
				modifier = occupied_france
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1041 option annex.1041.e"
		name = annex.1041.e #Give it to our French allies
		trigger = {
			is_ally_with = NFA
		}
		ai_chance = { base = 100 }
		clear_retained_states = yes
		set_temp_variable = { tag_to_release = NFA }
		FRA = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_claims = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1041 option annex.1041.f"
		name = annex.1041.f #Meet with the French
		trigger = {
			tag = GER
			NFA = { any_owned_state = { is_mainland_france_state = yes } }
		}
		ai_chance = { base = 100 }
		NFA = { country_event = nfa.120 }
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1041 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { is_ally_with = NFA }
		}
		ai_chance = { base = 0 }
		occupy_large_country = yes
		set_country_flag = FRA_CONQ
		if = {
			limit = { country_exists = NFA }
			reverse_add_opinion_modifier = {
				target = NFA
				modifier = occupied_france
			}
		}
	}
}

country_event = { #Fate of Brittany
	id = annex.1042
	title = annexation_BRI_CONQ
	desc = annexation_BRI_CONQ_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	option = { #Liberate Brittany
		log = "[GetLogInfo]: event annex.1042 option annex.1042.a"
		name = annex.1042.a
		trigger = {
			is_french_tag = no
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				is_germany_or_splinter_tag = no
			}
		}
		set_temp_variable = { tag_to_release = BRI }
		var:tag_to_release = {
			add_state_core = 14 #Upper Brittany
			add_state_core = 983 #Brittany
		}
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #give to France
		log = "[GetLogInfo]: event annex.1042 option annex.1042.b"
		name = annex.1042.b
		trigger = {
			is_french_tag = no
			var:30.owner = { #Loire
				is_french_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = no
			}
		}
		set_temp_variable = { tag_to_release = 30.owner }
		14 = { add_core_of_target_and_transfer_if_owned = yes } #Upper Brittany
		983 = { add_core_of_target_and_transfer_if_owned = yes } #Brittany
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1042 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = { base = 1000 }
		14 = { remove_claim_and_add_core_of_ROOT = yes } #Upper Brittany
		983 = { remove_claim_and_add_core_of_ROOT = yes } #Brittany
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1042 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_french_tag = no
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = BRI_CONQ
	}
}

country_event = { #Fate of Pas de Calais
	id = annex.1043
	title = annexation_PASDECALAIS_CONQ
	desc = annexation_PASDECALAIS_CONQ_desc
	picture = GFX_report_event_generic_map_france

	is_triggered_only = yes

	immediate = {
		17 = { clear_retain_state = yes }
		28 = { clear_retain_state = yes }
		980 = { clear_retain_state = yes }
		if = {
			limit = { BLG = { ROOT_can_grant_land = yes } }
			BLG = { save_event_target_as = belgium }
		}
		else = {
			if = {
				limit = { WAL = { ROOT_can_grant_land = yes } }
				WAL = { save_event_target_as = wallonia }
			}
			if = {
				limit = { FLA = { ROOT_can_grant_land = yes } }
				FLA = { save_event_target_as = flanders }
			}
			else_if = {
				limit = {
					HOL = {
						owns_state = 6 #Flanders
						ROOT_can_grant_land = yes
					}
				}
				HOL = { save_event_target_as = flanders }
			}
		}
		if = {
			limit = {
				var:24.owner = { #Picardy
					is_french_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:24.owner = { save_event_target_as = france }
		}
	}

	option = { #give to France
		log = "[GetLogInfo]: event annex.1043 option annex.1043.a"
		name = annex.1043.a
		trigger = {
			has_event_target = france
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:france }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 29 #Dunkirk
					state = 980 #Lille
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_add_core = yes
		}
	}

	option = { #give to Belgium
		log = "[GetLogInfo]: event annex.1043 option annex.1043.b"
		name = annex.1043.b
		trigger = {
			has_event_target = belgium
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:belgium }
		every_owned_state = {
			limit = {
				OR = {
					state = 29 #Dunkirk
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #give to Wallonia
		log = "[GetLogInfo]: event annex.1043 option annex.1043.c"
		name = annex.1043.c
		trigger = {
			has_event_target = wallonia
			OR = {
				event_target:wallonia = { owns_state = 980 } #Lille
				980 = { is_valid_annexation_state = yes }
			}
			OR = {
				29 = { is_valid_annexation_state = no } #Dunkirk
				NOT = { has_event_target = flanders }
			}
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:wallonia }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #give to Flanders
		log = "[GetLogInfo]: event annex.1043 option annex.1043.d"
		name = annex.1043.d
		trigger = {
			has_event_target = flanders
			17 = { is_valid_annexation_state = no } #Pas-de-Calais
			980 = { is_valid_annexation_state = no } #Lille
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:flanders }
		29 = { transfer_state_and_add_core = yes } #Dunkirk
	}

	option = { #split between Flanders and Wallonia
		log = "[GetLogInfo]: event annex.1043 option annex.1043.e"
		name = annex.1043.e
		trigger = {
			has_event_target = wallonia
			has_event_target = flanders
			29 = { is_valid_annexation_state = yes } #Dunkirk
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas-de-Calais
				980 = { is_valid_annexation_state = yes } #Lille
			}
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:flanders }
		29 = { transfer_state_and_add_core = yes } #Dunkirk
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:wallonia }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #split between France and Belgium
		log = "[GetLogInfo]: event annex.1043 option annex.1043.f"
		name = annex.1043.f
		trigger = {
			has_event_target = france
			has_event_target = belgium
			17 = { is_valid_annexation_state = yes } #Pas-de-Calais
			OR = {
				29 = { is_valid_annexation_state = yes } #Dunkirk
				980 = { is_valid_annexation_state = yes } #Lille
			}
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:france }
		17 = { transfer_state_and_add_core = yes } #Dunkirk
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:belgium }
		if = {
			limit = { 29 = { is_valid_annexation_state = yes } }
			29 = { transfer_state_and_add_core = yes }
		}
		if = {
			limit = { 980 = { is_valid_annexation_state = yes } }
			29 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #split between France and Wallonia
		log = "[GetLogInfo]: event annex.1043 option annex.1043.g"
		name = annex.1043.g
		trigger = {
			has_event_target = france
			has_event_target = wallonia
			980 = { is_valid_annexation_state = yes } #Lille
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas-de-Calais
				29 = { is_valid_annexation_state = yes } #Dunkirk
			}
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:france }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 29 #Dunkirk
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_add_core = yes
		}
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:wallonia }
		980 = { transfer_state_and_add_claim = yes } #Lille
	}

	option = { #split between France and Flanders
		log = "[GetLogInfo]: event annex.1043 option annex.1043.h"
		name = annex.1043.h
		trigger = {
			has_event_target = france
			has_event_target = flanders
			29 = { is_valid_annexation_state = yes } #Dunkirk
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas-de-Calais
				980 = { is_valid_annexation_state = yes } #Lille
			}
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = event_target:france }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_add_core = yes
		}
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:flanders }
		29 = { transfer_state_and_add_core = yes } #Dunkirk
	}

	option = { #split between France, Flanders and Wallonia
		log = "[GetLogInfo]: event annex.1043 option annex.1043.i"
		name = annex.1043.i
		trigger = {
			has_event_target = france
			has_event_target = flanders
			has_event_target = wallonia
			17 = { is_valid_annexation_state = yes } #Pas-de-Calais
			29 = { is_valid_annexation_state = yes } #Dunkirk
			980 = { is_valid_annexation_state = yes } #Lille
			is_french_tag = no
		}
		ai_chance = { base = 90 }
		set_temp_variable = { tag_to_release = 24.owner }
		17 = { transfer_state_and_add_core = yes } #Pas-de-Calais
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:flanders }
		29 = { transfer_state_and_add_core = yes } #Dunkirk
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:wallonia }
		980 = { transfer_state_and_add_claim = yes } #Lille
	}

	option = { #split with Flanders (for Wallonia)
		log = "[GetLogInfo]: event annex.1043 option annex.1043.j"
		name = annex.1043.j
		trigger = {
			original_tag = WAL
			NOT = { tag = BLG }
			has_event_target = flanders
			29 = { is_valid_annexation_state = yes } #Dunkirk
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas-de-Calais
				980 = { is_valid_annexation_state = yes } #Lille
			}
		}
		ai_chance = { base = 1000 }
		set_temp_variable = { tag_to_release = event_target:flanders }
		29 = { transfer_state_and_add_core = yes } #Dunkirk

		custom_effect_tooltip = tooltip_white_line
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
			}
			add_claim_of_ROOT = yes
		}
	}

	option = { #split with France (for Flanders/Netherlands)
		log = "[GetLogInfo]: event annex.1043 option annex.1043.k"
		name = annex.1043.k
		trigger = {
			OR = {
				original_tag = FLA
				AND = {
					original_tag = HOL
					owns_state = 6 #Flanders
				}
			}
			NOT = { tag = BLG }
			has_event_target = france
			29 = { is_valid_annexation_state = yes } #Dunkirk
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas-de-Calais
				980 = { is_valid_annexation_state = yes } #Lille
			}
		}
		ai_chance = { base = 1000 }
		29 = { add_claim_of_ROOT = yes } #Dunkirk

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:wallonia }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_add_core = yes
		}
	}

	option = { #split with Wallonia (for Flanders/Netherlands)
		log = "[GetLogInfo]: event annex.1043 option annex.1043.l"
		name = annex.1043.l
		trigger = {
			OR = {
				original_tag = FLA
				AND = {
					original_tag = HOL
					owns_state = 6 #Flanders
				}
			}
			NOT = { tag = BLG }
			has_event_target = wallonia
			29 = { is_valid_annexation_state = yes } #Dunkirk
			OR = {
				17 = { is_valid_annexation_state = yes } #Pas-de-Calais
				980 = { is_valid_annexation_state = yes } #Lille
			}
		}
		ai_chance = { base = 1000 }
		29 = { add_claim_of_ROOT = yes } #Dunkirk

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:wallonia }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
				is_valid_annexation_state = yes
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1043 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = { base = 1000 }
		every_owned_state = {
			limit = {
				OR = {
					state = 29 #Dunkirk
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
			}
			remove_claim_and_add_core_of_ROOT = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1043 option annex.integration"
		name = annex.integration
		trigger = {
			tag = BLG
		}
		ai_chance = { base = 1000 }
		every_owned_state = {
			limit = {
				OR = {
					state = 29 #Dunkirk
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
			}
			add_claim_of_ROOT = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1043 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = WAL
			NOT = { tag = BLG }
			OR = {
				29 = { is_valid_annexation_state = no } #Dunkirk
				NOT = { has_event_target = flanders }
			}
		}
		ai_chance = { base = 1000 }
		every_owned_state = {
			limit = {
				OR = {
					state = 17 #Pas-de-Calais
					state = 980 #Lille
				}
			}
			add_claim_of_ROOT = yes
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1043 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = FLA
				AND = {
					original_tag = HOL
					owns_state = 6 #Flanders
				}
			}
			NOT = { tag = BLG }
			OR = {
				AND = {
					17 = { is_valid_annexation_state = no } #Pas-de-Calais
					980 = { is_valid_annexation_state = no } #Lille
				}
				AND = {
					NOT = { has_event_target = france }
					NOT = { has_event_target = flanders }
				}
			}
		}
		ai_chance = { base = 1000 }
		29 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1043 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { tag = BLG }
			NOT = {
				AND = {
					original_tag = WAL
					OR = {
						29 = { is_valid_annexation_state = no } #Dunkirk
						NOT = { has_event_target = flanders }
					}
				}
				AND = {
					OR = {
						original_tag = FLA
						AND = {
							original_tag = HOL
							owns_state = 6
						}
					}
					OR = {
						AND = {
							17 = { is_valid_annexation_state = no } #Pas-de-Calais
							980 = { is_valid_annexation_state = no } #Lille
						}
						AND = {
							NOT = { has_event_target = france }
							NOT = { has_event_target = flanders }
						}
					}
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = PASDECALAIS_CONQ
	}
}

country_event = { #Fate of Britain
	id = annex.1044
	title = annexation_ENG_CONQ
	desc = annexation_ENG_CONQ_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = GBP }
			remove_all_cores_and_claims_of_tags = yes
		}
	}

	option = { #united britain
		log = "[GetLogInfo]: event annex.1044 option annex.1044.a"
		name = annex.1044.a
		trigger = {
			121 = { is_valid_annexation_state = yes } #Lothian
			NOT = { is_in_faction_with = ENT }
			has_socialist_government = no
		}
		ai_chance = { base = 30 }
		custom_effect_tooltip = GBP_british_collab
		hidden_effect = {
			create_GBP_cores = yes
			set_temp_variable = { tag_to_release = GBP }
			release_targeted_tag = yes

			if = {
				limit = { has_government = national_populist }
				GBP = { create_nationalist_english_government = yes }
			}
			else_if = {
				limit = { has_dictatorship_government = yes }
				GBP = { create_autocratic_english_government = yes }
			}
			else = {
				GBP = {
					random_list = {
						40 = { create_leftist_democratic_english_government = yes }
						40 = { create_centrist_democratic_english_government = yes }
						20 = { create_right_democratic_english_government = yes }
					}
				}
			}
			GBP = {
				GBP_transfer_english_commanders = yes
				SCO_transfer_commanders = yes
				WLS_transfer_commanders = yes
				country_event = gbp.4
			}
			if = {
				limit = { tag = GER }
				country_event = gbp.1
			}
			else = {
				country_event = gbp.7
			}
		}
		recheck_annexations = yes
	}
	option = { #divide GBP/SCO
		log = "[GetLogInfo]: event annex.1044 option annex.1044.b"
		name = annex.1044.b
		trigger = {
			121 = { is_valid_annexation_state = yes } #Lothian
			NOT = { is_in_faction_with = ENT }
			has_socialist_government = no
		}
		ai_chance = { base = 40 }
		set_temp_variable = { GBP_no_scotland = 1 }
		custom_effect_tooltip = GBP_two_collabs
		hidden_effect = {
			create_SCO_cores = yes
			set_temp_variable = { tag_to_release = SCO }
			release_targeted_tag = yes

			create_GBP_cores = yes
			set_temp_variable = { tag_to_release = GBP }
			release_targeted_tag = yes

			if = {
				limit = { has_government = national_populist }
				GBP = { create_nationalist_english_government = yes }
				SCO = {
					set_country_flag = scotland_paternal_autocrat
					create_scottish_interim_government = yes
				}
			}
			else_if = {
				limit = { has_dictatorship_government = yes }
				GBP = { create_autocratic_english_government = yes }
				SCO = {
					set_country_flag = scotland_paternal_autocrat
					create_scottish_interim_government = yes
				}
			}
			else = {
				GBP = {
					random_list = {
						40 = { create_leftist_democratic_english_government = yes }
						30 = { create_centrist_democratic_english_government = yes }
						30 = { create_right_democratic_english_government = yes }
					}
				}
				SCO = {
					set_country_flag = scotland_democratic
					create_scottish_interim_government = yes
				}
			}

			GBP = {
				set_cosmetic_tag = GBP_england
				set_party_name = {
					ideology = paternal_autocrat
					long_name = GBP_paternal_autocrat_party_long_england
					name = GBP_paternal_autocrat_party_england
				}
				GBP_transfer_english_commanders = yes
				WLS_transfer_commanders = yes
				country_event = gbp.4
			}

			SCO = {
				SCO_transfer_commanders = yes
				country_event = gbp.5
			}

			country_event = gbp.2
		}
		recheck_annexations = yes
	}
	option = { #divide all
		log = "[GetLogInfo]: event annex.1044 option annex.1044.c"
		name = annex.1044.c
		trigger = {
			121 = { is_valid_annexation_state = yes } #Lothian
			121 = { is_valid_annexation_state = yes } #South Wales
			NOT = { is_in_faction_with = ENT }
			has_socialist_government = no
		}
		ai_chance = { base = 30 }
		set_temp_variable = { GBP_no_scotland = 1 }
		set_temp_variable = { GBP_no_wales = 1 }
		custom_effect_tooltip = GBP_three_collabs
		hidden_effect = {
			create_WLS_cores = yes
			set_temp_variable = { tag_to_release = WLS }
			release_targeted_tag = yes

			create_SCO_cores = yes
			set_temp_variable = { tag_to_release = SCO }
			release_targeted_tag = yes

			create_GBP_cores = yes
			set_temp_variable = { tag_to_release = GBP }
			release_targeted_tag = yes

			if = {
				limit = { has_government = national_populist }
				GBP = { create_nationalist_english_government = yes }
				SCO = {
					set_country_flag = scotland_paternal_autocrat
					create_scottish_interim_government = yes
				}
				WLS = {
					set_country_flag = wales_paternal_autocrat
					create_welsh_interim_government = yes
				}
			}
			else_if = {
				limit = { has_dictatorship_government = yes }
				GBP = { create_autocratic_english_government = yes }
				SCO = {
					set_country_flag = scotland_paternal_autocrat
					create_scottish_interim_government = yes
				}
				WLS = {
					set_country_flag = wales_paternal_autocrat
					create_welsh_interim_government = yes
				}
			}
			else = {
				GBP = {
					set_cosmetic_tag = GBP_england
					random_list = {
						40 = { create_leftist_democratic_english_government = yes }
						20 = { create_centrist_democratic_english_government = yes }
						40 = { create_right_democratic_english_government = yes }
					}
				}
				SCO = {
					set_country_flag = scotland_democratic
					create_scottish_interim_government = yes
				}
				WLS = {
					random_list = {
						40 = { set_country_flag = wales_social_liberal }
						60 = { set_country_flag = wales_social_conservative }
					}
					create_welsh_interim_government = yes
				}
			}
			country_event = gbp.3
			GBP = {
				set_cosmetic_tag = GBP_england
				set_party_name = {
					ideology = paternal_autocrat
					long_name = GBP_paternal_autocrat_party_long_england
					name = GBP_paternal_autocrat_party_england
				}
				GBP_transfer_english_commanders = yes
				country_event = gbp.4
			}
			SCO = {
				SCO_transfer_commanders = yes
				country_event = gbp.5
			}
			WLS = {
				WLS_transfer_commanders = yes
				country_event = gbp.6
			}
		}
		recheck_annexations = yes
	}
	option = { #England
		log = "[GetLogInfo]: event annex.1044 option annex.1044.g"
		name = annex.1044.g
		trigger = {
			121 = { is_valid_annexation_state = no } #Lothian
			NOT = { is_in_faction_with = ENT }
			has_socialist_government = no
		}
		ai_chance = { base = 0 }
		set_temp_variable = { GBP_no_scotland = 1 }
		custom_effect_tooltip = GBP_eng_collab
		hidden_effect = {
			create_GBP_cores = yes
			set_temp_variable = { tag_to_release = GBP }
			release_targeted_tag = yes

			if = {
				limit = { has_government = national_populist }
				GBP = { create_nationalist_english_government = yes }
			}
			else_if = {
				limit = { has_dictatorship_government = yes }
				GBP = { create_autocratic_english_government = yes }
			}
			else = {
				GBP = {
					random_list = {
						40 = { create_leftist_democratic_english_government = yes }
						20 = { create_centrist_democratic_english_government = yes }
						40 = { create_right_democratic_english_government = yes }
					}
				}
			}
			GBP = {
				set_cosmetic_tag = GBP_england
				set_party_name = {
					ideology = paternal_autocrat
					long_name = GBP_paternal_autocrat_party_long_england
					name = GBP_paternal_autocrat_party_england
				}
				GBP_transfer_english_commanders = yes
				country_event = gbp.4
			}
			if = {
				limit = { tag = GER }
				country_event = gbp.1
			}
		}
		recheck_annexations = yes
	}
	option = { #restore a free United Kingdom
		log = "[GetLogInfo]: event annex.1044 option annex.1044.e"
		name = annex.1044.e
		ai_chance = { base = 10 }
		trigger = {
			is_in_faction_with = ENT
		}
		country_event = uk.1
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1044 option annex.1044.h"
		name = annex.1044.h #Restore the Union of Britain!
		ai_chance = { base = 1000 }
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = ENG }
		}
		set_temp_variable = { tag_to_release = ENG }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { has_government = totalist }
				var:tag_to_release = { create_totalist_english_government = yes }
			}
			else = {
				var:tag_to_release = { create_syndicalist_english_government = yes }
			}
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1044 option annex.1044.i"
		name = annex.1044.i #Puppet Socialist England!
		ai_chance = { base = 0 }
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = ENG }
		}
		hidden_effect = {
			every_state = {
				limit = { region = 3 } #Scotland
				retain_state = yes
			}
			122 = { retain_state = yes } #South Wales
			131 = { retain_state = yes } #Northern England
			957 = { retain_state = yes } #North Wales
		}
		set_temp_variable = { tag_to_release = ENG }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { has_government = totalist }
				var:tag_to_release = { create_totalist_english_government = yes }
			}
			else = {
				var:tag_to_release = { create_syndicalist_english_government = yes }
			}
		}
		recheck_annexations = yes
	}
	option = { #occupy all
		log = "[GetLogInfo]: event annex.1044 option annex.1044.j"
		name = annex.1044.j
		ai_chance = { base = 0 }
		set_country_flag = ENG_CONQ
		occupy_large_country = yes
	}
}

country_event = { #Fate of Scotland
	id = annex.1045
	title = annexation_SCO_CONQ
	desc = annexation_SCO_CONQ_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = SCO }
			remove_all_cores_and_claims_of_tags = yes
			if = {
				limit = { NOT = { has_global_flag = scotland_released_once } }
				set_global_flag = scotland_released_once
				SCO = {
					add_ideas = {
						SCO_unionist_question
						SCO_economic_breakdown
					}
				}
			}
		}
	}

	option = { #puppet SCO
		log = "[GetLogInfo]: event annex.1045 option annex.1045.a"
		name = annex.1045.a
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				owns_state = 131
			}
		}
		hidden_effect = { create_SCO_cores = yes }
		set_temp_variable = { tag_to_release = SCO }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { has_government = totalist }
				SCO = { create_totalist_scottish_government = yes }
			}
			else_if = {
				limit = {
					OR = {
						has_government = syndicalist
						has_government = radical_socialist
					}
				}
				SCO = {
					random_list = {
						40 = { create_syndicalist_scottish_government = yes }
						60 = { create_radical_socialist_scottish_government = yes }
					}
				}
			}
			else_if = {
				limit = { has_elected_government = yes }
				SCO = {
					set_country_flag = scotland_democratic
					create_scottish_interim_government = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				SCO = {
					set_country_flag = scotland_paternal_autocrat
					create_scottish_interim_government = yes
				}
			}
			SCO = {
				SCO_transfer_commanders = yes
				country_event = gbp.5
			}
		}
		recheck_annexations = yes
	}
	option = { #puppet larger SCO
		log = "[GetLogInfo]: event annex.1045 option annex.1045.b"
		name = annex.1045.b
		trigger = {
			131 = { is_valid_annexation_state = yes }
		}
		ai_chance = { base = 80 }
		hidden_effect = {
			create_SCO_cores = yes
			SCO = { add_state_core = 131 } #Northern England
		}
		set_temp_variable = { tag_to_release = SCO }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { has_socialist_government = yes }
				SCO = { create_syndicalist_scottish_government = yes }
			}
			else_if = {
				limit = { has_elected_government = yes }
				SCO = {
					set_country_flag = scotland_democratic
					create_scottish_interim_government = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				SCO = {
					set_country_flag = scotland_paternal_autocrat
					create_scottish_interim_government = yes
				}
			}
			SCO = {
				SCO_transfer_commanders = yes
				country_event = gbp.5
			}
		}
		recheck_annexations = yes
	}
	option = { #give to the British
		log = "[GetLogInfo]: event annex.1045 option annex.1046.b"
		name = annex.1046.b
		trigger = {
			GBP = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				GBP = { has_cosmetic_tag = GBP_england }
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					region = 3 #Scotland
					state = 131 #Northern England
				}
			}
			add_core_of = GBP
			transfer_state_to = GBP
		}
		GBP = {
			if = {
				limit = { has_cosmetic_tag = GBP_england }
				drop_cosmetic_tag = yes
			}
		}
		recheck_annexations = yes
	}
	option = { #give to the Canadians
		log = "[GetLogInfo]: event annex.1045 option annex.1046.c"
		name = annex.1046.c
		trigger = {
			IMP = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 80 }
		every_owned_state = {
			limit = {
				OR = {
					region = 3 #Scotland
					state = 131 #Northern England
				}
			}
			transfer_state_to = IMP
		}
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1045 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = SCO_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Wales
	id = annex.1046
	title = annexation_WLS_CONQ
	desc = annexation_WLS_CONQ_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = WLS }
			remove_all_cores_and_claims_of_tags = yes
			if = {
				limit = { NOT = { has_global_flag = wales_released_once } }
				set_global_flag = wales_released_once
				WLS = {
					add_ideas = {
						WLS_unionist_tensions
						WLS_economic_breakdown
					}
				}
			}
		}
	}

	option = { #puppet WLS
		log = "[GetLogInfo]: event annex.1046 option annex.1046.a"
		name = annex.1046.a
		ai_chance = { base = 80 }
		hidden_effect = { create_WLS_cores = yes }
		set_temp_variable = { tag_to_release = WLS }
		release_targeted_tag = yes
		hidden_effect = {
			if = {
				limit = { has_government = totalist }
				WLS = { create_totalist_welsh_government = yes }
			}
			else_if = {
				limit = {
					OR = {
						has_government = syndicalist
						has_government = radical_socialist
					}
				}
				WLS = {
					random_list = {
						40 = { create_syndicalist_welsh_government = yes }
						60 = { create_radical_socialist_welsh_government = yes }
					}
				}
			}
			else_if = {
				limit = { has_elected_government = yes }
				WLS = {
					random_list = {
						40 = { set_country_flag = wales_social_liberal }
						60 = { set_country_flag = wales_social_conservative }
					}
					create_welsh_interim_government = yes
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				WLS = {
					set_country_flag = wales_paternal_autocrat
					create_welsh_interim_government = yes
				}
			}
			WLS = { WLS_transfer_commanders = yes }
		}
		recheck_annexations = yes
	}
	option = { #give to the British
		log = "[GetLogInfo]: event annex.1046 option annex.1046.b"
		name = annex.1046.b
		trigger = {
			GBP = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 80 }
		every_owned_state = {
			limit = {
				OR = {
					state = 122
					state = 957
				}
			}
			add_core_of = GBP
			transfer_state_to = GBP
		}
		recheck_annexations = yes
	}
	option = { #give to the Canadians
		log = "[GetLogInfo]: event annex.1046 option annex.1046.c"
		name = annex.1046.c
		trigger = {
			IMP = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 80 }
		every_owned_state = {
			limit = {
				OR = {
					state = 122
					state = 957
				}
			}
			transfer_state_to = IMP
		}
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1046 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = WLS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Ireland
	id = annex.1047
	title = annexation_IRE_CONQ
	desc = annexation_IRE_CONQ_desc
	picture = GFX_report_event_generic_map_brit

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = {
					is_british_tag = yes
					has_socialist_government = no
					119 = {
						is_owned_by = ROOT
						is_claim_or_core_of_ROOT = no
					}
				}
				add_state_claim = 119 #Northern Ireland
			}
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1047 option annex.1047.a"
		name = annex.1047.a
		trigger = {
			is_british_tag = no
		}
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		if = {
			limit = {
				OR = {
					tag = NFA
					tag = PAP
					tag = POR
					tag = SIC
					original_tag = SPA
				}
				has_government = national_populist
			}
			country_event = annex.184
		}
		else = {
			hidden_effect = {
				var:tag_to_release = {
					if = {
						limit = { has_socialist_government = yes }
						IRE_create_govt_totalist_puppet = yes
					}
					else_if = {
						limit = { has_elected_government = yes }
						IRE_create_govt_soccon_puppet = yes
					}
					else = {
						IRE_create_govt_pataut_puppet = yes
					}
				}
			}
		}
		hidden_effect = {
			IRE = {
				IRE_teardown_foreign_policy_decisions = yes
				IRE_teardown_ENG_decisions = yes
			}
			if = {
				limit = { has_socialist_government = yes }
				IRE = {
					IRE_teardown_USA_decisions = yes
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1047 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_british_tag = no
		}
		ai_chance = { base = 0 }
		set_country_flag = IRE_CONQ
		occupy_medium_country = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1047 option annex.1047.c"
		name = annex.1047.c #Puppet the south
		trigger = {
			is_british_tag = yes
			has_socialist_government = no
		}
		ai_chance = { base = 90 }
		add_political_power = -50
		add_stability = -0.05
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = IRE_gbr
				set_popularities = {
					totalist = 3
					radical_socialist = 5
					syndicalist = 7
					social_democrat = 2
					social_liberal = 6
					market_liberal = 6
					social_conservative = 50
					authoritarian_democrat = 9
					paternal_autocrat = 7
					national_populist = 5
				}
				set_politics = {
					ruling_party = social_conservative
					elections_allowed = no
				}
				activate_advisor = IRE_james_dillon_sic
				if = {
					limit = { has_character = IRE_frank_macdermot }
					IRE_frank_macdermot = {
						promote_character = social_conservative_subtype
					}
				}
			}
			119 = { #Northern Ireland
				add_state_modifier = {
					modifier = {
						resistance_growth = -0.50
					}
				}
			}
		}
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1047 option annex.1047.d"
		name = annex.1047.d #Ireland independent
		trigger = {
			is_british_tag = yes
			has_socialist_government = no
		}
		ai_chance = { base = 10 }
		every_owned_state = {
			limit = {
				is_core_of = IRE
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = IRE
		}
		if = {
			limit = { is_in_faction = yes }
			faction_leader = { add_to_faction = IRE }
		}
		hidden_effect = {
			IRE = {
				drop_cosmetic_tag = yes
				set_cosmetic_tag = IRE_gbr
				set_popularities = {
					totalist = 3
					radical_socialist = 5
					syndicalist = 7
					social_democrat = 2
					social_liberal = 6
					market_liberal = 6
					social_conservative = 50
					authoritarian_democrat = 9
					paternal_autocrat = 7
					national_populist = 5
				}
				set_politics = {
					ruling_party = social_conservative
					elections_allowed = no
				}
				activate_advisor = IRE_james_dillon_sic
				if = {
					limit = { has_character = IRE_frank_macdermot }
					IRE_frank_macdermot = {
						promote_character = social_conservative_subtype
					}
				}
			}
			IRE = {
				IRE_teardown_foreign_policy_decisions = yes
				IRE_teardown_ENG_decisions = yes
			}
			if = {
				limit = { has_socialist_government = yes }
				IRE = {
					IRE_teardown_USA_decisions = yes
				}
			}
		}
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1047 option annex.1047.e"
		name = annex.1047.e #Direct Rule
		trigger = {
			is_british_tag = yes
			has_socialist_government = no
		}
		ai_chance = { base = 0 }
		set_country_flag = IRE_CONQ
		occupy_medium_country = yes
		set_country_flag = ENG_IRA
		add_ideas = ENG_IRA_only
		irish_republican_army_events = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1047 option annex.1047.f"
		name = annex.1047.f #Puppet
		trigger = {
			is_british_tag = yes
			has_socialist_government = yes
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				OR = {
					has_government = totalist
					has_government = radical_socialist
				}
			}
		}
		add_political_power = -100
		add_stability = -0.05
		set_temp_variable = { tag_to_release = IRE }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = { IRE_create_govt_totalist_puppet = yes }
		}
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1047 option annex.1047.g"
		name = annex.1047.g #Independent
		trigger = {
			is_british_tag = yes
			has_socialist_government = yes
		}
		ai_chance = { base = 30 }
		every_owned_state = {
			limit = {
				is_core_of = IRE
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = IRE
		}
		if = {
			limit = { is_in_faction = yes }
			faction_leader = { add_to_faction = IRE }
		}
		hidden_effect = {
			IRE = {
				set_popularities = {
					totalist = 12
					radical_socialist = 16
					syndicalist = 40
					social_democrat = 2
					social_liberal = 6
					market_liberal = 6
					social_conservative = 7
					authoritarian_democrat = 9
					paternal_autocrat = 2
					national_populist = 0
				}
				set_politics = {
					ruling_party = syndicalist
					elections_allowed = no
				}
				activate_advisor = IRE_william_x_obrien_sic
			}
			IRE = {
				IRE_teardown_foreign_policy_decisions = yes
				IRE_teardown_ENG_decisions = yes
			}
			if = {
				limit = { has_socialist_government = yes }
				IRE = {
					IRE_teardown_USA_decisions = yes
				}
			}
		}
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1047 option annex.1047.h"
		name = annex.1047.h #Direct Rule
		trigger = {
			is_british_tag = yes
			has_socialist_government = yes
		}
		ai_chance = { base = 0 }
		set_country_flag = IRE_CONQ
		occupy_medium_country = yes
		set_country_flag = ENG_IRA
		add_ideas = ENG_IRA
		irish_republican_army_events = yes
	}
}

country_event = { #Fate of the Netherlands
	id = annex.1048
	title = annexation_HOL_CONQ
	desc = annexation_HOL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = HOL }
			remove_all_cores_and_claims_of_tags = yes
			HOL = {
				add_state_core = 7 #Holland
				add_state_core = 35 #North Brabant
				add_state_core = 36 #Frisia
				add_state_core = 866 #Guelders
				add_state_core = 978 #Limburg
				add_state_core = 979 #Westerscheldt
				remove_ideas = generic_neutral_foreign_policy
				if = {				# Removing socialist ideas from non-socialist puppet
					limit = { ROOT = { has_socialist_government = no } }
					remove_ideas = {
						HOL_idea_labour_camps
						HOL_idea_mass_collectivisation
						HOL_syn_rebuilding_idea
						HOL_Rebuild_The_Bureaucracy_idea
						HOL_Proletarian_humanism_idea
						HOL_Proletarian_humanism_idea_final
						HOL_Industrial_Dem_idea
						HOL_Industrial_Dem_idea_final
						HOL_idea_democratic_workplace
						HOL_idea_democratic_workplace_final
						HOL_idea_verzorgingsstaat
						HOL_idea_transition_to_fair_economy
						HOL_idea_market_socialism
						HOL_british_designs_tanks
						HOL_war_communism
						HOL_Red_Sky
						HOL_Red_Sky_1
						HOL_red_navy_0
						HOL_red_navy_1
						HOL_red_navy_2
						HOL_red_advisors
						HOL_rev_vanguard_idea
						HOL_rev_vanguard_idea_final
					}
				}
				else = {				# Removing non-socialist ideas from socialist puppet
					remove_ideas = {
						HOL_idea_ambtenarenverbod
						HOL_idea_ambtenarenverbod_01
						HOL_idea_ambtenarenverbod_02
						HOL_idea_february_strike
						HOL_idea_strict_weapon_laws
						HOL_idea_orde_van_oranje_nassau
						HOL_idea_secret_police
						HOL_idea_outlawed_unions
						HOL_idea_staatsvakbond
						HOL_idea_nationalist_renaissance
					}
				}
				remove_ideas = {	# Common ideas that should be removed for puppets
					HOL_idea_negotiate_with_extremists
					HOL_idea_agreement_with_left_0
					HOL_idea_agreement_with_left_1
					HOL_idea_agreement_with_left_2
					HOL_idea_agreement_with_right_1
					HOL_idea_agreement_with_right_2
					HOL_idea_crisis
					HOL_idea_economic_recovery
					HOL_idea_batavian_courage
					HOL_idea_batavian_courage_1
					HOL_idea_batavian_courage_2
					HOL_idea_instability
				}
			}
		}
		var:925.owner = {
			if = {
				limit = {
					is_belgian_tag = yes
					ROOT_can_grant_land = yes
				}
				save_event_target_as = belgium
			}
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1048 option annex.1048.a"
		name = annex.1048.a
		trigger = {
			NOT = { is_in_faction_with = DEI }
		}
		ai_chance = { base = 20 }
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		HOL_puppet_setup = yes
		recheck_annexations = yes
	}

	option = { #Annex Limburg, liberate the rest
		log = "[GetLogInfo]: event annex.1048 option annex.1048.b"
		name = annex.1048.b
		ai_chance = {
			base = 20
			modifier = {
				factor = 4
				NOT = { has_event_target = belgium }
			}
		}
		trigger = {
			NOT = { is_in_faction_with = DEI }
			is_germany_or_splinter_tag = yes
			978 = { is_valid_annexation_state = yes } #Limburg
		}
		add_state_claim = 978 #Limburg
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		HOL_puppet_setup = yes
		recheck_annexations = yes
	}

	option = { #Annex Limburg, give BEL its claims, liberate the rest
		log = "[GetLogInfo]: event annex.1048 option annex.1048.c"
		name = annex.1048.c
		ai_chance = { base = 80 }
		trigger = {
			NOT = { is_in_faction_with = DEI }
			has_event_target = belgium
			is_germany_or_splinter_tag = yes
			978 = { is_valid_annexation_state = yes } #Limburg
			979 = { is_valid_annexation_state = yes } #Westerscheldt
		}
		add_state_claim = 978 #Limburg
		set_temp_variable = { tag_to_release = event_target:belgium }
		979 = { transfer_state_and_add_claim = yes } #Westerscheldt
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		HOL_puppet_setup = yes
	}

	option = { #Annex Limburg + Zeeuws-Vlaanderen, liberate the rest
		log = "[GetLogInfo]: event annex.1048 option annex.1048.d"
		name = annex.1048.d
		ai_chance = { base = 80 }
		trigger = {
			NOT = { is_in_faction_with = DEI }
			is_belgian_tag = yes
			OR = {
				978 = { is_valid_annexation_state = yes } #Limburg
				979 = { is_valid_annexation_state = yes } #Westerscheldt
			}
		}
		add_state_claim = 978 #Limburg
		add_state_claim = 979 #Westerscheldt
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		HOL_puppet_setup = yes
		recheck_annexations = yes
	}

	option = { #Give Limburg + Zeeuws-Vlaanderen to Belgium, liberate the rest
		log = "[GetLogInfo]: event annex.1048 option annex.1048.e"
		name = annex.1048.e
		ai_chance = { base = 80 }
		trigger = {
			NOT = { is_in_faction_with = DEI }
			has_event_target = belgium
			OR = {
				978 = { is_valid_annexation_state = yes } #Limburg
				979 = { is_valid_annexation_state = yes } #Westerscheldt
			}
		}
		set_temp_variable = { tag_to_release = event_target:belgium }
		every_owned_state = {
			limit = {
				OR = {
					state = 978 #Limburg
					state = 979 #Westerscheldt
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_and_add_claim = yes
		}
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = HOL }
		release_targeted_tag = yes
		HOL_puppet_setup = yes
	}

	option = { #Restore to the government in exile
		log = "[GetLogInfo]: event annex.1048 option annex.1048.f"
		name = annex.1048.f
		trigger = {
			is_in_faction_with = DEI
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				is_belgian_tag = yes
			}
		}
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = DEI
		}
		recheck_annexations = yes
	}

	option = { #Annex Limburg, restore the government in exile
		log = "[GetLogInfo]: event annex.1048 option annex.1048.g"
		name = annex.1048.g
		trigger = {
			is_in_faction_with = DEI
			is_germany_or_splinter_tag = yes
			978 = { is_valid_annexation_state = yes } #Limburg
		}
		ai_chance = { base = 1000 }
		add_state_claim = 978 #Limburg
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = DEI
		}
		recheck_annexations = yes
	}

	option = { #Annex Limburg, give BEL its claims, restore the government in exile
		log = "[GetLogInfo]: event annex.1048 option annex.1048.h"
		name = annex.1048.h
		trigger = {
			is_in_faction_with = DEI
			has_event_target = belgium
			is_germany_or_splinter_tag = yes
			978 = { is_valid_annexation_state = yes } #Limburg
			979 = { is_valid_annexation_state = yes } #Westerscheldt
		}
		ai_chance = { base = 1000 }
		add_state_claim = 978 #Limburg
		set_temp_variable = { tag_to_release = event_target:belgium }
		979 = { transfer_state_and_add_claim = yes } #Westerscheldt
		custom_effect_tooltip = tooltip_white_line
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = DEI
		}
	}

	option = { #Annex Limburg + Zeeuws-Vlaanderen, restore the government in exile
		log = "[GetLogInfo]: event annex.1048 option annex.1048.i"
		name = annex.1048.i
		trigger = {
			is_in_faction_with = DEI
			is_belgian_tag = yes
			OR = {
				978 = { is_valid_annexation_state = yes } #Limburg
				979 = { is_valid_annexation_state = yes } #Westerscheldt
			}
		}
		ai_chance = { base = 1000 }
		add_state_claim = 978 #Limburg
		add_state_claim = 979 #Westerscheldt
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = DEI
		}
		recheck_annexations = yes
	}

	option = { #Give Limburg + Zeeuws-Vlaanderen to Belgium, restore the government in exile
		log = "[GetLogInfo]: event annex.1048 option annex.1048.j"
		name = annex.1048.j
		trigger = {
			is_in_faction_with = DEI
			has_event_target = belgium
			OR = {
				978 = { is_valid_annexation_state = yes } #Limburg
				979 = { is_valid_annexation_state = yes } #Westerscheldt
			}
		}
		ai_chance = { base = 1000 }
		set_temp_variable = { tag_to_release = event_target:belgium }
		every_owned_state = {
			limit = {
				OR = {
					state = 978 #Limburg
					state = 979 #Westerscheldt
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_and_add_claim = yes
		}
		every_owned_state = {
			limit = {
				is_core_of = HOL
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = DEI
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1048 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { is_in_faction_with = DEI }
		}
		ai_chance = { base = 0 }
		set_country_flag = HOL_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Belgium
	id = annex.1049
	title = annexation_BEL_CONQ
	desc = annexation_BEL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = BEL }
			remove_all_cores_and_claims_of_tags = yes
			BEL = {
				add_state_core = 6 #Flanders
				add_state_core = 34 #Hainaut
				add_state_core = 741 #Ardennes
				add_state_core = 925 #Brabant
				add_state_core = 948 #Liège
				drop_cosmetic_tag = yes
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = BEL_interim_government
					name = BEL_interim_government
				}
				BEL_remove_monarchy = yes
				remove_ideas = {
					generic_neutral_foreign_policy
					BEL_anti_german_sentiment1
					BEL_anti_german_sentiment2
					BEL_anti_german_sentiment3
					BEL_anti_german_sentiment4
					BEL_anti_german_sentiment5
				}
			}
		}
	}

	option = { #puppet Belgium
		log = "[GetLogInfo]: event annex.1049 option annex.1049.a"
		name = annex.1049.a
		ai_chance = {
			base = 100
			modifier = {
				add = -80
				tag = HOL
			}
			modifier = {
				add = -30
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = BEL }
		release_targeted_tag = yes
		hidden_effect = {
			BEL_move_country_leaders = yes
			BEL = {
				WAL_move_unit_leaders = yes
				FLA_move_unit_leaders = yes
				if = {
					limit = { has_country_leader = { character = BEL_belgian_parliament ruling_only = no } }
					promote_character = BEL_charles_daspremont_lynden
				}
			}
		}
		if = {
			limit = { tag = GER }
			BEL = {
				BEL_create_adelbert = yes
				set_party_name = {
					ideology = authoritarian_democrat
					name = BEL_authoritarian_democrat_party
					long_name = BEL_authoritarian_democrat_party_long
				}
				add_ideas = BEL_anti_german_sentiment5
				load_focus_tree = BEL_focus
			}
		}
		else_if = {
			limit = { is_in_faction_with = ENT }
			BEL = {
				BEL_create_albert = yes
				unlock_national_focus = BEL_Elections
				if = {
					limit = { has_completed_focus = BEL_Republic }
					uncomplete_national_focus = {
						focus = BEL_Republic
						uncomplete_children = yes
					}
				}
				unlock_national_focus = BEL_Monarchy
			}
			set_autonomy = {
				target = BEL
				autonomy_state = autonomy_free
			}
		}
		else = {
			unlock_national_focus = BEL_Elections
			if = {
				limit = { has_completed_focus = BEL_Monarchy }
				uncomplete_national_focus = {
					focus = BEL_Monarchy
					uncomplete_children = yes
				}
			}
			unlock_national_focus = BEL_Republic
		}
		recheck_annexations = yes
	}

	option = { #Split it
		log = "[GetLogInfo]: event annex.1049 option annex.1049.b"
		name = annex.1049.b
		ai_chance = {
			base = 0
			modifier = {
				add = 80
				tag = HOL
			}
			modifier = {
				add = 30
				is_french_tag = yes
			}
		}
		custom_effect_tooltip = new_annexation_decisions_tt
		set_country_flag = { flag = BEL_CONQ days = 100 value = 1 }
		recheck_annexations_immediate = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1049 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		if = {
			limit = { is_french_tag = yes }
			add_state_claim = 34
			add_state_claim = 741
			add_state_claim = 948
		}
		else = {
			set_country_flag = WAL_CONQ
		}
		set_country_flag = FLA_CONQ
		set_country_flag = BEL_CONQ
		occupy_large_country = yes
	}
}

country_event = { #Fate of Flanders
	id = annex.1050
	title = annexation_FLA_CONQ
	desc = annexation_FLA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = FLA }
			remove_all_cores_and_claims_of_tags = yes
			FLA = {
				add_state_core = 6 #Flanders
				add_state_core = 925 #Brabant
				add_state_claim = 29 #Dunkirk
			}
		}
	}

	option = { #puppet Flanders
		log = "[GetLogInfo]: event annex.1050 option annex.1050.a"
		name = annex.1050.a
		ai_chance = { base = 25 }
		set_temp_variable = { tag_to_release = FLA }
		release_targeted_tag = yes
		hidden_effect = {
			FLA_move_country_leaders = yes
			FLA = { FLA_move_unit_leaders = yes }
		}
		if = {
			limit = { tag = GER }
			var:tag_to_release = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
				FLA_create_karel = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #Give it to HOL
		log = "[GetLogInfo]: event annex.1050 option annex.1050.b"
		name = annex.1050.b
		trigger = {
			HOL = { is_ally_of_ROOT = yes }
			NOT = { tag = HOL }
		}
		ai_chance = { base = 50 }
		FLA = { set_transfer_target_cores = yes }
		set_temp_variable = { tag_to_release = HOL }
		transfer_targeted_territory = yes
	}

	option = { #Give Flanders to Wallonia
		log = "[GetLogInfo]: event annex.1050 option annex.1050.c"
		name = annex.1050.c
		trigger = {
			WAL = {
				is_ally_with = ROOT
				is_subject = no
			}
			NOT = { tag = WAL }
		}
		ai_chance = { base = 25 }
		FLA = { set_transfer_target_cores = yes }
		set_temp_variable = { tag_to_release = WAL }
		transfer_targeted_territory = yes
	}

	option = { #reunite Belgium under Wallonia
		log = "[GetLogInfo]: event annex.1050 option annex.1050.d"
		name = annex.1050.d
		trigger = {
			has_subject = WAL
		}
		ai_chance = { base = 25 }
		FLA = { set_transfer_target_cores = yes }
		set_temp_variable = { tag_to_release = WAL }
		transfer_targeted_territory = yes
		WAL = {
			add_state_core = 6 #Flanders
			add_state_core = 925 #Brabant
			if = {
				limit = { owns_state = 29 } #Dunkirk
				add_state_core = 29
			}
			else_if = {
				limit = { NOT = { is_ally_with = 29.owner } }
				add_state_claim = 29
			}
			FLA_move_unit_leaders = yes
			set_cosmetic_tag = BEL
		}
	}

	option = { #reunite Belgium
		log = "[GetLogInfo]: event annex.1050 option annex.1050.e"
		name = annex.1050.e
		trigger = {
			tag = WAL
		}
		ai_chance = { base = 100 }
		add_state_core = 6 #Flanders
		add_state_core = 925 #Brabant
		if = {
			limit = { owns_state = 29 } #Dunkirk
			add_state_core = 29
		}
		else_if = {
			limit = { NOT = { is_ally_with = 29.owner } }
			add_state_claim = 29
		}
		FLA_move_unit_leaders = yes
		set_cosmetic_tag = BEL
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1050 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = FLA_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Wallonia
	id = annex.1051
	title = annexation_WAL_CONQ
	desc = annexation_WAL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			add_to_temp_array = { core_removal_array = WAL }
			remove_all_cores_and_claims_of_tags = yes
			WAL = {
				add_state_core = 34 #Hainaut
				add_state_core = 741 #Ardennes
				add_state_core = 948 #Liège
				set_party_name = {
					ideology = authoritarian_democrat
					name = BEL_interim_government
					long_name = BEL_interim_government
				}
				if = {
					limit = { has_character = BEL_adelbert_von_hohenzollern }
					retire_character = BEL_adelbert_von_hohenzollern
				}
				if = {				# Removing non-socialist ideas from socialist puppet
					limit = { ROOT = { has_socialist_government = yes } }
					remove_ideas = {
						WAL_Monarchy
						WAL_Monarchy_Army
						WAL_Monarchy_Conscription
						WAL_Monarchy_Disorderly
						WAL_Monarchy_Disorderly2
						WAL_Monarchy_Royal_Councillor
						WAL_Monarchy_Constitution
						WAL_REX
						WAL_REX_SOC
						WAL_REX_ROY
						WAL_REX_BOTH
						WAL_REX_CORP
						WAL_REX_MIL
					}
				}
				if = {				# Removing socialist ideas from non-socialist puppet
					limit = { ROOT = { NOT = { has_socialist_government = yes } } }
					remove_ideas = {
						WAL_SYNDICALIST_LIB_DIS
						WAL_SYNDICALIST_POB_PRES
						WAL_SYNDICALIST_SYN_CHAIR
						WAL_SYNDICALIST_SEIZE_BASIC
						WAL_SYNDICALIST_NATIONAL_COMPANY
						WAL_SYNDICALIST_STATE_EDUCATION
						WAL_SYNDICALIST_CATHOLIC_EDUCATION_BANNED
						WAL_SYNDICALIST_POB_CONTROL
						WAL_SYNDICALIST_SYN_CONTROL
						WAL_TOTALIST_RESISTANCE
						WAL_TOTALIST_RESISTANCE2
						WAL_TOTALIST_RESISTANCE3
						WAL_TOTALIST_RESISTANCE4
						WAL_TOTALIST_RESISTANCE5
						WAL_TOTALIST_CONGRESS
						WAL_TOTALIST_ARMY
						WAL_TOTALIST_ROYAL_ASSETS
					}
				}
				if = {				# Removing GER ideas
					limit = { ROOT = { NOT = { tag = GER } } }
					remove_ideas = {
						WAL_ECONOMIC_TROUBLE_GER
						WAL_ECONOMIC_GERMAN_EXPORT
						WAL_ECONOMIC_CONGOLESE_RESOURCES
						WAL_ARMY_GERMAN
					}
				}
			}
		}
	}

	option = { #puppet Wallonia
		log = "[GetLogInfo]: event annex.1051 option annex.1051.a"
		name = annex.1051.a
		ai_chance = { base = 25 }
		set_temp_variable = { tag_to_release = WAL }
		release_targeted_tag = yes
		WAL = {
			WAL_move_country_leaders = yes
			WAL_reset_focus_tree_and_ideas = yes
			WAL_move_unit_leaders = yes
		}
		recheck_annexations = yes
	}

	option = { #Give it to FLA
		log = "[GetLogInfo]: event annex.1051 option annex.1051.b"
		name = annex.1051.b
		trigger = {
			FLA = {
				is_ally_with = ROOT
				is_subject = no
			}
			NOT = { tag = FLA }
		}
		ai_chance = { base = 50 }
		every_owned_state = {
			limit = {
				is_core_of = WAL
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = FLA
		}
		recheck_annexations = yes
	}

	option = { #Give it to France
		log = "[GetLogInfo]: event annex.1051 option annex.1051.c"
		name = annex.1051.c
		trigger = {
			is_french_tag = no
			var:24.owner = {
				is_french_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = { base = 25 }
		WAL = { set_transfer_target_cores = yes }
		set_temp_variable = { tag_to_release = 24.owner }
		transfer_targeted_territory_and_add_claims = yes
	}

	option = { #reunite Belgium under Flanders
		log = "[GetLogInfo]: event annex.1051 option annex.1050.d"
		name = annex.1050.d
		trigger = {
			has_subject = FLA
		}
		ai_chance = { base = 25 }
		WAL = { set_transfer_target_cores = yes }
		set_temp_variable = { tag_to_release = FLA }
		transfer_targeted_territory = yes
		FLA = {
			add_state_core = 34 #Hainaut
			add_state_core = 741 #Ardennes
			add_state_core = 948 #Liège
			WAL_move_unit_leaders = yes
			set_cosmetic_tag = BEL
		}
	}

	option = { #reunite Belgium
		log = "[GetLogInfo]: event annex.1051 option annex.1050.e"
		name = annex.1050.e
		trigger = {
			tag = FLA
		}
		ai_chance = { base = 50 }
		add_state_core = 34 #Hainaut
		add_state_core = 741 #Ardennes
		add_state_core = 948 #Liège
		WAL_move_unit_leaders = yes
		set_cosmetic_tag = BEL
		recheck_annexations = yes
	}

	option = { #Annex Wallonia
		log = "[GetLogInfo]: event annex.1051 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
			owns_state = 16 #Paris
		}
		ai_chance = { base = 25 }
		add_state_claim = 34 #Hainaut
		add_state_claim = 741 #Ardennes
		add_state_claim = 948 #Liège
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1051 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				tag = FLA
				AND = {
					is_french_tag = yes
					owns_state = 16
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = WAL_CONQ
		occupy_medium_country = yes
	}
}

#####################################
##  N O R T H E R N   E U R O P E  ##
#####################################

country_event = { #Fate of Denmark
	id = annex.1052
	title = annexation_DEN_CONQ
	desc = annexation_DEN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			DEN = { DEN_remove_monarchy = yes }
			SCA = {
				every_character = {
					limit = { has_character_flag = DEN_leader }
					set_nationality = DEN
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
		}
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1052 option annex.1052.a"
		name = annex.1052.a
		ai_chance = { base = 100 }
		trigger = {
			has_socialist_government = no
			NOT = { has_government = national_populist }
		}
		set_temp_variable = { tag_to_release = DEN }
		release_targeted_tag = yes
		var:tag_to_release = {
			clr_country_flag = den_hybrid
			clr_country_flag = den_danish_republic
			DEN_create_christian = yes
		}
		hidden_effect = {
			DEN = {
				remove_ideas = {
					DEN_idea_opposition_controlled_landsting
					# Republican/socialist ideas
					DEN_idea_rigsfagforbund
					DEN_idea_danish_republic
					DEN_idea_danish_republic2
					DEN_idea_socialization
					DEN_idea_socialization2
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1052 option annex.1052.b"
		name = annex.1052.b
		ai_chance = { base = 100 }
		trigger = {
			if = {
				limit = {
					OR = {
						tag = GER
						tag = AUS
					}
				}
				OR = {
					has_socialist_government = yes
					has_government = national_populist
				}
			}
		}
		set_temp_variable = { tag_to_release = DEN }
		release_targeted_tag = yes
		var:tag_to_release = {
			if = {
				limit = { has_socialist_government = yes }
				set_country_flag = den_hybrid
				clr_country_flag = den_danish_republic
			}
			else = {
				clr_country_flag = den_hybrid
				set_country_flag = den_danish_republic
			}
		}
		hidden_effect = {
			DEN = {
				remove_ideas = {
					DEN_idea_opposition_controlled_landsting
					# Monarchist ideas
					DEN_idea_danish_monarchy
					DEN_idea_danish_monarchy2
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1052 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = DEN_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Iceland
	id = annex.1053
	title = annexation_ICE_CONQ
	desc = annexation_ICE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			SCA = {
				every_character = {
					limit = { has_character_flag = ICE_leader }
					set_nationality = ICE
				}
			}
			ICE = {
				set_country_flag = ICE_was_annexed
				remove_ideas = {
					ICE_Personal_Union
					ICE_Independent_Althing
					ICE_danish_bailout
					ICE_canadian_bailout
				}
			}
		}
	}

	option = { #liberate ICE
		log = "[GetLogInfo]: event annex.1053 option annex.1053.a"
		name = annex.1053.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					is_in_faction_with = DEN
					is_in_faction_with = NOR
				}
				NOT = {
					tag = DEN
					tag = NOR
					tag = CAN
					tag = USA
					has_country_flag = swe_flag_sweden_norway
				}
			}
		}
		set_temp_variable = { tag_to_release = ICE }
		release_targeted_tag = yes
		if = {
			limit = {
				tag = ENG
				has_socialist_government = yes
				CAN = {
					is_faction_leader = yes
					surrender_progress < 0.1
				}
			}
			ICE = { ICE_setup_antisocialist_resistance_decisions = yes }
		}
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1053 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = ICE_CONQ
	}
}

country_event = { #Fate of Greenland
	id = annex.1054
	title = annexation_GRN_CONQ
	desc = annexation_GRN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		101 = { clear_retain_state = yes }
		926 = { clear_retain_state = yes }
		hidden_effect = {
			SCA = {
				if = {
					limit = {
						exists = yes
						NOT = { owns_state = 101 }
					}
					add_state_claim = 101
					add_state_claim = 926
				}
			}
		}
	}

	option = { #Give Greenland to DEN
		log = "[GetLogInfo]: event annex.1054 option annex.1054.a"
		name = annex.1054.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_american_tag = yes
			}
		}
		trigger = {
			DEN = { is_ally_of_ROOT = yes }
		}
		DEN = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #Give Greenland to NOR
		log = "[GetLogInfo]: event annex.1054 option annex.1054.b"
		name = annex.1054.b
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_american_tag = yes
			}
			modifier = {
				factor = 0
				OR = {
					DEN = { is_ally_of_ROOT = yes }
					SCA = { is_ally_of_ROOT = yes }
				}
			}
		}
		trigger = {
			NOR = { is_ally_of_ROOT = yes }
		}
		NOR = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #Give Greenland to SWE-NOR
		log = "[GetLogInfo]: event annex.1054 option annex.1054.c"
		name = annex.1054.c
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_american_tag = yes
			}
			modifier = {
				factor = 0
				DEN = { is_ally_of_ROOT = yes }
			}
		}
		trigger = {
			SWE = {
				has_country_flag = swe_flag_sweden_norway
				is_ally_of_ROOT = yes
			}
		}
		SWE = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #Give Greenland to SCA
		log = "[GetLogInfo]: event annex.1054 option annex.1054.d"
		name = annex.1054.d
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_american_tag = yes
			}
		}
		trigger = {
			SCA = { is_ally_of_ROOT = yes }
		}
		SCA = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #Give Greenland to CAN
		log = "[GetLogInfo]: event annex.1054 option annex.1054.e"
		name = annex.1054.e
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				DEN = { is_ally_of_ROOT = yes }
			}
		}
		trigger = {
			CAN = {
				is_ally_of_ROOT = yes
				NOT = { owns_state = 101 }
				OR = {
					is_faction_leader = yes
					is_subject = yes
					NOT = {
						DEN = { is_ally_of_ROOT = yes }
						SCA = { is_ally_of_ROOT = yes }
					}
				}
			}
		}
		CAN = {
			transfer_state = 101
			transfer_state = 926
		}
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1054 option annex.occupation"
		name = annex.occupation
		ai_chance = {
			base = 0
			modifier = {
				add = 10
				is_american_tag = yes
			}
		}
		occupy_small_country = yes
		set_country_flag = GRN_CONQ
	}
}

country_event = { #Fate of Norway
	id = annex.1055
	title = annexation_NOR_CONQ
	desc = annexation_NOR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { tag = FIN }
				add_state_claim = 937 #Finnmark Plateau
			}
			SCA = {
				every_character = {
					limit = { has_character_flag = NOR_leader }
					set_nationality = NOR
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
			NOR = {
				NOR_remove_monarchy = yes
				if = {
					limit = { has_completed_focus = NOR_NAT_hirden }
					if = {
						limit = { ROOT = { has_dictatorship_government = yes } }
						NOR_create_rikshirden_leaders = yes
						every_unit_leader = {
							limit = { has_character_flag = NOR_leader }
							set_nationality = XXA
						}
					}
					else = {
						NOR_remove_rikshirden_leaders = yes
						XXA = {
							every_unit_leader = {
								limit = { has_character_flag = NOR_leader }
								set_nationality = NOR
							}
						}
					}
				}
				remove_ideas = {
					NOR_progressive_agreement_idea
					NOR_mixed_industry_idea
					NOR_conservative_agreement_idea
					NOR_free_market_idea
					NOR_organisation_xu_idea
					NOR_neutrality_idea_1
					NOR_neutrality_idea_2
					NOR_neutrality_idea_3
					NOR_canadian_mission_idea_1
					NOR_canadian_mission_idea_2
					NOR_canadian_mission_idea_3
				}
				if = {
					limit = { ROOT = { has_dictatorship_government = no } }
					remove_ideas = {
						NOR_rikshird_army
						NOR_statspolitiet_idea
						NOR_ns_arbeidstjeneste_idea
					}
				}
				if = {
					limit = { ROOT = { has_socialist_government = no } }
					remove_ideas = {
						NOR_syndicalist_norway_idea_1
						NOR_syndicalist_norway_idea_2
						NOR_syndicalist_norway_idea_3
						NOR_syndicalist_norway_idea_4
						NOR_syndicalist_norway_idea_5
						NOR_syndicalist_norway_idea_6
						NOR_syndicalist_norway_idea_7
						NOR_syndicalist_norway_idea_8
						NOR_syndicalist_norway_idea_9
						NOR_syndicalist_norway_idea_10
						NOR_syndicalist_norway_idea_11
						NOR_syndicalist_norway_idea_12
						NOR_syndicalist_norway_idea_13
						NOR_syndicalist_norway_idea_14
						NOR_syndicalist_industry_idea
						NOR_secret_police_idea_1
						NOR_secret_police_idea_2
						NOR_defensive_army_idea
						NOR_totalist_economy
						NOR_radicalist_economy
						NOR_syndicalist_economy
						NOR_totalistsociety
						NOR_radicalistsociety
						NOR_syndicalistsociety
						NOR_totalistpeople
						NOR_radicalistpeople
						NOR_syndicalistpeople
						NOR_AoR
					}
				}
			}
			SWE = {
				if = {
					limit = { ROOT = { has_socialist_government = no } }
					remove_ideas = SWE_union_activity
				}
			}
		}
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1055 option annex.1055.a"
		name = annex.1055.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				tag = SWE
				OR = {
					has_completed_focus = SWE_a_new_king
					NOT = { has_completed_focus = SWE_forced_abdication }
				}
			}
		}
		trigger = {
			has_socialist_government = no
		}
		set_temp_variable = { tag_to_release = NOR }
		release_targeted_tag = yes
		var:tag_to_release = { NOR_create_haakon = yes }
		recheck_annexations = yes
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1055 option annex.1055.c"
		name = annex.1055.c
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				tag = SWE
				OR = {
					has_completed_focus = SWE_a_new_king
					NOT = { has_completed_focus = SWE_forced_abdication }
				}
			}
		}
		set_temp_variable = { tag_to_release = NOR }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Form Sweden-Norway
		log = "[GetLogInfo]: event annex.1055 option annex.1055.b"
		name = annex.1055.b
		ai_chance = { base = 100 }
		trigger = {
			tag = SWE
			OR = {
				has_completed_focus = SWE_a_new_king
				NOT = { has_completed_focus = SWE_forced_abdication }
			}
		}
		set_cosmetic_tag = SWENOR
		every_state = {
			limit = {
				is_norway = yes
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		set_country_flag = NOR_CONQ
		set_country_flag = swe_flag_sweden_norway
		occupy_small_country = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1055 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = NOR_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Sweden
	id = annex.1056
	title = annexation_SWE_CONQ
	desc = annexation_SWE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { tag = FIN }
				add_state_claim = 909 #Tornedalen
			}
			if = {
				limit = {
					tag = NOR
					OR = {
						has_government = totalist
						has_government = paternal_autocrat
						has_government = national_populist
					}
				}
				add_state_claim = 778
				add_state_claim = 908
			}
			SWE = {
				SWE_remove_monarchy = yes
				remove_ideas = {
					# Socialist ideas
					SWE_union_activity
					SWE_totalistmilitary
					SWE_radicalistmilitary
					SWE_syndicalistmilitary
					SWE_totalisteconomy
					SWE_radicalisteconomy
					SWE_syndicalisteconomy
					SWE_totalistsociety
					SWE_radicalistsociety
					SWE_syndicalistsociety
					SWE_totalistpeople
					SWE_radicalistpeople
					SWE_syndicalistpeople
					SWE_collectivisation
					SWE_idea_true_folkhemmet
					SWE_idea_reactionary_resistance
				}
				if = {
					limit = { ROOT = { has_socialist_government = yes } }
					remove_ideas = {
						SWE_military_work_battalions_idea
						SWE_stapol_idea
						SWE_idea_divine_disapproval
						SWE_idea_divine_approval
						SWE_corporatized_statare_idea
						SWE_idea_aggressive_foreign_policy
						SWE_idea_front_riksledare
						SWE_idea_riksledare_dead
					}
				}
			}
			SCA = {
				every_character = {
					limit = { has_character_flag = SWE_leader }
					set_nationality = SWE
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
			145 = { retain_state = yes } #Aland
		}
	}

	option = { #liberate as monarchy
		log = "[GetLogInfo]: event annex.1056 option annex.1056.a"
		name = annex.1056.a
		ai_chance = { base = 100 }
		trigger = { has_socialist_government = no }
		set_temp_variable = { tag_to_release = SWE }
		release_targeted_tag = yes
		var:tag_to_release = {
			SWE_add_reactionary_generals = yes
			SWE_create_gustaf = yes
		}
		recheck_annexations = yes
	}

	option = { #liberate as republic
		log = "[GetLogInfo]: event annex.1056 option annex.1056.b"
		name = annex.1056.b
		ai_chance = { base = 98 }
		trigger = {
			if = {
				limit = {
					OR = {
						original_tag = GER
						original_tag = AUS
					}
				}
				has_socialist_government = yes
			}
		}
		set_temp_variable = { tag_to_release = SWE }
		release_targeted_tag = yes
		var:tag_to_release = {
			if = {
				limit = { has_socialist_government = yes }
				hidden_effect = { SWE_remove_reactionary_generals = yes }
			}
			else = {
				SWE_add_reactionary_generals = yes
			}
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1056 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = SWE_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of the Aland Islands
	id = annex.1057
	title = annexation_ALAND_CONQ
	desc = annexation_ALAND_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = SWE
					original_tag = FIN
					original_tag = SCA
				}
			}
			save_event_target_as = can_annex_aland
		}
		if = {
			limit = { FIN = { ROOT_can_grant_land = yes } }
			FIN = { save_event_target_as = finland }
		}
		if = {
			limit = {
				var:141.owner = { #Svealand
					OR = {
						original_tag = SWE
						original_tag = SCA
					}
					ROOT_can_grant_land = yes
				}
			}
			var:141.owner = { save_event_target_as = sweden }
		}
	}

	option = { #Give it to Finland
		log = "[GetLogInfo]: event annex.1057 option annex.1057.a"
		name = annex.1057.a
		trigger = {
			has_event_target = finland
			NOT = { has_event_target = can_annex_aland }
			if = {
				limit = { RUS_is_expansionist = yes }
				has_subject = event_target:finland
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:finland }
				is_ally_with = event_target:sweden
			}
		}
		set_temp_variable = { tag_to_release = event_target:finland }
		145 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to the Swedes
		log = "[GetLogInfo]: event annex.1057 option annex.1057.b"
		name = annex.1057.b
		trigger = {
			has_event_target = sweden
			NOT = { has_event_target = can_annex_aland }
			if = {
				limit = { RUS_is_expansionist = yes }
				has_subject = event_target:sweden
			}
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:sweden }
				is_ally_with = event_target:finland
			}
		}
		set_temp_variable = { tag_to_release = event_target:sweden }
		145 = { transfer_state_and_add_core = yes }
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1057 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_aland
		}
		145 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1057 option annex.integration"
		name = annex.integration
		trigger = {
			RUS_is_expansionist = yes
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					has_subject = SWE
					has_subject = FIN
				}
			}
		}
		145 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1057 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_aland }
			RUS_is_expansionist = no
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = ALAND_CONQ
	}
}

country_event = { #Fate of Finland
	id = annex.1058
	title = annexation_FIN_CONQ
	desc = annexation_FIN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = FIN
						is_claimed_by = FIN
					}
					is_finland = no
				}
				remove_core_of = FIN
				remove_claim_by = FIN
			}
			FIN = {
				drop_cosmetic_tag = yes
				promote_character = FIN_juho_kusti_paasikivi
				promote_character = FIN_vilho_annala
				set_party_name = {
					ideology = national_populist
					name = FIN_party_patriotic_peoples_movement
					long_name = FIN_party_patriotic_peoples_movement_long
				}
				if = {				# Removing socialist ideas from non-socialist puppet
					limit = { ROOT = { has_socialist_government = no } }
					remove_ideas = {
						FIN_red_guard_disbanded_idea
						FIN_weakened_red_guard_idea
						FIN_syndicalist_constitution_idea
						FIN_totalist_constitution_idea
						FIN_empower_the_labour_movement_idea
						FIN_second_red_terror_idea
						FIN_seizure_of_assets_idea
						FIN_military_purges_idea
						FIN_irridentism_idea
						FIN_confederation_of_finnish_trade_unions_idea
						FIN_finnish_sovereignty_idea
					}
				}
				else = {				# Removing non-socialist ideas from socialist puppet
					remove_ideas = {
						FIN_providing_raw_materials_idea
						FIN_finnish_ship_payments_idea
						FIN_german_weapon_imports
						FIN_kaiserliche_werft_kiel_idea
						FIN_constitution_of_finland_idea
						FIN_the_white_guard_idea
						FIN_economic_liberalism_idea
						FIN_corporatist_economics_idea
						FIN_irridentism_idea
						FIN_military_purges_idea
						FIN_funding_the_sinimustat_idea
						FIN_finnish_sovereignty_idea
						FIN_labour_strike_idea
						FIN_ukrainian_grain_imports_idea
						FIN_reduced_ukrainian_grain_imports_idea
					}
				}
			}
			SCA = {
				every_character = {
					limit = { has_character_flag = FIN_leader }
					set_nationality = FIN
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
			if = {
				limit = { is_russian_tag = yes }
				add_state_claim = 146 #Karelia
			}
			else_if = {
				limit = {
					tag = SWE
					has_socialist_government = no
				}
				add_state_claim = 145 #Aland
			}
			145 = { retain_state = yes } #Aland
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1058 option annex.1058.a"
		name = annex.1058.a
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				OR = {
					AND = {
						RUS_is_expansionist = yes
						is_monarchy = yes
					}
					AND = {
						tag = SWE
						has_government = national_populist
					}
					AND = {
						original_tag = GER
						has_socialist_government = no
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = FIN }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #liberate as kingdom
		log = "[GetLogInfo]: event annex.1058 option annex.1058.b"
		name = annex.1058.b
		trigger = {
			original_tag = GER
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					AND = {
						RUS_is_expansionist = yes
						is_monarchy = yes
					}
					AND = {
						tag = SWE
						has_government = national_populist
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = FIN }
		release_targeted_tag = yes
		var:tag_to_release = {
			set_cosmetic_tag = FIN_kingdom
			if = {
				limit = { has_character = FIN_friedrich_karl_von_hessen_kassel }
				FIN_friedrich_karl_von_hessen_kassel = { promote_character = paternal_autocrat_subtype }
			}
			else_if = {
				limit = { has_character = FIN_wolfgang_von_hessen_kassel }
				FIN_wolfgang_von_hessen_kassel = { promote_character = paternal_autocrat_subtype }
			}
			set_politics = {
				ruling_party = paternal_autocrat
				elections_allowed = no
			}
			set_political_party = {
				ideology = paternal_autocrat
				popularity = 60
			}
		}
		recheck_annexations = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1058 option annex.1058.c"
		name = annex.1058.c
		trigger = {
			OR = {
				RUS_is_expansionist = yes
				AND = {
					tag = SWE
					has_government = national_populist
				}
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
				is_monarchy = no
			}
		}
		every_state = {
			limit = {
				is_finland = yes
				is_claim_or_core_of_ROOT = no
				NOT = { state = 145 } #Åland
			}
			add_claim_by = ROOT
		}
		set_country_flag = FIN_CONQ
		occupy_medium_country = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1058 option annex.occupation"
		name = annex.occupation
		trigger = {
			RUS_is_expansionist = no
		}
		ai_chance = { base = 0 }
		set_country_flag = FIN_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Karelia
	id = annex.1059
	title = annexation_KARELIA_CONQ
	desc = annexation_KARELIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		146 = { clear_retain_state = yes } #Karelia
		213 = { clear_retain_state = yes } #Murmansk
		215 = { clear_retain_state = yes } #White Karelia
		216 = { clear_retain_state = yes } #Petrozavodsk
		722 = { clear_retain_state = yes } #Petsamo
	}

	option = { #Give it to Finland
		log = "[GetLogInfo]: event annex.1059 option annex.1059.a"
		name = annex.1059.a
		trigger = {
			NOT = {
				tag = FIN
				tag = SCA
			}
			FIN = { ROOT_can_grant_land = yes }
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = FIN }
		146 = { #Karelia
			if = {
				limit = {
					is_owned_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_and_add_core = yes
				custom_effect_tooltip = tooltip_white_line
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 213 #Murmansk
					state = 215 #White Karelia
					state = 216 #Petrozavodsk
					state = 722 #Petsamo
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_and_add_claim = yes
		}
		recheck_annexations = yes
	}

	option = { #Give it to the Russians
		log = "[GetLogInfo]: event annex.1059 option annex.1059.b"
		name = annex.1059.b
		trigger = {
			NOT = {
				tag = FIN
				tag = SCA
			}
			var:219.owner = { #Moscow
				is_russian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_german_tag = yes
				FIN = { ROOT_can_grant_land = yes }
			}
			modifier = {
				factor = 0.25
				FIN = { is_ally_of_ROOT = yes }
			}
		}
		set_temp_variable = { tag_to_release = var:219.owner }
		146 = { #Karelia
			if = {
				limit = {
					is_owned_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				transfer_state_and_add_claim = yes
				custom_effect_tooltip = tooltip_white_line
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 213 #Murmansk
					state = 215 #White Karelia
					state = 216 #Petrozavodsk
					state = 722 #Petsamo
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_and_add_core = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1059 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				tag = FIN
				tag = SCA
			}
		}
		ai_chance = { base = 100 }
		occupy_small_country = yes
		146 = { #Karelia
			if = {
				limit = {
					is_owned_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				add_core_of = ROOT
				custom_effect_tooltip = tooltip_white_line
			}
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 213 #Murmansk
					state = 215 #White Karelia
					state = 216 #Petrozavodsk
					state = 722 #Petsamo
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1059 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				tag = FIN
				tag = SCA
			}
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = KARELIA_CONQ
	}
}

#####################################
##   E A S T E R N   E U R O P E   ##
#####################################

country_event = { #Fate of Ukraine
	id = annex.1060
	title = annexation_UKR_CONQ
	desc = annexation_UKR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					NOT = { region = 130 } #Ukraine
					NOT = { state = 80 } #Cernauti
					NOT = { state = 89 } #Stanislawow
					NOT = { state = 91 } #Lwow
					NOT = { state = 93 } #Brest
					NOT = { state = 997 } #Polesia
					NOT = { state = 1088 } #Chelm
				}
				remove_core_of = UKR
				remove_claim_by = UKR
			}
			UKR = {
				UKR_clear_hetmanist_ideas = yes
				UKR_clear_republic_ideas = yes
				UKR_uskhd_end_tree = yes
				UKR_update_military = yes
				if = {
					limit = { has_completed_focus = UKR_bsd_mil1 }
					uncomplete_national_focus = {
						focus = UKR_bsd_mil1
						uncomplete_children = yes
					}
				}
				if = {
					limit = { has_completed_focus = UKR_destiny_of_ukraine }
					uncomplete_national_focus = {
						focus = UKR_destiny_of_ukraine
						uncomplete_children = yes
					}
				}
			}
			80 = { retain_state = yes } #Cernauti
			89 = { retain_state = yes } #Stanislawow
			91 = { retain_state = yes } #Lwow
			93 = { retain_state = yes } #Brest
			241 = { retain_state = yes } #Gomel
			997 = { retain_state = yes } #Polesia
			1088 = { retain_state = yes } #Chelm
		}
	}

	option = { #Puppet Republic
		log = "[GetLogInfo]: event annex.1060 option annex.1060.a"
		name = annex.1060.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_russian_tag = yes
			}
			modifier = {
				factor = 2
				has_democratic_government = yes
			}
		}
		hidden_effect = {
			set_temp_variable = { tag_to_release = UKR }
			release_targeted_tag = yes
			UKR = {
				UKR_remove_hetmanate = yes
				UKR_puppet_setup = yes
				set_cosmetic_tag = UKR_republic
			}
		}
		recheck_annexations = yes
	}

	option = { #Puppet Hetmanate
		log = "[GetLogInfo]: event annex.1060 option annex.1060.b"
		name = annex.1060.b
		trigger = {
			has_socialist_government = no
			NOT = { has_government = national_populist }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_russian_tag = yes
			}
			modifier = {
				factor = 2
				has_authoritarian_government = yes
			}
		}
		hidden_effect = {
			set_temp_variable = { tag_to_release = UKR }
			release_targeted_tag_nocosmetic = yes
			recheck_annexations = yes
			UKR = {
				UKR_pavlo_skoropadskyi = { set_nationality = XXA }
				UKR_danylo_skoropadskyi = { set_nationality = XXA }
			}
			if = {
				limit = {
					ROOT = { tag = AUS }
				}
				UKR = {
					UKR_puppet_setup = yes
					set_country_leader_portrait = {
						ideology = social_liberal
						portrait = GFX_IMAGE_NAME
					}
					set_portraits = {
						character = UKR_wilhelm_franz_von_habsburg
						civilian = { large = gfx/leaders/UKR/Portrait_UKR_Vasyl_Habsburg_King.png }
					}
					set_politics = {
						ruling_party = social_liberal
						elections_allowed = yes
					}
					set_political_party = {
						ideology = social_liberal
						popularity = 60
					}
					UKR_wilhelm_franz_von_habsburg = { promote_character = social_liberal_subtype }
					add_country_leader_trait = UKR_hetman
				}
				country_event = ukraine.77
			}
			else = {
				UKR = {
					UKR_puppet_setup = yes
					if = {
						limit = {
							NOT = { has_character = UKR_danylo_skoropadskyi }
						}
						XXA = { UKR_danylo_skoropadskyi = { set_nationality = UKR } }
						UKR_danylo_skoropadskyi = { promote_character = paternal_autocrat_subtype }
						UKR_danylo_skoropadskyi = { promote_character = authoritarian_democrat_subtype }
						UKR_danylo_skoropadskyi = { promote_character = social_conservative_subtype }
						UKR_danylo_skoropadskyi = { promote_character = market_liberal_subtype }
						UKR_danylo_skoropadskyi = { promote_character = social_liberal_subtype }
						UKR_danylo_skoropadskyi = { promote_character = social_democrat_subtype }
					}
				}
			}
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1060 option annex.1060.c"
		name = annex.1060.c
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = { base = 100 }
		every_state = {
			limit = {
				region = 130 #Ukraine
				NOT = {
					AND = {
						is_claim_or_core_of_owner = yes
						owner = { is_ally_of_ROOT = yes }
					}
				}
			}
			add_claim_by = ROOT
		}
		add_political_power = -100
		recheck_annexations = yes
		owner = {
			hidden_effect = {
				137 = { remove_dynamic_modifier = { modifier = UKR_crimean_autonomy } }
				137 = { remove_dynamic_modifier = { modifier = UKR_crimean_autonomy_2 } }
			}
		}
	}

	option = { #Give to Russia
		log = "[GetLogInfo]: event annex.1060 option annex.1060.d"
		name = annex.1060.d
		trigger = {
			is_russian_tag = no
			var:219.owner = {
				is_russian_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_german_tag = yes
			}
		}
		UKR = { set_transfer_target_cores = yes }
		set_temp_variable = { tag_to_release = 219.owner }
		transfer_targeted_territory = yes
		owner = {
			hidden_effect = {
				137 = { remove_dynamic_modifier = { modifier = UKR_crimean_autonomy } }
				137 = { remove_dynamic_modifier = { modifier = UKR_crimean_autonomy_2 } }
			}
		}
	}

	option = { #OTT - take Crimea
		log = "[GetLogInfo]: event annex.1060 option annex.1060.e"
		name = annex.1060.e
		trigger = {
			tag = OTT
			137 = { is_valid_annexation_state = yes }
		}
		ai_chance = { base = 50 }
		add_state_claim = 137
		hidden_effect = {
			UKR = {
				UKR_remove_hetmanate = yes
				UKR_puppet_setup = yes
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		release_targeted_tag = yes
		owner = {
			hidden_effect = {
				137 = { remove_dynamic_modifier = { modifier = UKR_crimean_autonomy } }
				137 = { remove_dynamic_modifier = { modifier = UKR_crimean_autonomy_2 } }
			}
		}
		recheck_annexations = yes
	}

	option = { #Occupy
		log = "[GetLogInfo]: event annex.1060 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_russian_tag = no
		}
		ai_chance = { base = 0 }
		set_country_flag = UKR_CONQ
		occupy_medium_country = yes
		owner = {
			hidden_effect = {
				137 = { remove_dynamic_modifier = { modifier = UKR_crimean_autonomy } }
				137 = { remove_dynamic_modifier = { modifier = UKR_crimean_autonomy_2 } }
			}
		}
	}
}

country_event = { #Fate of Brest
	id = annex.1061
	title = annexation_BREST_CONQ
	desc = annexation_BREST_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		93 = { clear_retain_state = yes }
	}

	option = { #give to Poland
		log = "[GetLogInfo]: event annex.1061 option annex.1061.a"
		name = annex.1061.a
		trigger = {
			997 = { is_valid_annexation_state = no } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			POL = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_russian_tag = yes
				POL = { is_ally_of_ROOT = no }
			}
			modifier = {
				factor = 0
				OR = {
					UKR = { is_ally_of_ROOT = yes }
					WHR = { is_ally_of_ROOT = yes }
					LIT = {
						is_ally_with = ROOT
						owns_state = 206 #Minsk
					}
				}
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to Ukraine
		log = "[GetLogInfo]: event annex.1061 option annex.1061.b"
		name = annex.1061.b
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			UKR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_russian_tag = yes
				UKR = { is_ally_of_ROOT = no }
			}
			modifier = {
				factor = 0
				OR = {
					POL = { is_ally_of_ROOT = yes }
					WHR = { is_ally_of_ROOT = yes }
					LIT = {
						is_ally_with = ROOT
						owns_state = 206 #Minsk
					}
				}
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		93 = { transfer_state_and_add_core = yes }
	}

	option = { #give to Belarus
		log = "[GetLogInfo]: event annex.1061 option annex.1061.c"
		name = annex.1061.c
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			WHR = {
				OR = {
					owns_state = 997 #Polesia
					997 = { is_valid_annexation_state = yes }
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_russian_tag = yes
				WHR = { is_ally_of_ROOT = no }
			}
			modifier = {
				factor = 0
				OR = {
					UKR = { is_ally_of_ROOT = yes }
					POL = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		93 = { transfer_state_and_add_claim = yes }
		997 = { add_claim_of_target_and_transfer_if_owned = yes }
	}

	option = { #give to LitBel
		log = "[GetLogInfo]: event annex.1061 option annex.1061.d"
		name = annex.1061.d
		trigger = {
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				tag = LIT
			}
			LIT = {
				OR = {
					owns_state = 997 #Polesia
					997 = { is_valid_annexation_state = yes }
				}
				owns_state = 206 #Minsk
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_russian_tag = yes
				LIT = { is_ally_of_ROOT = no }
			}
			modifier = {
				factor = 0
				OR = {
					UKR = { is_ally_of_ROOT = yes }
					POL = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = LIT }
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		93 = { transfer_state_and_add_claim = yes }
		997 = { add_claim_of_target_and_transfer_if_owned = yes }
	}

	option = { #split between Poland and Ukraine
		log = "[GetLogInfo]: event annex.1061 option annex.1061.e"
		name = annex.1061.e
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			POL = { ROOT_can_grant_land = yes }
			UKR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_russian_tag = yes
				OR = {
					POL = { is_ally_of_ROOT = no }
					UKR = { is_ally_of_ROOT = no }
				}
			}
			modifier = {
				factor = 0
				OR = {
					WHR = { is_ally_of_ROOT = yes }
					POL = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = UKR }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = POL }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = UKR }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = UKR }
		997 = { transfer_state_and_add_core = yes }
	}

	option = { #split between Poland and Belarus
		log = "[GetLogInfo]: event annex.1061 option annex.1061.f"
		name = annex.1061.f
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			POL = { ROOT_can_grant_land = yes }
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_russian_tag = yes
				OR = {
					POL = { is_ally_of_ROOT = no }
					WHR = { is_ally_of_ROOT = no }
				}
			}
			modifier = {
				factor = 0
				OR = {
					UKR = { is_ally_of_ROOT = yes }
					POL = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = WHR }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = POL }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = WHR }
		997 = { transfer_state_and_add_claim = yes }
	}

	option = { #split between Poland and LitBel
		log = "[GetLogInfo]: event annex.1061 option annex.1061.g"
		name = annex.1061.g
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				tag = LIT
			}
			POL = { ROOT_can_grant_land = yes }
			LIT = {
				owns_state = 206 #Minsk
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_russian_tag = yes
				OR = {
					POL = { is_ally_of_ROOT = no }
					LIT = { is_ally_of_ROOT = no }
				}
			}
			modifier = {
				factor = 0
				OR = {
					UKR = { is_ally_of_ROOT = yes }
					POL = { is_ally_of_ROOT = yes }
				}
				NOT = { is_ally_with = LIT }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = POL }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = LIT }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = LIT }
		997 = { transfer_state_and_add_claim = yes }
	}

	option = { #split between Poland and Russia
		log = "[GetLogInfo]: event annex.1061 option annex.1061.h"
		name = annex.1061.h
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			POL = { ROOT_can_grant_land = yes }
			var:204.owner = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = POL }
			}
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = 204.owner }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = 204.owner }
		if = {
			limit = { 204 = { is_core_of = owner } }
			997 = { transfer_state_and_add_core = yes }
		}
		else = {
			997 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #split with POL
		log = "[GetLogInfo]: event annex.1061 option annex.1061.i"
		name = annex.1061.i
		trigger = {
			997 = { is_valid_annexation_state = yes } #Polesia
			is_russian_tag = yes
			POL = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				RUS_is_expansionist = yes
			}
		}
		997 = { add_claim_of_ROOT = yes } #Polesia
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = POL }
		93 = { transfer_state_and_add_claim = yes } #Brest
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1061 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
				is_russian_tag = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_russian_tag = yes
				RUS_is_expansionist = no
				POL = { is_ally_of_ROOT = yes }
			}
		}
		add_state_claim = 93
		if = {
			limit = {
				NOT = { tag = POL }
				997 = { is_valid_annexation_state = yes }
			}
			add_state_claim = 997
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1061 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_russian_tag = no
			NOT = {
				tag = POL
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = BREST_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Polesia
	id = annex.1062
	title = annexation_POLESIA_CONQ
	desc = annexation_POLESIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		997 = { clear_retain_state = yes }
	}

	option = { #give to Ukraine
		log = "[GetLogInfo]: event annex.1062 option annex.1061.b"
		name = annex.1061.b
		trigger = {
			NOT = {
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			UKR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				WHR = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = UKR }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		997 = { transfer_state_and_add_core = yes }
	}

	option = { #give to Belarus
		log = "[GetLogInfo]: event annex.1062 option annex.1061.c"
		name = annex.1061.c
		trigger = {
			NOT = {
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				UKR = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		997 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to LitBel
		log = "[GetLogInfo]: event annex.1062 option annex.1061.d"
		name = annex.1061.d
		trigger = {
			NOT = {
				tag = WHR
				tag = UKR
				tag = LIT
			}
			LIT = {
				owns_state = 206 #Minsk
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				UKR = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = LIT }
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		997 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1062 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = { base = 1000 }
		add_state_claim = 997
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1062 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				tag = WHR
				tag = UKR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = POLESIA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Belarus
	id = annex.1063
	title = annexation_WHR_CONQ
	desc = annexation_WHR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = WHR
						is_claimed_by = WHR
					}
					NOT = {
						state = 94 #Volkovysk
						state = 95 #Pinsk
						state = 194 #Mozyr
						state = 204 #Novogrudok
						state = 206 #Minsk
						state = 207 #Braslav
						state = 1087 #Mogilev
					}
				}
				remove_core_of = WHR
				remove_claim_by = WHR
			}
			94 = { retain_state = yes } #Volkovysk
			WHR = {
				WHR_werner_kempf = { retire = yes }
				WHR_kanstancin_jezavitau = { set_nationality = PREV }
				WHR_teardown_buying_germany_equipment_decisions = yes
			}
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.1063 option annex.1063.a"
		name = annex.1063.a #Liberate White Ruthenia
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_russian_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		release_targeted_tag = yes
		if = {
			limit = {
				OR = {
					original_tag = GER
					original_tag = BAT
				}
				has_socialist_government = no
			}
			WHR = {
				set_politics = {
					ruling_party = paternal_autocrat
					elections_allowed = no
					name = WHR_paternal_autocrat2_party
					long_name = WHR_paternal_autocrat2_party_long
				}
				WHR_werner_kempf = {
					set_nationality = PREV
					hidden_effect = { remove_all_country_leader_roles = yes }
					add_country_leader_role = {
						country_leader = {
							desc = WHR_werner_kempf_leader_desc
							ideology = paternal_autocrat_subtype
						}
						promote_leader = yes
					}
				}
				hidden_effect = { WHR_kanstancin_jezavitau = { retire = yes } }
			}
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1063 option annex.1063.b"
		name = annex.1063.b
		trigger = {
			is_russian_tag = yes
		}
		ai_chance = { base = 100 }
		every_state = {
			limit = {
				is_core_of = WHR
				NOT = {
					state = 94 #Volkovysk
					AND = {
						is_claim_or_core_of_owner = yes
						owner = { is_ally_of_ROOT = yes }
					}
				}
			}
			add_claim_by = ROOT
		}
		add_political_power = -50
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1063 option annex.1063.c"
		name = annex.1063.c #Give to Russia
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				is_german_tag = yes
			}
		}
		trigger = {
			is_russian_tag = no
			var:219.owner = {
				is_russian_tag = yes
				is_ally_with = ROOT
			}
		}
		242 = { set_transfer_target_state = yes } #Smolensk
		243 = { set_transfer_target_state = yes } #Krichev
		755 = { set_transfer_target_state = yes } #Vitebsk
		WHR = { set_transfer_target_cores = yes }
		set_temp_variable = { tag_to_release = 219.owner }
		transfer_targeted_territory = yes
	}

	option = { #Occupy White Ruthenia
		log = "[GetLogInfo]: event annex.1063 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_russian_tag = no
		}
		ai_chance = { base = 0 }
		set_country_flag = WHR_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Eastern Belarus
	id = annex.1064
	title = annexation_EASTERN_BELARUS_CONQ
	desc = annexation_EASTERN_BELARUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		242 = { clear_retain_state = yes } #Smolensk
		243 = { clear_retain_state = yes } #Krichev
		755 = { clear_retain_state = yes } #Vitebsk
	}

	option = { #Give it to Belarus
		log = "[GetLogInfo]: event annex.1064 option annex.1064.a"
		name = annex.1064.a
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					tag = LIT
					207 = { is_claim_or_core_of_ROOT = yes }
				}
			}
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				NOT = { is_ally_with = WHR }
				var:219.owner = {
					is_russian_tag = yes
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		every_owned_state = {
			limit = {
				OR = {
					state = 242 #Smolensk
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #Give it to Russia
		log = "[GetLogInfo]: event annex.1064 option annex.1064.b"
		name = annex.1064.b
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			var:219.owner = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				NOT = { is_ally_with = 219.owner }
				OR = {
					WHR = { is_ally_of_ROOT = yes }
					LIT = {
						owns_state = 204 #Minsk
						is_ally_with = ROOT
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 219.owner }
		every_owned_state = {
			limit = {
				OR = {
					state = 242 #Smolensk
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_core = yes
		}
	}

	option = { #Give it to LitBel
		log = "[GetLogInfo]: event annex.1064 option annex.1064.c"
		name = annex.1064.c
		trigger = {
			NOT = {
				tag = WHR
				tag = LIT
			}
			LIT = {
				owns_state = 204 #Minsk
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				NOT = { is_ally_with = LIT }
				var:219.owner = {
					is_russian_tag = yes
					is_ally_with = ROOT
				}
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		every_owned_state = {
			limit = {
				OR = {
					state = 242 #Smolensk
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_claim = yes
		}
	}

	option = { #Split between Russia and Belarus
		log = "[GetLogInfo]: event annex.1064 option annex.1064.d"
		name = annex.1064.d
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
			owns_state = 242 #Smolensk
			owns_state = 243 #Krichev
			owns_state = 755 #Vitebsk
			WHR = { ROOT_can_grant_land = yes }
			var:219.owner = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = WHR }
			}
			modifier = {
				factor = 0.5
				NOT = {
					var:219.owner = {
						is_russian_tag = yes
						is_ally_with = ROOT
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 219.owner }
		242 = { transfer_state_and_add_core = yes } #Smolensk
		set_temp_variable = { tag_to_release = WHR }
		every_owned_state = {
			limit = {
				OR = {
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_claim = yes
		}
		recheck_annexations = yes
	}

	option = { #Split between Russia and LitBel
		log = "[GetLogInfo]: event annex.1064 option annex.1064.e"
		name = annex.1064.e
		trigger = {
			NOT = {
				tag = WHR
				tag = LIT
			}
			owns_state = 242 #Smolensk
			owns_state = 243 #Krichev
			owns_state = 755 #Vitebsk
			LIT = {
				owns_state = 204 #Minsk
				ROOT_can_grant_land = yes
			}
			var:219.owner = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0.5
				NOT = { is_ally_with = LIT }
			}
			modifier = {
				factor = 0.5
				NOT = {
					var:219.owner = {
						is_russian_tag = yes
						is_ally_with = ROOT
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = 219.owner }
		242 = { transfer_state_and_add_core = yes } #Smolensk
		set_temp_variable = { tag_to_release = LIT }
		every_owned_state = {
			limit = {
				OR = {
					state = 243 #Krichev
					state = 755 #Vitebsk
				}
			}
			transfer_state_and_add_claim = yes
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1064 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				tag = WHR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = { base = 1000 }
		add_state_claim = 242 #Smolensk
		add_state_claim = 243 #Krichev
		add_state_claim = 755 #Vitebsk
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1064 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					tag = LIT
					206 = { is_claim_or_core_of_ROOT = yes } #Minsk
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = EASTERN_BELARUS_CONQ
	}
}

country_event = { #Fate of Russia
	id = annex.1065
	title = annexation_RUS_CONQ
	desc = annexation_RUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			RUS = {
				drop_cosmetic_tag = yes
				RUS_remove_monarchy = yes
				RUS_pavel_bermondt_avalov = { remove_all_country_leader_roles = yes }
				set_party_name = {
					ideology = social_democrat
					name = RUS_social_democrat_party
					long_name = RUS_social_democrat_party_long
				}
				if = {
					limit = { has_character = RUS_boris_savinkov }
					retire_character = RUS_boris_savinkov
				}
				remove_ideas = {
					RUS_constitutional_monarchy_1
					RUS_constitutional_monarchy_2
					RUS_constitutional_monarchy_3
					RUS_constitutional_monarchy_5
					RUS_constitutional_monarchy_6
					RUS_imperial_glory_1
					RUS_imperial_glory_2
					RUS_imperial_glory_3
					RUS_imperial_glory_5
					RUS_imperial_glory_6
					RUS_imperial_glory_7
					RUS_imperial_glory_8
					RUS_imperial_glory_9
					RUS_a_new_russia_1
					RUS_a_new_russia_2
					RUS_a_new_russia_3
					RUS_a_new_russia_4
					RUS_legacy_of_the_whites_1
					RUS_legacy_of_the_whites_2
					RUS_legacy_of_the_whites_3
					RUS_legacy_of_the_whites_4
				}
			}
			213 = { retain_state = yes } #Murmansk
			215 = { retain_state = yes } #White Karelia
			216 = { retain_state = yes } #Petrozavodsk
			218 = { retain_state = yes } #Rostov
			234 = { retain_state = yes } #Ekaterinodar
			242 = { retain_state = yes } #Smolensk
			243 = { retain_state = yes } #Krichev
			722 = { retain_state = yes } #Petsamo
			755 = { retain_state = yes } #Vitebsk
			880 = { retain_state = yes } #Latgale
			1006 = { retain_state = yes } #Novorossiysk
			every_owned_state = {
				limit = {
					OR = {
						is_alash = yes #Kazakh Territories
						is_core_of = MNR
					}
				}
				retain_state = yes
			}
		}
	}

	option = { #Liberate core Russia
		log = "[GetLogInfo]: event annex.1065 option annex.1065.a"
		name = annex.1065.a
		trigger = {
			NOT = { has_country_flag = SIB_CONQ }
		}
		ai_chance = {
			base = 85
			modifier = {
				add = -70
				OR = {
					tag = GER
					tag = JAP
				}
			}
		}
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = SOV }
		}
		else = {
			set_temp_variable = { tag_to_release = RUS }
		}
		hidden_effect = { remove_all_russian_cores = yes }
		release_targeted_tag = yes
		hidden_effect = { RUS_puppet_setup = yes }
		recheck_annexations = yes
	}

	option = { #liberate core Russia and Siberia
		log = "[GetLogInfo]: event annex.1065 option annex.1065.b"
		name = annex.1065.b
		trigger = {
			owns_state = 570 #Novo-Nikolayevsk
		}
		ai_chance = {
			base = 10
			modifier = {
				add = 70
				OR = {
					original_tag = GER
					original_tag = JAP
				}
			}
		}
		set_temp_variable = { tag_to_release = SIB }
		if = {
			limit = {
				OR = {
					408 = { is_valid_annexation_state = yes } #Vladivostok
					560 = { is_valid_annexation_state = yes } #Nikolayevsk
					TRM = { ROOT_can_grant_land = yes }
				}
			}
			every_state = {
				limit = { is_siberia = yes }
				add_core_of_target_and_transfer_if_owned = yes
			}
			hidden_effect = {
				every_state = {
					limit = { is_russian_far_east = yes }
					retain_state = yes
				}
			}
		}
		else_if = {
			limit = {
				#In the event China has annexed outer Manchuria
				408 = { is_claim_or_core_of_ROOT = yes } #Vladivostok
				409 = { is_claim_or_core_of_ROOT = yes } #Khabarovsk
				657 = { is_claim_or_core_of_ROOT = yes } #Blagoveshchensk
				560 = { is_claim_or_core_of_ROOT = yes } #Nikolayevsk
				561 = { is_claim_or_core_of_ROOT = yes } #Amur
			}
			every_state = {
				limit = {
					OR = {
						is_siberia = yes
						is_russian_far_east = yes
					}
					is_claim_or_core_of_ROOT = no
				}
				add_core_of_target_and_transfer_if_owned = yes
			}
		}
		else = {
			every_state = {
				limit = { is_siberia = yes }
				add_core_of_target_and_transfer_if_owned = yes
			}
		}
		puppet_released_tag = yes
		custom_effect_tooltip = tooltip_white_line
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = SOV }
		}
		else = {
			set_temp_variable = { tag_to_release = RUS }
		}
		hidden_effect = { remove_all_russian_cores = yes }
		release_targeted_tag = yes
		hidden_effect = { RUS_puppet_setup = yes }
	}

	option = { #Liberate max Russia
		log = "[GetLogInfo]: event annex.1065 option annex.1065.c"
		name = annex.1065.c
		trigger = {
			OR = {
				any_of = {
					array = SOV.core_states
					NOT = {
						is_in_array = { RUS.RUS_starting_states_array = v }
					}
				}
				any_of = {
					array = RUS.core_states
					NOT = {
						is_in_array = { RUS.RUS_starting_states_array = v }
					}
				}
				any_of = {
					array = TRM.core_states
					NOT = {
						is_in_array = { RUS.RUS_starting_states_array = v }
						var:v = { state = 408 } #Vladivostok
						var:v = { state = 409 } #Khabarovsk
					}
				}
			}
		}
		ai_chance = {
			base = 5
			modifier = {
				factor = 0
				OR = {
					tag = GER
					tag = JAP
				}
			}
		}
		RUS = { set_transfer_target_cores = yes }
		SOV = { set_transfer_target_cores = yes }
		TRM = { set_transfer_target_cores = yes }
		if = {
			limit = { has_socialist_government = yes }
			set_temp_variable = { tag_to_release = SOV }
			release_targeted_tag_from_core_regions = yes
		}
		else = {
			set_temp_variable = { tag_to_release = RUS }
			release_targeted_tag_from_core_regions = yes
		}
		hidden_effect = {
			var:tag_to_release = {
				every_owned_state = {
					limit = {
						is_in_array = { RUS.RUS_starting_states_array = THIS }
					}
					add_core_of = PREV
				}
			}
			remove_all_russian_cores = yes
			RUS_puppet_setup = yes
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1065 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_massive_country = yes
		set_country_flag = RUS_CONQ
	}
}

country_event = { #Fate of Dvinsk
	id = annex.1066
	title = annexation_DVINSK_CONQ
	desc = annexation_DVINSK_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = LAT
					original_tag = BAT
					is_russian_tag = yes
				}
			}
			save_event_target_as = can_annex_dvinsk
		}
		if = {
			limit = { LAT = { ROOT_can_grant_land = yes } }
			LAT = { save_event_target_as = latvia }
		}
		else_if = {
			limit = {
				BAT = {
					is_ally_with = ROOT
					OR = {
						owns_state = 12 #Livonia
						owns_state = 190 #Courland
					}
				}
			}
			BAT = { save_event_target_as = latvia }
		}
		random_other_country = {
			limit = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
				209 = { any_neighbor_state = { is_owned_by = PREV.PREV } } #Dvinsk
			}
			save_event_target_as = russia
		}
	}

	option = { #Give it to Latvia
		log = "[GetLogInfo]: event annex.1066 option annex.1066.a"
		name = annex.1066.a
		trigger = {
			has_event_target = latvia
			NOT = { has_event_target = can_annex_dvinsk }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = no
				is_ally_with = event_target:russia
				NOT = { is_ally_with = event_target:latvia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:latvia }
		if = {
			limit = { event_target:latvia = { original_tag = LAT } }
			880 = { transfer_state_and_add_core = yes }
		}
		else = {
			880 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Give it to Russia
		log = "[GetLogInfo]: event annex.1066 option annex.1066.b"
		name = annex.1066.b
		trigger = {
			has_event_target = russia
			NOT = { has_event_target = can_annex_dvinsk }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:latvia
				NOT = { is_ally_with = event_target:russia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:russia }
		880 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1066 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_dvinsk
		}
		880 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1066 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_dvinsk }
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = DVINSK_CONQ
	}
}

#####################################
##   SOUTH EASTERN   E U R O P E   ##
#####################################

country_event = { #Fate of Albania
	id = annex.1068
	title = annexation_ALB_CONQ
	desc = annexation_ALB_CONQ_desc
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = ALB
						is_claimed_by = ALB
					}
					NOT = { state = 44 } #Albania
					NOT = { state = 765 } #Kosovo
					NOT = { state = 766 } #Northern Epirus
				}
				remove_core_of = ALB
				remove_claim_by = ALB
			}
			765 = { retain_state = yes }
			766 = { retain_state = yes }
			ALB = {
				set_party_name = {
					ideology = authoritarian_democrat
					name = ALB_authoritarian_democrat_party
					long_name = ALB_authoritarian_democrat_party_long
				}
				if = {
					limit = { has_character = ALB_wilhelm_zu_wied }
					ALB_wilhelm_zu_wied = { remove_all_country_leader_roles = yes }
				}
				if = {
					limit = { has_character = BUL_kyril_sakskoburggotski }
					BUL_kyril_sakskoburggotski = {
						set_character_name = BUL_kyril_sakskoburggotski
						remove_all_country_leader_roles = yes
						if = {
							limit = { BUL = { is_monarchy = yes } }
							set_nationality = BUL
						}
						else = {
							retire = yes
						}
					}
				}
				ALB_elez_isufi = { set_nationality = PREV }
				ALB_azem_galica = { set_nationality = PREV }
			}
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1068 option annex.1068.a"
		name = annex.1068.a
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = ALB }
		release_targeted_tag = yes
		if = {
			limit = {
				tag = AUS
				ALB = { has_character = ALB_wilhelm_zu_wied }
			}
			ALB = {
				unlock_national_focus = ALB_restoration_of_the_king
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
					name = ALB_wied_puppet_party
					long_name = ALB_wied_puppet_party
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
				ALB_wilhelm_zu_wied = {
					add_country_leader_role = {
						country_leader = {
							desc = ALB_wilhelm_zu_wied_leader_desc
							ideology = authoritarian_democrat_subtype
						}
						promote_leader = yes
					}
				}
			}
		}
		else_if = {
			limit = {
				original_tag = BUL
				is_monarchy = yes
				BUL_kyril_sakskoburggotski = { is_country_leader = no }
			}
			ALB = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
					name = BUL_albanian_military_administration
					long_name = BUL_albanian_military_administration_long
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
			}
			BUL_kyril_sakskoburggotski = {
				set_nationality = ALB
				set_character_name = BUL_kyril_sakskoburggotski_regnal
				hidden_effect = { remove_all_country_leader_roles = yes }
				add_country_leader_role = {
					country_leader = { ideology = authoritarian_democrat_subtype }
					promote_leader = yes
				}
			}
		}
		hidden_effect = {
			ALB = {
				unlock_national_focus = ALB_albanian_elections_of_1936
				if = {
					limit = {
						OR = {
							has_government = market_liberal
							has_government = social_conservative
							has_authoritarian_government = yes
						}
					}
					unlock_national_focus = ALB_progressive_victory
				}
				else = {
					unlock_national_focus = ALB_bashkimi_victory
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1068 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = ALB_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Montenegro
	id = annex.1069
	title = annexation_MNT_CONQ
	desc = annexation_MNT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			MNT = {
				drop_cosmetic_tag = yes
				if = {
					limit = { has_character = MNT_mihailo_petrovic_njegos }
					retire_character = MNT_mihailo_petrovic_njegos
				}
				if = {
					limit = { NOT = { has_character = MNT_blazo_jovanovic } }
					SER = { MNT_blazo_jovanovic = { set_nationality = MNT } }
					MNT_blazo_jovanovic = {
						promote_character = totalist_subtype
						promote_character = syndicalist_subtype
						promote_character = radical_socialist_subtype
						promote_character = social_democrat_subtype
					}
				}
			}
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1069 option annex.1069.a"
		name = annex.1069.a
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				original_tag = SER
			}
		}
		set_temp_variable = { tag_to_release = MNT }
		var:tag_to_release = { transfer_state = 105 } #Montenegro
		puppet_released_tag = yes
	}

	option = { # kingdom
		log = "[GetLogInfo]: event annex.1069 option annex.1069.b"
		name = annex.1069.b
		trigger = { has_socialist_government = no }
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				original_tag = SER
			}
		}
		set_temp_variable = { tag_to_release = MNT }
		var:tag_to_release = { transfer_state = 105 } #Montenegro
		puppet_released_tag = yes
		var:tag_to_release = {
			set_cosmetic_tag = MTN_kingdom
			MNT_create_mihailo = yes
		}
	}

	option = { #Give it to Croatia
		log = "[GetLogInfo]: event annex.1069 option annex.1069.c"
		name = annex.1069.c
		ai_chance = { base = 100 }
		trigger = {
			CRO = { ROOT_can_grant_land = yes }
			NOT = { original_tag = CRO }
			NOT = { original_tag = SER }
		}
		set_temp_variable = { tag_to_release = CRO }
		105 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to Serbia
		log = "[GetLogInfo]: event annex.1069 option annex.1069.d"
		name = annex.1069.d
		ai_chance = {
			base = 300
			modifier = {
				factor = 0
				OR = {
					tag = AUS
					tag = BUL
				}
			}
		}
		trigger = {
			SER = { ROOT_can_grant_land = yes }
			NOT = { original_tag = CRO }
			NOT = { original_tag = SER }
		}
		set_temp_variable = { tag_to_release = SER }
		105 = { transfer_state_and_add_core = yes }
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1069 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = CRO
		}
		ai_chance = { base = 1000 }
		105 = { add_claim_of_ROOT = yes }
	}
	option = { #annex
		log = "[GetLogInfo]: event annex.1069 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = SER
		}
		ai_chance = { base = 1000 }
		105 = { remove_claim_and_add_core_of_ROOT = yes }
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1069 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { original_tag = CRO }
			NOT = { original_tag = SER }
		}
		ai_chance = { base = 0 }
		set_country_flag = MNT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Bosnia
	id = annex.1070
	title = annexation_BOS_CONQ
	desc = annexation_BOS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = SER
					original_tag = CRO
					AND = {
						original_tag = AUS
						AUS_is_unified = yes
						owns_state = 109 #Central Croatia
					}
					AND = {
						original_tag = HUN
						owns_state = 109 #Central Croatia
					}
				}
			}
			save_event_target_as = can_annex_bosnia
		}
		if = {
			limit = {
				var:109.owner = {
					OR = {
						original_tag = CRO
						original_tag = AUS
					}
					is_ally_of_ROOT = yes
				}
			}
			var:109.owner = { save_event_target_as = croatia }
		}
		if = {
			limit = { SER = { is_ally_of_ROOT = yes } }
			SER = { save_event_target_as = serbia }
		}
		else_if = {
			limit = {
				is_in_faction = yes
				OR = {
					is_major = yes
					is_ai = no
				}
				SER = {
					exists = yes
					is_subject = no
					NOT = { is_in_faction_with = ROOT }
					has_capitulated = no
					both_socialist_or_both_not_socialist = yes
					at_war_with_or_justifying_wargoal_against_ROOT = no
					NOT = { has_country_flag = offered_croatia_@ROOT }
					OR = {
						owns_state = 104 #Bosnia
						104 = { is_valid_annexation_state = yes } #Bosnia
					}
				}
			}
			save_event_target_as = can_offer_bosnia_to_serbia
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1070 option annex.1070.a"
		name = annex.1070.a
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_event_target = can_annex_bosnia
					has_event_target = can_offer_bosnia_to_serbia
					has_event_target = croatia
					has_event_target = serbia
				}
			}
		}
		set_temp_variable = { tag_to_release = BOS }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Give it to Croatia
		log = "[GetLogInfo]: event annex.1070 option annex.1070.b"
		name = annex.1070.b
		trigger = {
			has_event_target = croatia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_event_target = can_offer_croatia_to_serbia
			}
			modifier = {
				factor = 0
				event_target:croatia = { is_ai = yes }
				has_event_target = serbia
				event_target:serbia = { is_ai = no }
			}
			modifier = {
				factor = 0.5
				event_target:croatia = { is_subject = yes }
				has_event_target = serbia
				event_target:serbia = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		104 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Serbia
		log = "[GetLogInfo]: event annex.1070 option annex.1070.c"
		name = annex.1070.c
		trigger = {
			has_event_target = serbia
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				event_target:serbia = { is_ai = yes }
				has_event_target = croatia
				event_target:croatia = { is_ai = no }
			}
			modifier = {
				factor = 0.5
				event_target:serbia = { is_ai = yes }
				has_event_target = croatia
				event_target:croatia = { is_subject = no }
			}
			modifier = {
				factor = 0
				original_tag = BUL
				SER = { is_subject_of = BUL }
			}
		}
		set_temp_variable = { tag_to_release = event_target:serbia }
		104 = { transfer_state_and_add_claim = yes }
	}

	option = { #Offer to SER
		log = "[GetLogInfo]: event annex.1070 option annex.1070.d"
		name = annex.1070.d
		trigger = {
			has_event_target = can_offer_bosnia_to_serbia
		}
		ai_chance = { base = 70 }
		set_country_flag = { flag = CRO_CONQ value = 1 days = 32 }
		set_country_flag = { flag = CRO_DALMATIA_CONQ value = 1 days = 32 }
		set_country_flag = { flag = KOTOR_CONQ value = 1 days = 32 }
		set_country_flag = { flag = VOJVODINA_CONQ value = 1 days = 32 }
		set_country_flag = { flag = WESTBANAT_CONQ value = 1 days = 32 }
		set_country_flag = { flag = BOS_CONQ value = 1 days = 32 }
		set_country_flag = { flag = MNT_CONQ value = 1 days = 32 }
		SER = {
			set_country_flag = offered_croatia_@ROOT
			country_event = annex.285
		}
		recheck_annexations = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1070 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_bosnia
		}
		ai_chance = { base = 100 }
		if = {
			limit = {
				OR = {
					original_tag = CRO
					original_tag = AUS
				}
			}
			104 = { remove_claim_and_add_core_of_ROOT = yes }
		}
		else = {
			104 = { add_claim_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1070 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_bosnia }
		}
		ai_chance = { base = 0 }
		set_country_flag = BOS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Kosovo
	id = annex.1071
	title = annexation_SER_KOSOVO_CONQ
	desc = annexation_SER_KOSOVO_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		765 = { clear_retain_state = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1071 option annex.1071.a"
		name = annex.1071.a #Give it to SER
		trigger = {
			SER = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = SER
				original_tag = ALB
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				ALB = { is_ally_of_ROOT = yes }
				OR = {
					SER = { is_ally_of_ROOT = no }
					AND = {
						SER = {
							is_ally_of_ROOT = yes
							is_subject = yes
						}
						ALB = { is_subject = no }
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = SER }
		765 = { transfer_state_and_add_core = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1071 option annex.1071.b"
		name = annex.1071.b #Give it to ALB
		trigger = {
			ALB = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = SER
				original_tag = ALB
			}
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				SER = { is_ally_of_ROOT = yes }
				OR = {
					ALB = { is_ally_of_ROOT = no }
					AND = {
						ALB = {
							is_ally_of_ROOT = yes
							is_subject = yes
						}
						SER = { is_subject = no }
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = ALB }
		765 = { transfer_state_and_add_core = yes }
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1071 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = SER
				original_tag = ALB
			}
		}
		ai_chance = { base = 100 }
		765 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1071 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = SER
				original_tag = ALB
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = SER_KOSOVO_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Serbia
	id = annex.1072
	title = annexation_SER_CONQ
	desc = annexation_SER_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					NOT = { state = 107 } #Belgrade
					NOT = { state = 108 } #Morava
					NOT = { state = 765 } #Kosovo
					NOT = { state = 767 } #Nis
				}
				remove_core_of = SER
				remove_claim_by = SER
			}
			765 = { retain_state = yes } #Kosovo
			767 = { retain_state = yes } #Nis
			SER = {
				set_cosmetic_tag = SER_republic
				remove_ideas = {
					SER_treaty_of_wartholz
					SER_secret_rearmament
					SER_open_rearmament
					SER_the_dream_of_yugoslavia
					SER_the_dream_of_yugoslavia_no_AUS
					SER_the_dream_of_yugoslavia_fulfilled
					SER_konspiracija_idea
					SER_konspiracija_conflict
					SER_puppet_show
					SER_Petar_II_regency
					SER_Petar_II_stojadinovic_puppet
				}
				set_party_name = {
					ideology = national_populist
					long_name = SER_national_populist_party_puppet_long
					name = SER_national_populist_party_puppet
				}
				set_party_name = {
					ideology = paternal_autocrat
					long_name = SER_national_populist_party_puppet_long
					name = SER_national_populist_party_puppet
				}
				if = {
					limit = { has_character = SER_milan_stojadinovic }
					retire_character = SER_milan_stojadinovic
				}
				SER_milan_nedic = {
					set_nationality = PREV
					if = {
						limit = { has_ideology = paternal_autocrat_subtype }
						promote_character = paternal_autocrat_subtype
					}
					else = {
						add_country_leader_role = {
							country_leader = { ideology = paternal_autocrat_subtype }
							promote_leader = yes
						}
					}
					if = {
						limit = { has_ideology = national_populist_subtype }
						promote_character = national_populist_subtype
					}
					else = {
						add_country_leader_role = {
							country_leader = { ideology = national_populist_subtype }
							promote_leader = yes
						}
					}
				}
				SER_vukasin_markovic = {
					set_nationality = PREV
					promote_character = totalist_subtype
					promote_character = syndicalist_subtype
				}
				every_unit_leader = {
					limit = { has_character_flag = BUL_leader }
					set_nationality = BUL
					clr_character_flag = BUL_leader
				}
				488 = { disable_state_integration = yes } #Trieste
				every_state = {
					limit = {
						region = 26 #Bulgaria
						NOT = { state = 106 } #Macedonia
					}
					disable_state_integration = yes
				}
			}
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1072 option annex.1072.a"
		name = annex.1072.a
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = SER }
		release_targeted_tag_nocosmetic = yes
		if = {
			limit = {
				OR = {
					tag = GER
					tag = AUS
					tag = HUN
					tag = BUL
				}
				has_socialist_government = no
			}
			SER = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 60
				}
				mark_focus_tree_layout_dirty = yes
			}
		}
		else_if = {
			limit = { has_socialist_government = yes } #unlock socialist tree for puppet SER
			SER = {
				unlock_national_focus = SER_Third_Revolution
				hidden_effect = {
					if = {
						limit = { has_character = SER_dusan_simovic }
						retire_character = SER_dusan_simovic
					}
					if = {
						limit = { has_character = SER_milan_nedic }
						retire_character = SER_milan_nedic
					}
					if = {
						limit = { has_character = SER_milutin_nedic }
						retire_character = SER_milutin_nedic
					}
					if = {
						limit = { has_character = SER_bogoljub_ilic }
						retire_character = SER_bogoljub_ilic
					}
					if = {
						limit = { has_character = SER_dragoljub_mihailovic }
						retire_character = SER_dragoljub_mihailovic
					}
				}
			}
		}
		else = {
			hidden_effect = {
				SER = {
					if = {
						limit = { NOT = { has_character = SER_dusan_simovic } }
						SER_dusan_simovic = { set_nationality = PREV }
					}
					if = {
						limit = { NOT = { has_character = SER_milan_nedic } }
						SER_milan_nedic = { set_nationality = PREV }
					}
					if = {
						limit = { NOT = { has_character = SER_milutin_nedic } }
						SER_milutin_nedic = { set_nationality = PREV }
					}
					if = {
						limit = { NOT = { has_character = SER_bogoljub_ilic } }
						SER_bogoljub_ilic = { set_nationality = PREV }
					}
					if = {
						limit = { NOT = { has_character = SER_dragoljub_mihailovic } }
						SER_dragoljub_mihailovic = { set_nationality = PREV }
					}
				}
			}
		}
		recheck_annexations = yes
	}
	option = { #make Yugoslavia
		log = "[GetLogInfo]: event annex.1072 option annex.1072.b"
		trigger = {
			102 = { is_valid_annexation_state = yes } #Carniola
			104 = { is_valid_annexation_state = yes } #Bosnia
			105 = { is_valid_annexation_state = yes } #Montenegro
			109 = { is_valid_annexation_state = yes } #Central Croatia
			is_south_slav_tag = no
			NOT = { original_tag = AUS }
			NOT = { original_tag = HUN }
		}

		name = annex.1072.b
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				original_tag = BUL
			}
		}

		set_temp_variable = { tag_to_release = SER }
		every_state = {
			limit = {
				OR = {
					state = 45 #Vojvodina
					state = 102 #Carniola
					state = 103 #Rijeka
					state = 104 #Bosnia
					state = 105 #Montenegro
					state = 106 #Macedonia
					state = 109 #Central Croatia
					state = 163 #Dalmatia
					state = 683 #Gorizia
					state = 736 #Istria
					state = 765 #Kosovo
					state = 767 #Nish
					state = 794 #Syrmia
					state = 841 #Kotor
					state = 875 #West Banat
				}
			}
			add_claim_of_target = yes
		}
		every_owned_state = {
			limit = {
				OR = {
					is_core_of = SER
					state = 102 #Carniola
					state = 104 #Bosnia
					state = 105 #Montenegro
					state = 109 #Central Croatia
					state = 767 #Nis
					state = 794 #Syrmia
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_without_overriding_occupation = yes
		}
		puppet_released_tag = yes
		var:tag_to_release = {
			set_cosmetic_tag = YUG_rep
			hidden_effect = { SER_enable_yugoslavia_integration = yes }
			if = { #unlock socialist tree for puppet SER
				limit = { has_socialist_government = yes }
				unlock_national_focus = SER_Third_Revolution
			}
		}
	}
	option = { #AUS: Give it to Illyria
		log = "[GetLogInfo]: event annex.1072 option annex.1072.c"
		name = annex.1072.c
		trigger = {
			tag = AUS
			has_subject = CRO
			CRO = { has_cosmetic_tag = CRO_illyria_habsburg }
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = CRO }
		every_owned_state = {
			limit = {
				OR = {
					state = 107 #Belgrade
					state = 108 #Morava
					state = 767 #Nish
				}
			}
			transfer_state_and_add_claim = yes
		}
	}
	option = { #Integrate (Zveno)
		log = "[GetLogInfo]: event annex.1072 option annex.1072.e"
		name = annex.1072.e
		trigger = {
			tag = BUL
			has_government = paternal_autocrat
			NOT = {
				has_completed_focus = BUL_balkan_war_defeat
			}
			NOT = {
				has_country_flag = BUL_disabled_bulgoslavia # received volunteers from AUS, GER, or their allies
			}
			NOT = {
				has_completed_focus = BUL_german_diplomacy
			}
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
		ai_chance = { base = 10 }
		add_state_claim = 107
		add_state_claim = 108
		add_state_claim = 765
		add_state_claim = 105
		set_country_flag = BUL_hijacked_yugoslavism
		mark_focus_tree_layout_dirty = yes
		custom_effect_tooltip = SER_new_focuses_unlocked
		country_event = bulgariaflavour.8
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1072 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = SER_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Nis
	id = annex.1073
	title = annexation_NIIS_CONQ
	desc = annexation_NIIS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		767 = { clear_retain_state = yes }
	}

	option = { #Grant to Serbia
		log = "[GetLogInfo]: event annex.1073 option annex.1073.a"
		name = annex.1073.a
		trigger = {
			SER = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				BUL = { is_ally_of_ROOT = yes }
				OR = {
					SER = { is_ally_of_ROOT = no }
					AND = {
						SER = {
							is_ally_of_ROOT = yes
							is_subject = yes
						}
						BUL = { is_subject = no }
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = SER }
		767 = { transfer_state_and_add_core = yes }
	}
	option = { #Grant to Bulgaria
		log = "[GetLogInfo]: event annex.1073 option annex.1073.b"
		name = annex.1073.b
		trigger = {
			BUL = { ROOT_can_grant_land = yes }
			NOT = { original_tag = SER }
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				SER = { is_ally_of_ROOT = yes }
				BUL = { is_ally_of_ROOT = no }
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		767 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1073 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = SER
		}
		ai_chance = { base = 100 }
		767 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1073 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = BUL
		}
		ai_chance = { base = 100 }
		767 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1073 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { original_tag = SER }
			NOT = { original_tag = BUL }
		}
		ai_chance = { base = 0 }
		set_country_flag = NIS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Kotor
	id = annex.1074
	title = annexation_KOTOR_CONQ
	desc = annexation_KOTOR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		841 = { clear_retain_state = yes }
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					original_tag = VNC
					original_tag = SER
					original_tag = CRO
					original_tag = AUS
					AND = {
						original_tag = HUN
						owns_state = 163 #Dalmatia
					}
					AND = {
						original_tag = AUS
						AUS_is_unified = yes
					}
					AND = {
						original_tag = BUL
						has_country_flag = BUL_hijacked_yugoslavism
					}
				}
			}
			save_event_target_as = can_annex_kotor
		}
		if = {
			limit = {
				var:163.owner = { #Dalmatia
					OR = {
						original_tag = CRO
						original_tag = HUN
					}
					ROOT_can_grant_land = yes
				}
			}
			var:163.owner = { save_event_target_as = dalmatia }
		}
		else_if = {
			limit = {
				var:163.owner = { #Dalmatia
					is_ally_with = ROOT
					OR = {
						is_italian_tag = yes
						AND = {
							original_tag = AUS
							AUS_is_unified = yes
						}
					}
				}
			}
			var:163.owner = { save_event_target_as = dalmatia }
		}
		if = {
			limit = {
				var:105.owner = { #Montenegro
					OR = {
						original_tag = SER
						original_tag = MNT
						original_tag = BUL
					}
					ROOT_can_grant_land = yes
				}
			}
			var:105.owner = { save_event_target_as = montenegro }
		}
		else_if = {
			limit = {
				var:105.owner = { #Montenegro
					original_tag = AUS
					AUS_is_unified = yes
					is_ally_with = ROOT
				}
			}
			var:163.owner = { save_event_target_as = montenegro }
		}
	}

	option = { #Transfer to owner of Montenegro
		log = "[GetLogInfo]: event annex.1074 option annex.1074.a"
		name = annex.1074.a
		trigger = {
			has_event_target = montenegro
			NOT = { has_event_target = can_annex_kotor }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_ally_with = event_target:dalmatia
				NOT = { is_ally_with = event_target:montenegro }
			}
		}
		set_temp_variable = { tag_to_release = event_target:montenegro }
		if = {
			limit = { event_target:montenegro = { original_tag = MNT } }
			841 = { transfer_state_and_add_core = yes }
		}
		else = {
			841 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Transfer to owner of Dalmatia
		log = "[GetLogInfo]: event annex.1074 option annex.1074.b"
		name = annex.1074.b
		trigger = {
			has_event_target = dalmatia
			NOT = { has_event_target = can_annex_kotor }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				is_ally_with = event_target:montenegro
				NOT = { is_ally_with = event_target:dalmatia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:dalmatia }
		if = {
			limit = { event_target:dalmatia = { original_tag = CRO } }
			841 = { transfer_state_and_add_core = yes }
		}
		else = {
			841 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1074 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_kotor
		}
		ai_chance = { base = 1000 }
		if = {
			limit = {
				OR = {
					original_tag = CRO
					original_tag = MNT
				}
			}
			841 = { remove_claim_and_add_core_of_ROOT = yes }
		}
		else_if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 163.owner }
			841 = { add_claim_of_target_and_transfer_if_owned = yes }
		}
		else = {
			841 = { add_claim_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1074 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_kotor }
		}
		ai_chance = { base = 0 }
		set_country_flag = KOTOR_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Macedonia
	id = annex.1075
	title = annexation_SER_MACED_CONQ
	desc = annexation_SER_MACED_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = SER
					original_tag = BUL
				}
			}
			save_event_target_as = can_integrate_macedonia
		}
		else = {
			if = {
				limit = {
					is_in_faction = yes
					OR = {
						is_major = yes
						is_ai = no
					}
					SER = {
						exists = yes
						is_subject = no
						NOT = { is_in_faction_with = ROOT }
						has_capitulated = no
						both_socialist_or_both_not_socialist = yes
						at_war_with_or_justifying_wargoal_against_ROOT = no
						NOT = { has_country_flag = offered_macedonia_@ROOT }
						OR = {
							owns_state = 765 #Kosovo
							owns_state = 767 #Nish
							765 = { is_valid_annexation_state = yes }
							767 = { is_valid_annexation_state = yes }
						}
					}
				}
				save_event_target_as = can_offer_macedonia_to_serbia
			}
			if = {
				limit = {
					is_in_faction = yes
					OR = {
						is_major = yes
						is_ai = no
					}
					BUL = {
						exists = yes
						is_subject = no
						NOT = { is_in_faction_with = ROOT }
						has_capitulated = no
						both_socialist_or_both_not_socialist = yes
						at_war_with_or_justifying_wargoal_against_ROOT = no
						NOT = { has_country_flag = offered_macedonia_@ROOT }
					}
				}
				save_event_target_as = can_offer_macedonia_to_bulgaria
			}
		}
	}

	option = { #Give it to SER
		log = "[GetLogInfo]: event annex.1075 option annex.1075.a"
		name = annex.1075.a
		trigger = {
			SER = {
				is_ally_of_ROOT = yes
				OR = {
					owns_state = 765 #Kosovo
					owns_state = 767 #Nish
					765 = { is_valid_annexation_state = yes }
					767 = { is_valid_annexation_state = yes }
				}
			}
			NOT = { has_event_target = can_integrate_macedonia }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 5
				SER = { is_subject = no }
			}
			modifier = {
				factor = 0
				BUL = {
					is_ally_of_ROOT = yes
					is_subject = no
				}
			}
		}
		set_temp_variable = { tag_to_release = SER }
		106 = { transfer_state_and_add_claim = yes }
		if = {
			limit = { 767 = { is_valid_annexation_state = yes } } #Nis
			767 = { transfer_state_and_add_core = yes }
		}
		else_if = {
			limit = { 765 = { is_valid_annexation_state = yes } } #Kosovo
			765 = { transfer_state_and_add_core = yes }
		}
	}

	option = { #Give it to BUL
		log = "[GetLogInfo]: event annex.1075 option annex.1075.b"
		name = annex.1075.b
		trigger = {
			BUL = { is_ally_of_ROOT = yes }
			NOT = { has_event_target = can_integrate_macedonia }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 5
				BUL = { is_subject = no }
			}
			modifier = {
				factor = 0
				SER = {
					is_ally_of_ROOT = yes
					is_subject = no
					OR = {
						owns_state = 765 #Kosovo
						owns_state = 767 #Nish
						765 = { is_valid_annexation_state = yes }
						767 = { is_valid_annexation_state = yes }
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		106 = { transfer_state_and_add_core = yes }
	}

	option = { #Offer it to SER
		log = "[GetLogInfo]: event annex.1075 option annex.1075.c"
		name = annex.1075.c
		trigger = {
			has_event_target = can_offer_macedonia_to_serbia
		}
		ai_chance = { base = 80 }
		SER = {
			106 = { save_as_offered_state = yes } #Macedonia
			765 = { save_as_offered_state = yes } #Nis
			767 = { save_as_offered_state = yes } #Kosovo
			set_country_flag = offered_macedonia_@ROOT
			country_event = annex.5
		}
		recheck_annexations = yes
	}

	option = { #Offer it to BUL
		log = "[GetLogInfo]: event annex.1075 option annex.1075.d"
		name = annex.1075.d
		trigger = {
			has_event_target = can_offer_macedonia_to_bulgaria
		}
		ai_chance = { base = 80 }
		BUL = {
			106 = { save_as_offered_state = yes } #Macedonia
			set_country_flag = offered_macedonia_@ROOT
			country_event = annex.5
		}
		recheck_annexations = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1075 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = SER
		}
		ai_chance = { base = 100 }
		add_claim_of_ROOT = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1075 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = BUL
		}
		ai_chance = { base = 100 }
		106 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1075 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_integrate_macedonia }
		}
		ai_chance = { base = 0 }
		set_country_flag = SER_MACED_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Romania
	id = annex.1076
	title = annexation_ROM_CONQ
	desc = annexation_ROM_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = ROM
						is_claimed_by = ROM
					}
					NOT = {
						region = 15 #Romania
						region = 144 #Transylvania
					}
				}
				remove_core_of = ROM
				remove_claim_by = ROM
			}
			every_owned_state = {
				limit = { region = 144 } #Transylvania
				retain_state = yes
			}
			77 = { retain_state = yes } #Silistria
			772 = { retain_state = yes } #Constantza
		}
		if = {
			limit = {
				OR = {
					original_tag = UKR
					AND = {
						is_russian_tag = yes
						NOT = { is_ally_with = UKR }
					}
				}
				78 = { is_valid_annexation_state = yes } #Bessarabia
			}
			save_event_target_as = can_annex_bessarabia
		}
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1076 option annex.1076.a"
		name = annex.1076.a
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				has_event_target = can_annex_bessarabia
				NOT = { original_tag = SOV }
			}
		}
		set_temp_variable = { tag_to_release = ROM }
		release_targeted_tag = yes
		var:tag_to_release = { ROM_set_up_puppet_leaders = yes }
		hidden_effect = {
			if = {
				limit = { tag = BUL }
				ROM = { country_event = romania.240 }
			}
		}
		recheck_annexations = yes
	}
	option = { #Take Bessarabia
		log = "[GetLogInfo]: event annex.1076 option annex.1076.b"
		name = annex.1076.b
		trigger = {
			has_event_target = can_annex_bessarabia
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				original_tag = SOV
			}
		}
		add_state_claim = 78 #Bessarabia
		set_temp_variable = { tag_to_release = ROM }
		release_targeted_tag = yes
		var:tag_to_release = { ROM_set_up_puppet_leaders = yes }
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1076 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		if = {
			limit = { has_event_target = can_annex_bessarabia }
			add_state_claim = 78 #Bessarabia
		}
		set_country_flag = ROM_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Bulgaria
	id = annex.1077
	title = annexation_BUL_CONQ
	desc = annexation_BUL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					NOT = {
						state = 48 #Sofia
						state = 77 #Silistria
						state = 211 #Burgas
						state = 212 #Plovdiv
						state = 770 #Pleven
						state = 771 #Varna
						state = 990 #Vidin
						state = 1089 #Kardzhali
					}
				}
				remove_claim_by = BUL
				remove_core_of = BUL
			}
			77 = { retain_state = yes } #Silistria
			1089 = { retain_state = yes } #Kardzhali
			BUL = {
				remove_ideas = GER_mil_support_idea
				BUL_remove_monarchy = yes
				if = {
					limit = { NOT = { BUL_alexander_stamboliyski = { can_be_country_leader = yes } } }
					BUL_pencho_zlatev = {
						set_nationality = PREV
						promote_character = authoritarian_democrat_subtype
					}
				}
				BUL_kimon_georgiev = {
					set_nationality = PREV
					promote_character = paternal_autocrat_subtype
				}
				every_state = {
					limit = {
						NOT = { region = 26 } #Bulgaria
						NOT = { state = 184 } #Komotini
						NOT = { state = 769 } #Serres
					}
					disable_state_integration = yes
				}
			}
		}
	}

	option = { #republic
		log = "[GetLogInfo]: event annex.1077 option annex.1077.a"
		name = annex.1077.a
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = BUL }
		release_targeted_tag = yes
		if = {
			limit = { has_socialist_government = yes }
			var:tag_to_release = {
				set_cosmetic_tag = BUL_rep
				mark_focus_tree_layout_dirty = yes
				unlock_national_focus = BUL_front_republic
			}
		}
		else_if = {
			limit = { tag = SER }
			var:tag_to_release = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				set_political_party = {
					ideology = authoritarian_democrat
					popularity = 40
				}
				BUL_alexander_stamboliyski = {
					hidden_effect = { remove_all_country_leader_roles = yes }
					add_country_leader_role = {
						character = BUL_alexander_stamboliyski
						country_leader = {
							desc = BUL_alexander_stamboliyski_leader_desc
							ideology = authoritarian_democrat_subtype
						}
						promote_leader = yes
					}
				}
				set_cosmetic_tag = BUL_rep
				mark_focus_tree_layout_dirty = yes
				unlock_national_focus = BUL_front_republic
				set_party_name = {
					ideology = authoritarian_democrat
					long_name = BUL_its_just_bzns_party_long
					name = BUL_its_just_bzns_party
				}
			}
			# Bulgaria transfers some factories
			belgrade_pact_loot_factory_from_bulgaria = yes
		}
		hidden_effect = {
			var:tag_to_release = {
				if = {
					limit = { has_dictatorship_government = no }
					remove_ideas = {
						BUL_royalist_resistance
						BUL_legionary_revolution
						BUL_legionary_revolution_2
						BUL_legionary_revolution_3
						BUL_legionary_economics
						BUL_legionary_economics_2
						BUL_legionary_economics_3
					}
				}
				if = {
					limit = { has_socialist_government = no }
					remove_ideas = {
						BUL_royalist_resistance_worse
						BUL_royalist_resistance_worse_2
						BUL_socialist_offensive_1
						BUL_socialist_offensive_2
						BUL_socialist_offensive_3
						BUL_ds_established
						BUL_communard_revolution_1
						BUL_communard_revolution_2
						BUL_communard_revolution_3
						BUL_spirit_of_solidarity_1
						BUL_spirit_of_solidarity_2
						BUL_bearing_the_torch
						BUL_consolidation_of_power_1
						BUL_consolidation_of_power_2
						BUL_peasant_state_1
						BUL_peasant_state_2
						BUL_peasant_state_3
						BUL_fighting_for_motherland_1
						BUL_fighting_for_motherland_2
					}
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #monarchy
		log = "[GetLogInfo]: event annex.1077 option annex.1077.b"
		name = annex.1077.b
		trigger = {
			has_socialist_government = no
			NOT = { has_government = national_populist }
			NOT = { original_tag = SER }
		}
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					tag = GER
					tag = AUS
				}
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		release_targeted_tag = yes
		var:tag_to_release = { BUL_create_monarchy = yes }
		hidden_effect = {
			var:tag_to_release = {
				remove_ideas = {
					BUL_royalist_resistance
					BUL_legionary_revolution
					BUL_legionary_revolution_2
					BUL_legionary_revolution_3
					BUL_legionary_economics
					BUL_legionary_economics_2
					BUL_legionary_economics_3
					BUL_royalist_resistance_worse
					BUL_royalist_resistance_worse_2
					BUL_socialist_offensive_1
					BUL_socialist_offensive_2
					BUL_socialist_offensive_3
					BUL_ds_established
					BUL_communard_revolution_1
					BUL_communard_revolution_2
					BUL_communard_revolution_3
					BUL_spirit_of_solidarity_1
					BUL_spirit_of_solidarity_2
					BUL_bearing_the_torch
					BUL_consolidation_of_power_1
					BUL_consolidation_of_power_2
					BUL_peasant_state_1
					BUL_peasant_state_2
					BUL_peasant_state_3
					BUL_fighting_for_motherland_1
					BUL_fighting_for_motherland_2
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1077 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = BUL_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Constantinople
	id = annex.1078
	title = annexation_CONSTANTINOPLE_CONQ
	desc = annexation_CONSTANTINOPLE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = TUR
					original_tag = GRE
				}
			}
			save_event_target_as = can_annex_constantinople
		}
		else = {
			if = {
				limit = { GRE = { ROOT_can_grant_land = yes } }
				GRE = { save_event_target_as = greece }
			}
			if = {
				limit = {
					TUR = {
						ROOT_can_grant_land = yes
						owns_state = 340 #Bursa
					}
				}
				TUR = { save_event_target_as = turkey }
			}
		}
	}

	option = { #transfer to TUR
		log = "[GetLogInfo]: event annex.1078 option annex.1078.a"
		name = annex.1078.a
		trigger = {
			has_event_target = turkey
			NOT = { has_event_target = can_annex_constantinople }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_ally_with = event_target:greece
				NOT = { is_ally_with = event_target:turkey }
			}
		}
		set_temp_variable = { tag_to_release = event_target:turkey }
		every_owned_state = {
			limit = {
				OR = {
					state = 773 #Constantinople
					state = 341 #Adrianople
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_and_add_core = yes
			state_given_notification_effect = yes
		}
	}

	option = { #transfer to GRE
		log = "[GetLogInfo]: event annex.1078 option annex.1078.b"
		name = annex.1078.b
		trigger = {
			has_event_target = greece
			NOT = { has_event_target = can_annex_constantinople }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_ally_with = event_target:turkey
				NOT = { is_ally_with = event_target:greece }
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		every_owned_state = {
			limit = {
				OR = {
					state = 773 #Constantinople
					state = 341 #Adrianople
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_and_add_claim = yes
			state_given_notification_effect = yes
		}
	}

	option = { #annex Adrianople, Constantinople to TUR
		log = "[GetLogInfo]: event annex.1078 option annex.1078.c"
		name = annex.1078.c
		trigger = {
			original_tag = BUL
			owns_state = 184 #Komotini
			341 = { is_valid_annexation_state = yes } #Adrianople
			773 = { is_valid_annexation_state = yes } #Constantinople
			has_event_target = turkey
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_ally_with = event_target:greece
				NOT = { is_ally_with = event_target:turkey }
			}
		}
		add_state_claim = 341 #Adrianople
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:turkey }
		773 = { transfer_state_and_add_core = yes }
	}

	option = { #annex Adrianople, Constantinople to GRE
		log = "[GetLogInfo]: event annex.1078 option annex.1078.d"
		name = annex.1078.d
		trigger = {
			original_tag = BUL
			owns_state = 184 #Komotini
			341 = { is_valid_annexation_state = yes } #Adrianople
			773 = { is_valid_annexation_state = yes } #Constantinople
			has_event_target = greece
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_ally_with = event_target:turkey
				NOT = { is_ally_with = event_target:greece }
			}
		}
		add_state_claim = 341 #Adrianople
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:greece }
		773 = { transfer_state_and_add_claim = yes }
	}

	option = { #annex Adrianople, occupy Constantinople
		log = "[GetLogInfo]: event annex.1078 option annex.1078.e"
		name = annex.1078.e
		trigger = {
			original_tag = BUL
			owns_state = 184 #Komotini
			341 = { is_valid_annexation_state = yes } #Adrianople
			773 = { is_valid_annexation_state = yes } #Constantinople
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				OR = {
					has_event_target = turkey
					has_event_target = greece
				}
			}
		}
		add_state_claim = 341 #Adrianople
		recheck_annexations = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1078 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = BUL
			owns_state = 184 #Komotini
			341 = { is_valid_annexation_state = yes } #Adrianople
			773 = { is_valid_annexation_state = no } #Constantinople
		}
		ai_chance = { base = 1000 }
		add_state_claim = 341 #Adrianople
		recheck_annexations = yes
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1078 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = TUR
		}
		ai_chance = { base = 1000 }
		every_owned_state = {
			limit = {
				OR = {
					state = 773 #Constantinople
					state = 341 #Adrianople
				}
				is_claim_or_core_of_ROOT = no
			}
			remove_claim_and_add_core_of_ROOT = yes
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1078 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = GRE
		}
		ai_chance = { base = 1000 }
		every_owned_state = {
			limit = {
				OR = {
					state = 773 #Constantinople
					state = 341 #Adrianople
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		recheck_annexations = yes
	}

	option = { #occupation
		log = "[GetLogInfo]: event annex.1078 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				has_event_target = can_annex_constantinople
				AND = {
					original_tag = BUL
					owns_state = 184 #Komotini
					341 = { is_valid_annexation_state = yes } #Adrianople
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = CONSTANTINOPLE_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Greece
	id = annex.1079
	title = annexation_GRE_CONQ
	desc = annexation_GRE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = GRE
						is_claimed_by = GRE
					}
					NOT = {
						region = 25 #Greece
						region = 223 #Aegean Sea
					}
				}
				remove_core_of = GRE
				remove_claim_by = GRE
			}
			183 = { retain_state = yes } #Cyprus
			184 = { retain_state = yes } #Komotini
			341 = { retain_state = yes } #Adrianople
			731 = { retain_state = yes } #Florina
			769 = { retain_state = yes } #Serres
			773 = { retain_state = yes } #Constantinople
			989 = { retain_state = yes } #Chalcidice
			if = {
				limit = {
					OR = {
						NOT = { tag = GER }
						has_socialist_government = yes
					}
				}
				GRE = {
					remove_ideas = {
						GRE_foreign_industry_GER1
						GRE_foreign_industry_GER2
						GRE_foreign_industry_GER3
					}
				}
			}
			if = {
				limit = {
					OR = {
						NOT = { tag = AUS }
						has_socialist_government = yes
					}
				}
				GRE = {
					remove_ideas = {
						GRE_foreign_industry_AUS1
						GRE_foreign_industry_AUS2
						GRE_foreign_industry_AUS3
					}
				}
			}
		}
	}

	option = { #Liberate Greece as republic
		log = "[GetLogInfo]: event annex.1079 option annex.1079.a"
		name = annex.1079.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = GER
					tag = AUS
					is_in_faction_with = CAN
					is_in_faction_with = GBR
					AND = {
						has_government = authoritarian_democrat
						is_in_europe = yes
					}
				}
			}
		}
		trigger = {
			has_socialist_government = no
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		GRE = {
			GRE_stop_being_syndicalist = yes
			GRE_restore_republic = yes
			GRE_uncomplete_focuses = yes
			GRE_uncomplete_expansion_focuses = yes
			if = {
				limit = { has_country_flag = GRE_monarchists_win_referendum }
				clr_country_flag = GRE_monarchists_win_referendum
				set_country_flag = GRE_republicans_win_referendum
			}
			hidden_effect = {
				set_capital = { state = 47 remember_old_capital = no }
			}
		}
		recheck_annexations = yes
	}
	option = { #Liberate Kingdom of Greece
		log = "[GetLogInfo]: event annex.1079 option annex.1079.b"
		name = annex.1079.b
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOT = {
					tag = GER
					tag = AUS
					is_in_faction_with = CAN
					is_in_faction_with = GBR
					AND = {
						has_government = authoritarian_democrat
						is_in_europe = yes
					}
				}
			}
		}
		trigger = {
			has_socialist_government = no
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		GRE = {
			GRE_stop_being_syndicalist = yes
			if = {
				limit = { has_idea = GRE_memories_of_king }
				remove_ideas = GRE_memories_of_king
			}
			if = {
				limit = { NOT = { has_cosmetic_tag = GRE_kingdom } }
				set_cosmetic_tag = GRE_kingdom
			}
			if = {
				limit = { has_completed_focus = GRE_king_alexandros }
				GRE_create_alexander = yes
			}
			else_if = {
				limit = { has_completed_focus = GRE_king_georgios }
				GRE_create_george = yes
			}
			else_if = {
				limit = { has_completed_focus = GRE_restore_monarchy }
				GRE_create_paul = yes
			}
			else_if = {
				limit = {
					NOT = { has_completed_focus = GRE_monarchy_referendum }
					ROOT = { has_elected_government = yes }
				}
				set_country_flag = GRE_monarchists_win_referendum
			}
			else_if = {
				limit = {
					ROOT = { has_dictatorship_government = yes }
				}
				GRE_create_paul = yes
			}
			else = {
				GRE_create_alexander = yes
			}
			GRE_uncomplete_focuses = yes
			GRE_uncomplete_expansion_focuses = yes
			hidden_effect = {
				set_capital = { state = 47 remember_old_capital = no }
			}
		}
		recheck_annexations = yes
	}
	option = { #Liberate Hellenic Commune
		log = "[GetLogInfo]: event annex.1079 option annex.1079.c"
		name = annex.1079.c
		ai_chance = { base = 100 }
		trigger = {
			has_socialist_government = yes
		}
		set_temp_variable = { tag_to_release = GRE }
		release_targeted_tag = yes
		GRE = {
			GRE_become_syndicalist = yes
			GRE_restore_republic = yes
			GRE_uncomplete_focuses = yes
			GRE_uncomplete_expansion_focuses = yes
			hidden_effect = {
				set_capital = { state = 47 remember_old_capital = no }
			}
		}
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1079 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = GRE_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Thessaloniki
	id = annex.1080
	title = annexation_THESS_CONQ
	desc = annexation_THESS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		989 = { clear_retain_state = yes }
	}

	option = { #Transfer to Bulgaria
		log = "[GetLogInfo]: event annex.1080 option annex.1080.a"
		name = annex.1080.a
		trigger = {
			NOT = {
				original_tag = BUL
				original_tag = GRE
			}
			BUL = {
				owns_state = 769
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 10
				BUL = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0.5
				BUL = { is_subject = yes }
			}
			modifier = {
				factor = 0
				GRE = {
					is_ally_of_ROOT = yes
					is_subject = no
				}
				NOT = {
					BUL = {
						is_ally_of_ROOT = yes
						is_subject = no
						owns_state = 769
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = BUL }
		989 = { transfer_state_and_add_claim = yes }
		recheck_annexations = yes
	}

	option = { #Transfer to Greece
		log = "[GetLogInfo]: event annex.1080 option annex.1080.b"
		name = annex.1080.b
		trigger = {
			NOT = {
				original_tag = BUL
				original_tag = GRE
			}
			GRE = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 10
				GRE = { is_ally_of_ROOT = yes }
			}
			modifier = {
				factor = 0.5
				GRE = { is_subject = yes }
			}
			modifier = {
				factor = 0
				BUL = {
					is_ally_of_ROOT = yes
					is_subject = no
					owns_state = 769
				}
				NOT = {
					GRE = {
						is_ally_of_ROOT = yes
						is_subject = no
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = GRE }
		989 = { transfer_state_and_add_core = yes }
	}
	option = { #annex
		log = "[GetLogInfo]: event annex.1080 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = GRE
				AND = {
					original_tag = BUL
					owns_state = 769
				}
			}
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { original_tag = BUL }
			989 = { add_claim_of_ROOT = yes }
		}
		else = {
			989 = { remove_claim_and_add_core_of_ROOT = yes }
		}
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1080 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = GRE
				original_tag = BUL
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = THESSA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Keraferia
	id = annex.1081
	title = annexation_KERAF_CONQ
	desc = annexation_KERAF_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		1076 = { clear_retain_state = yes }
	}

	option = { #Transfer to Greece
		log = "[GetLogInfo]: event annex.1081 option annex.1081.b"
		name = annex.1081.b
		ai_chance = {
			base = 50
			modifier = {
				factor = 5
				GRE = { is_ally_of_ROOT = yes }
			}
		}
		trigger = {
			GRE = {
				OR = {
					owns_state = 768
					is_ally_of_ROOT = yes
				}
				ROOT_can_grant_land = yes
			}
		}
		GRE = {
			transfer_state = 1076
			add_state_core = 1076
		}
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1081 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = KRF_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Northern Epirus
	id = annex.1082
	title = annexation_GRE_EPIRUS_CONQ
	desc = annexation_GRE_EPIRUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		766 = { clear_retain_state = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1082 option annex.1082.a"
		name = annex.1082.a #Give it to GRE
		trigger = {
			GRE = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = GRE
				original_tag = ALB
			}
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 5
				GRE = {
					is_in_faction_with = ROOT
					is_subject = no
				}
			}
			modifier = {
				factor = 0
				GRE = {
					is_ally_of_ROOT = yes
					is_subject = yes
				}
				ALB = {
					is_ally_of_ROOT = yes
					is_subject = no
				}
			}
		}
		set_temp_variable = { tag_to_release = GRE }
		766 = { transfer_state_and_add_claim = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1082 option annex.1082.b"
		name = annex.1082.b #Give it to ALB
		trigger = {
			ALB = { ROOT_can_grant_land = yes }
			NOT = {
				original_tag = GRE
				original_tag = ALB
			}
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 5
				ALB = {
					is_in_faction_with = ROOT
					is_subject = no
				}
			}
			modifier = {
				factor = 0
				ALB = {
					is_ally_of_ROOT = yes
					is_subject = yes
				}
				GRE = {
					is_ally_of_ROOT = yes
					is_subject = no
				}
			}
		}
		set_temp_variable = { tag_to_release = ALB }
		766 = { transfer_state_and_add_core = yes }
	}
	option = { #annex
		log = "[GetLogInfo]: event annex.1082 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = GRE
		}
		ai_chance = { base = 1000 }
		add_state_claim = 766
		recheck_annexations = yes
	}
	option = { #annex
		log = "[GetLogInfo]: event annex.1082 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = ALB
		}
		ai_chance = { base = 1000 }
		add_state_core = 766
		recheck_annexations = yes
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1082 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = GRE
				original_tag = ALB
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = GRE_EPIRUS_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Cyprus
	id = annex.1083
	title = annexation_CYP_CONQ
	desc = annexation_CYP_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		183 = { clear_retain_state = yes }
	}

	option = { #liberate
		log = "[GetLogInfo]: event annex.1083 option annex.1083.a"
		name = annex.1083.a
		trigger = {
			NOT = { tag = GRE }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				GRE = { is_ally_of_ROOT = yes }
			}
		}
		CYP = { add_state_core = 183 }
		set_temp_variable = { tag_to_release = CYP }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Give it to the Turks
		log = "[GetLogInfo]: event annex.1083 option annex.1083.b"
		name = annex.1083.b
		ai_chance = { base = 20 }
		trigger = {
			NOT = {
				tag = TUR
				tag = GRE
			}
			TUR = { ROOT_can_grant_land = yes }
		}
		set_temp_variable = { tag_to_release = TUR }
		183 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Greece
		log = "[GetLogInfo]: event annex.1083 option annex.1083.c"
		name = annex.1083.c
		trigger = {
			NOT = {
				tag = TUR
				tag = GRE
			}
			GRE = { ROOT_can_grant_land = yes }
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = GRE }
		183 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1083 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				tag = TUR
				tag = GRE
			}
		}
		ai_chance = { base = 100 }
		add_state_claim = 183
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1083 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = CYP_CONQ
	}
}

#####################################
##  S O U T H E R N   E U R O P E  ##
#####################################

country_event = { #Fate of Spain
	id = annex.1084
	title = annexation_SPA_CONQ
	desc = annexation_SPA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						is_core_of = SPK
						is_core_of = SPR
						is_core_of = SWF
						is_claimed_by = SPK
						is_claimed_by = SPR
						is_claimed_by = SWF
					}
					is_spain = no
				}
				remove_core_of = SPK
				remove_core_of = SPR
				remove_core_of = SWF
				remove_claim_by = SPK
				remove_claim_by = SPR
				remove_claim_by = SWF
			}
			SPK = {
				SPA_remove_monarchy = yes
				remove_ideas = SPA_memories_of_the_republic
				if = {
					limit = { has_completed_focus = SPA_new_constitution }
					uncomplete_national_focus = { focus = SPA_new_constitution }
				}
				set_party_name = {
					ideology = market_liberal
					long_name = SPA_market_liberal_party_long
					name = SPA_market_liberal_party
				}
				set_party_name = {
					ideology = social_liberal
					long_name = SPA_social_liberal_party_long
					name = SPA_social_liberal_party
				}
				set_party_name = {
					ideology = social_democrat
					long_name = SPA_social_democrat_party_long
					name = SPA_social_democrat_party
				}
			}
			SPR = {
				set_cosmetic_tag = SPA_carlists_kingdom
				if = {
					limit = { has_completed_focus = SPR_reconcilliation }
					uncomplete_national_focus = { focus = SPR_reconcilliation }
				}
			}
			SWF = { set_cosmetic_tag = SPA_socialist }
			if = {
				limit = {
					OR = {
						tag = ENT
						tag = GBR
					}
				}
				add_state_claim = 118 #Gibraltar
			}
		}
	}

	option = { #Socialist
		log = "[GetLogInfo]: event annex.1084 option annex.1084.a"
		name = annex.1084.a
		trigger = {
			has_socialist_government = yes
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = SWF }
		release_spain = yes
		recheck_annexations = yes
	}

	option = { #Socialist, balkanised
		log = "[GetLogInfo]: event annex.1084 option annex.1084.b"
		name = annex.1084.b
		trigger = {
			has_socialist_government = yes
		}
		ai_chance = { base = 0 }
		set_temp_variable = { will_balkanise_spain = 1 }
		set_temp_variable = { tag_to_release = SWF }
		release_spain = yes
		recheck_annexations_immediate = yes
	}

	option = { #Kingdom
		log = "[GetLogInfo]: event annex.1084 option annex.1084.c"
		name = annex.1084.c
		trigger = {
			has_socialist_government = no
		}
		ai_chance = { base = 100 }
		if = {
			limit = {
				OR = {
					original_tag = NFA
					ENT = { is_ally_of_ROOT = yes }
					AND = {
						has_government = national_populist
						OR = {
							original_tag = IRE
							original_tag = SIC
							original_tag = POR
							original_tag = BRA
						}
					}
				}
			}
			set_temp_variable = { tag_to_release = SPR }
		}
		else = {
			set_temp_variable = { tag_to_release = SPA }
		}
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = { tag = SPK }
				SPA_create_juan = yes
				SPA_set_puppet_second_in_commands = yes
				hidden_effect = {
					set_party_name = {
						ideology = market_liberal
						long_name = SPA_market_liberal_mon_party_long
						name = SPA_market_liberal_mon_party
					}
					set_party_name = {
						ideology = social_liberal
						long_name = SPA_social_liberal_mon_party_long
						name = SPA_social_liberal_mon_party
					}
					set_party_name = {
						ideology = social_democrat
						long_name = SPA_radical_socialist_party_long
						name = SPA_radical_socialist_party
					}
					if = {
						limit = { event_target:original_spain = { SPA_juan_de_borbon = { is_dead = yes } } }
						SPA_jaime_de_borbon = {
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = social_democrat_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = social_liberal_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = market_liberal_subtype
								}
								promote_leader = yes
							}
						}
					}
					else = {
						SPA_juan_de_borbon = {
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = social_democrat_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = social_liberal_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = market_liberal_subtype
								}
								promote_leader = yes
							}
						}
					}
				}
			}
			else_if = {
				limit = { tag = SPR }
				hidden_effect = {
					set_politics = { ruling_party = national_populist }
					set_popularities = {
						totalist = 0
						radical_socialist = 0
						syndicalist = 0
						social_democrat = 3
						social_liberal = 3
						market_liberal = 7
						social_conservative = 0
						authoritarian_democrat = 10
						paternal_autocrat = 12
						national_populist = 65
					}
				}
			}
		}
		recheck_annexations = yes
	}

	option = { #Kingdom, balkanised
		log = "[GetLogInfo]: event annex.1084 option annex.1084.d"
		name = annex.1084.d
		trigger = {
			has_socialist_government = no
		}
		ai_chance = { base = 100 }
		set_temp_variable = { will_balkanise_spain = 1 }
		if = {
			limit = {
				OR = {
					original_tag = NFA
					ENT = { is_ally_of_ROOT = yes }
					AND = {
						has_government = national_populist
						OR = {
							original_tag = IRE
							original_tag = SIC
							original_tag = POR
							original_tag = BRA
						}
					}
				}
			}
			set_temp_variable = { tag_to_release = SPR }
		}
		else = {
			set_temp_variable = { tag_to_release = SPA }
		}
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = { tag = SPK }
				SPA_create_juan = yes
				SPA_set_puppet_second_in_commands = yes
				hidden_effect = {
					set_party_name = {
						ideology = market_liberal
						long_name = SPA_market_liberal_mon_party_long
						name = SPA_market_liberal_mon_party
					}
					set_party_name = {
						ideology = social_liberal
						long_name = SPA_social_liberal_mon_party_long
						name = SPA_social_liberal_mon_party
					}
					set_party_name = {
						ideology = social_democrat
						long_name = SPA_radical_socialist_party_long
						name = SPA_radical_socialist_party
					}
					if = {
						limit = { event_target:original_spain = { SPA_juan_de_borbon = { is_dead = yes } } }
						SPA_jaime_de_borbon = {
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = social_democrat_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = social_liberal_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_jaime_de_borbon_leader_desc
									ideology = market_liberal_subtype
								}
								promote_leader = yes
							}
						}
					}
					else = {
						SPA_juan_de_borbon = {
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = social_democrat_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = social_liberal_subtype
								}
								promote_leader = yes
							}
							add_country_leader_role = {
								country_leader = {
									desc = SPA_juan_de_borbon_leader_desc
									ideology = market_liberal_subtype
								}
								promote_leader = yes
							}
						}
					}
				}
			}
			else_if = {
				limit = { tag = SPR }
				hidden_effect = {
					set_politics = { ruling_party = national_populist }
					set_popularities = {
						totalist = 0
						radical_socialist = 0
						syndicalist = 0
						social_democrat = 3
						social_liberal = 3
						market_liberal = 7
						social_conservative = 0
						authoritarian_democrat = 10
						paternal_autocrat = 12
						national_populist = 65
					}
				}
			}
		}
		recheck_annexations_immediate = yes
	}

	option = { #Republic
		log = "[GetLogInfo]: event annex.1084 option annex.1084.e"
		name = annex.1084.e
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					original_tag = GER
					original_tag = NFA
					ENT = { is_ally_of_ROOT = yes }
					AND = {
						has_government = national_populist
						OR = {
							original_tag = IRE
							original_tag = SIC
							original_tag = POR
							original_tag = BRA
						}
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = SPA }
		release_spain = yes
		var:tag_to_release = {
			hidden_effect = {
				set_cosmetic_tag = SPA_republic
				SPA_gil_robles = {
					remove_all_country_leader_roles = yes
					add_country_leader_role = {
						country_leader = { ideology = authoritarian_democrat_subtype }
						promote_leader = yes
					}
				}
				SPA_emilio_mola_vidal = {
					remove_all_country_leader_roles = yes
					add_country_leader_role = {
						country_leader = { ideology = paternal_autocrat_subtype }
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = { ideology = national_populist_subtype }
						promote_leader = yes
					}
				}
			}
			SPA_set_puppet_second_in_commands = yes
		}
		recheck_annexations = yes
	}

	option = { #Republic, balkanised
		log = "[GetLogInfo]: event annex.1084 option annex.1084.f"
		name = annex.1084.f
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					original_tag = GER
					original_tag = NFA
					ENT = { is_ally_of_ROOT = yes }
					AND = {
						has_government = national_populist
						OR = {
							original_tag = IRE
							original_tag = SIC
							original_tag = POR
							original_tag = BRA
						}
					}
				}
			}
		}
		set_temp_variable = { will_balkanise_spain = 1 }
		set_temp_variable = { tag_to_release = SPA }
		release_spain = yes
		var:tag_to_release = {
			if = {
				limit = { has_idea = SPA_memories_of_the_republic }
				remove_ideas = SPA_memories_of_the_republic
			}
			hidden_effect = {
				set_cosmetic_tag = SPA_republic
				SPA_gil_robles = {
					remove_all_country_leader_roles = yes
					add_country_leader_role = {
						country_leader = { ideology = authoritarian_democrat_subtype }
						promote_leader = yes
					}
				}
				SPA_emilio_mola_vidal = {
					remove_all_country_leader_roles = yes
					add_country_leader_role = {
						country_leader = { ideology = paternal_autocrat_subtype }
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = { ideology = national_populist_subtype }
						promote_leader = yes
					}
				}
			}
			SPA_set_puppet_second_in_commands = yes
		}
		recheck_annexations_immediate = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1084 option annex.1084.g"
		name = annex.1084.g
		ai_chance = { base = 0 }
		occupy_large_country = yes #guerilla time
		set_country_flag = SPA_CONQ
	}

	option = { #occupy all
		log = "[GetLogInfo]: event annex.1084 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_massive_country = yes #guerilla time
		set_country_flag = SPA_CONQ
		set_country_flag = GLC_CONQ
		set_country_flag = BAS_CONQ
		set_country_flag = CAT_CONQ
	}
}

country_event = { #Fate of Galicia
	id = annex.1085
	title = annexation_GLC_CONQ
	desc = annexation_GLC_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #puppet
		log = "[GetLogInfo]: event annex.1085 option annex.1085.a"
		name = annex.1085.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				SPA = { ROOT_can_grant_land = yes }
			}
		}
		set_temp_variable = { tag_to_release = GLC }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #give to Spain
		log = "[GetLogInfo]: event annex.1085 option annex.1085.b"
		name = annex.1085.b
		trigger = {
			SPA = { ROOT_can_grant_land = yes }
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = SPA }
		GLC = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_cores = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1085 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = GLC_CONQ
	}
}

country_event = { #Fate of Euskadi
	id = annex.1087
	title = annexation_BAS_CONQ
	desc = annexation_BAS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #puppet greater BAS
		log = "[GetLogInfo]: event annex.1087 option annex.1087.a"
		name = annex.1087.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				SPA = { ROOT_can_grant_land = yes }
			}
		}
		set_temp_variable = { tag_to_release = BAS }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #split with Spain
		log = "[GetLogInfo]: event annex.1087 option annex.1087.b"
		name = annex.1087.b
		trigger = {
			172 = { is_valid_annexation_state = yes } #Navarre
			SPA = { ROOT_can_grant_land = yes }
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SPA }
		172 = { transfer_state_and_add_core = yes }
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = BAS }
		1070 = { transfer_state_to = var:tag_to_release }
		puppet_released_tag = yes
	}

	option = { #give to Spain
		log = "[GetLogInfo]: event annex.1087 option annex.1087.c"
		name = annex.1087.c
		trigger = {
			SPA = { ROOT_can_grant_land = yes }
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = SPA }
		BAS = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_cores = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1087 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = BAS_CONQ
	}
}

country_event = { #Fate of Catalonia
	id = annex.1088
	title = annexation_CAT_CONQ
	desc = annexation_CAT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		817 = { retain_state = yes } #Roussillon
	}

	option = { #puppet
		log = "[GetLogInfo]: event annex.1088 option annex.1088.a"
		name = annex.1088.a
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				SPA = { ROOT_can_grant_land = yes }
			}
		}
		set_temp_variable = { tag_to_release = CAT }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #split with Spain
		log = "[GetLogInfo]: event annex.1088 option annex.1088.b"
		name = annex.1088.b
		trigger = {
			OR = {
				167 = { is_valid_annexation_state = yes } #Valencia
				177 = { is_valid_annexation_state = yes } #Balearic Islands
			}
			SPA = { ROOT_can_grant_land = yes }
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = SPA }
		167 = { add_core_of_target_and_transfer_if_owned = yes } #Valencia
		177 = { add_core_of_target_and_transfer_if_owned = yes } #Balearic Islands
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = CAT }
		165 = { transfer_state_to = var:tag_to_release }
		puppet_released_tag = yes
	}

	option = { #give to Spain
		log = "[GetLogInfo]: event annex.1088 option annex.1088.c"
		name = annex.1088.c
		trigger = {
			SPA = { ROOT_can_grant_land = yes }
		}
		ai_chance = { base = 100 }
		set_temp_variable = { tag_to_release = SPA }
		CAT = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_cores = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1088 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = CAT_CONQ
	}
}

country_event = { #Fate of Portugal
	id = annex.1089
	title = annexation_POR_CONQ
	desc = annexation_POR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Liberate a republican Portugal
		log = "[GetLogInfo]: event annex.1089 option annex.1089.a"
		name = annex.1089.a
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				tag = SWF
			}
			modifier = {
				factor = 0
				NOT = { country_exists = POR }
				OR = {
					is_german_tag = yes
					tag = CAN
					tag = GBR
					tag = NFA
					tag = SPK
					tag = SPR
				}
			}
		}
		if = {
			limit = { country_exists = POR }
			custom_effect_tooltip = POR_puppet_tooltip
			hidden_effect = {
				create_dynamic_country = {
					original_tag = POR
					create_country_leader = {
						name = POR_jose_carlos_rates
						picture = "gfx/leaders/POR/Portrait_Portugal_Jose_Rates.png"
						ideology = totalist_subtype
					}
					create_country_leader = {
						name = POR_manuel_joaquim_sousa
						picture = "gfx/leaders/Generic/Portrait_Europe_Generic_new_3.png"
						ideology = syndicalist_subtype
					}
					create_country_leader = {
						name = POR_bento_antonio_goncalves
						picture = "gfx/leaders/POR/Portrait_Portugal_Bento_Goncalves.png"
						ideology = radical_socialist_subtype
					}
					create_country_leader = {
						name = POR_jose_domingues_dos_santos
						picture = "gfx/leaders/POR/Portrait_POR_Jose_Domingues_dos_Santos.png"
						ideology = social_democrat_subtype
					}
					create_country_leader = {
						name = POR_liberato_damiao_ribeiro_pinto
						picture = "gfx/leaders/POR/Portrait_POR_Liberato_Pinto.png"
						ideology = social_liberal_subtype
					}
					create_country_leader = {
						name = POR_antonio_joaquim_granjo
						picture = "gfx/leaders/POR/Portrait_Portugal_Antonio_Granjo.png"
						ideology = market_liberal_subtype
					}
					create_country_leader = {
						name = POR_francisco_pinto_da_cunha_leal
						picture = "gfx/leaders/POR/Portrait_POR_Francisco_da_Cunha_Leal.png"
						ideology = social_conservative_subtype
					}
					create_country_leader = {
						name = POR_antonio_de_oliveira_salazar
						picture = "gfx/leaders/POR/Portrait_Portugal_Antonio_Carmona.png"
						ideology = authoritarian_democrat_subtype
					}
					create_country_leader = {
						name = POR_antonio_oscar_de_fragoso_carmona
						picture = "gfx/leaders/POR/Portrait_Portugal_Antonio_Carmona.png"
						ideology = paternal_autocrat_subtype
					}
					create_country_leader = {
						name = POR_francisco_de_barcelos_rolao_preto
						picture = "gfx/leaders/POR/Portrait_POR_Francisco_Rolao_Preto.png"
						ideology = national_populist_subtype
					}
					set_temp_variable = { tag_to_release = THIS }
				}
				POR = { set_transfer_target_cores = yes }
				release_targeted_tag = yes
			}
		}
		else = {
			set_temp_variable = { tag_to_release = POR }
			release_targeted_tag = yes
			hidden_effect = {
				var:tag_to_release = { POR_remove_monarchy = yes }
			}
		}
		recheck_annexations = yes
	}

	option = { #Restore the Portuguese monarchy
		log = "[GetLogInfo]: event annex.1089 option annex.1089.b"
		name = annex.1089.b
		trigger = {
			NOT = { country_exists = POR }
			has_socialist_government = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = {
					is_german_tag = yes
					tag = CAN
					tag = GBR
					tag = NFA
					tag = SPK
					tag = SPR
				}
			}
		}
		set_temp_variable = { tag_to_release = POR }
		release_targeted_tag = yes
		POR_puppet_setup = yes
		recheck_annexations = yes
	}

	option = { #give to SWF
		log = "[GetLogInfo]: event annex.1089 option annex.1089.c"
		name = annex.1089.c
		trigger = {
			NOT = { tag = SWF }
			SWF = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 50 }
		every_owned_state = {
			limit = {
				is_core_of = POR
				is_claim_or_core_of_ROOT = no
			}
			SWF = {
				add_state_claim = PREV
				transfer_state = PREV
			}
		}
		SWF = {
			if = {
				limit = { NOT = { has_completed_focus = SWF_united_iberia } }
				complete_national_focus = SWF_united_iberia
			}
			else = {
				set_cosmetic_tag = SPA_socialist_iberia
			}
		}
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1089 option annex.1089.d"
		name = annex.1089.d
		trigger = {
			tag = SWF
		}
		ai_chance = { base = 100 }
		occupy_medium_country = yes
		add_state_claim = 112 #Lisbon
		add_state_claim = 179 #Beja
		add_state_claim = 180 #Porto
		add_state_claim = 181 #Guarda
		add_state_claim = 939 #Santarém
		add_state_claim = 697 #Madeira
		add_state_claim = 698 #Azores
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1089 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = POR_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Southern France
	id = annex.1090
	title = annexation_SOUTHFRANCE_CONQ
	desc = annexation_SOUTHFRANCE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			every_state = {
				limit = {
					is_mainland_france_state = no
					NOT = { state = 1 } #Corsica
				}
				remove_core_of = FRA
				remove_claim_by = FRA
			}
			1 = { retain_state = yes } #Corsica
			735 = { retain_state = yes } #Savoy
			762 = { retain_state = yes } #Nice
			779 = { retain_state = yes } #Labourd
			817 = { retain_state = yes } #Roussillon
			943 = { retain_state = yes } #Upper Savoy
			817 = { retain_state = yes } #Roussillon
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1090 option annex.1090.a"
		name = annex.1090.a #Restore the Commune of France!
		ai_chance = { base = 1000 }
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = FRA }
		}
		set_temp_variable = { tag_to_release = FRA }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1090 option annex.1090.b"
		name = annex.1090.b #Restore the French Republic!
		ai_chance = { base = 1000 }
		trigger = {
			is_ally_with = ENT
			NOT = { country_exists = NFA }
			has_socialist_government = no
		}
		set_temp_variable = { tag_to_release = NFA }
		FRA = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_claims = yes
		puppet_released_tag = yes
		hidden_effect = { NFA_puppet_setup = yes }
	}

	option = {
		log = "[GetLogInfo]: event annex.1090 option annex.1090.c"
		name = annex.1090.c #Set up a French Puppet Government
		ai_chance = { base = 90 }
		trigger = {
			has_socialist_government = no
			NOT = {
				is_ally_with = ENT
				is_ally_with = NFA
				country_exists = FRP
			}
		}
		set_temp_variable = { tag_to_release = FRP }
		FRA = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_cores = yes
		puppet_released_tag = yes

		if = {
			limit = { country_exists = NFA }
			reverse_add_opinion_modifier = {
				target = NFA
				modifier = occupied_france
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1090 option annex.1090.d"
		name = annex.1090.d #Give it to our French allies
		trigger = {
			var:16.owner = { #Paris
				is_french_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = { base = 10 }
		set_temp_variable = { tag_to_release = 16.owner }
		FRA = { set_transfer_target_cores = yes }
		if = {
			limit = { var:tag_to_release = { tag = NFA } }
			transfer_targeted_territory_and_add_claims = yes
		}
		else = {
			transfer_targeted_territory_and_add_cores = yes
		}
	}

	option = { #Occupy
		log = "[GetLogInfo]: event annex.1090 option annex.occupation"
		name = annex.occupation
		trigger = {
			OR = {
				NOT = { is_ally_with = FRA }
				has_subject = FRA
			}
			OR = {
				NOT = { is_ally_with = NFA }
				has_subject = NFA
			}
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
		set_country_flag = SOUTHFRANCE_CONQ
		if = {
			limit = { country_exists = NFA }
			reverse_add_opinion_modifier = {
				target = NFA
				modifier = occupied_france
			}
		}
	}
}

country_event = { #Fate of Corsica
	id = annex.1091
	title = annexation_CORSICA_CONQ
	desc = annexation_CORSICA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { is_french_tag = no }
			if = {
				limit = { FRA = { ROOT_can_grant_land = yes } }
				FRA = { save_event_target_as = france }
			}
			if = {
				limit = { NFA = { ROOT_can_grant_land = yes } }
				NFA = { save_event_target_as = france_exile }
			}
			if = {
				limit = {
					FRP = {
						ROOT_can_grant_land = yes
						OR = {
							owns_state = 21 #Provence
							owns_state = 22 #Languedoc
						}
					}
				}
				FRP = { save_event_target_as = france_puppet }
			}
			if = {
				limit = {
					OR = {
						is_ally_with = event_target:france
						is_ally_with = event_target:france_exile
					}
				}
				save_event_target_as = has_french_ally
			}
		}
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					AND = {
						is_italian_tag = yes
						OR = {
							838 = { is_claim_or_core_of_PREV = yes } #Liguria
							162 = { is_claim_or_core_of_PREV = yes } #Tuscany
							2 = { is_claim_or_core_of_PREV = yes } #Latium
							117 = { is_claim_or_core_of_PREV = yes } #Campania
							114 = { is_claim_or_core_of_PREV = yes } #Sardinia
						}
					}
				}
			}
			save_event_target_as = italy_can_annex_corsica
		}
		else = {
			if = {
				limit = {
					var:838.owner = { #Liguria
						is_italian_tag = yes
						ROOT_can_grant_land = yes
					}
				}
				var:158.owner = { save_event_target_as = italy_piedmont }
			}
			if = {
				limit = {
					var:162.owner = { #Tuscany
						is_italian_tag = yes
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:italy_piedmont }
					}
				}
				var:162.owner = { save_event_target_as = italy_tuscany }
			}
			if = {
				limit = {
					var:2.owner = { #Latium
						is_italian_tag = yes
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:italy_piedmont }
						NOT = { tag = event_target:italy_tuscany }
					}
				}
				var:2.owner = { save_event_target_as = italy_latium }
			}
			if = {
				limit = {
					var:117.owner = { #Campania
						is_italian_tag = yes
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:italy_piedmont }
						NOT = { tag = event_target:italy_tuscany }
						NOT = { tag = event_target:italy_latium }
					}
				}
				var:117.owner = { save_event_target_as = italy_campania }
			}
			if = {
				limit = {
					var:114.owner = { #Sardinia
						is_italian_tag = yes
						ROOT_can_grant_land = yes
						NOT = { tag = event_target:italy_piedmont }
						NOT = { tag = event_target:italy_tuscany }
						NOT = { tag = event_target:italy_latium }
						NOT = { tag = event_target:italy_campania }
					}
				}
				var:114.owner = { save_event_target_as = italy_sardinia }
			}
			if = {
				limit = {
					OR = {
						is_ally_with = event_target:italy_piedmont
						is_ally_with = event_target:italy_tuscany
						is_ally_with = event_target:italy_latium
						is_ally_with = event_target:italy_campania
						is_ally_with = event_target:italy_sardinia
					}
				}
				save_event_target_as = has_italian_ally
			}
		}
	}

	option = { #Give it to FRA
		log = "[GetLogInfo]: event annex.1091 option annex.1091.a"
		name = annex.1091.a
		trigger = {
			has_event_target = france
			is_french_tag = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				is_italian_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		1 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to NFA
		log = "[GetLogInfo]: event annex.1091 option annex.1091.b"
		name = annex.1091.b
		trigger = {
			has_event_target = france_exile
			is_french_tag = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france_exile }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france_exile }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				is_italian_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:france_exile }
		1 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to FRP
		log = "[GetLogInfo]: event annex.1091 option annex.1091.c"
		name = annex.1091.c
		trigger = {
			has_event_target = france_puppet
			is_french_tag = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france_puppet }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:france_puppet }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				is_italian_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:france_puppet }
		1 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to Italian tag 1 (owner of Piedmont)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.d"
		name = annex.1091.d
		trigger = {
			has_event_target = italy_piedmont
			NOT = { has_event_target = italy_can_annex_corsica }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_piedmont }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_piedmont }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_piedmont }
		var:tag_to_release = {
			1 = { #Corsica
				transfer_state_and_add_claim = yes
				hidden_effect = { var:tag_to_release = { PREV = { enable_state_integration_80_compliance = yes } } }
			}
		}
	}

	option = { #Give it to Italian tag 2 (owner of Tuscany)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.e"
		name = annex.1091.e
		trigger = {
			has_event_target = italy_tuscany
			NOT = { has_event_target = italy_can_annex_corsica }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_tuscany }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_tuscany }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_tuscany }
		var:tag_to_release = {
			1 = { #Corsica
				transfer_state_and_add_claim = yes
				hidden_effect = { var:tag_to_release = { PREV = { enable_state_integration_80_compliance = yes } } }
			}
		}
	}

	option = { #Give it to Italian tag 3 (owner of Rome)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.f"
		name = annex.1091.f
		trigger = {
			has_event_target = italy_latium
			NOT = { has_event_target = italy_can_annex_corsica }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_latium }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_latium }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_latium }
		var:tag_to_release = {
			1 = { #Corsica
				transfer_state_and_add_claim = yes
				hidden_effect = { var:tag_to_release = { PREV = { enable_state_integration_80_compliance = yes } } }
			}
		}
	}

	option = { #Give it to Italian tag 4 (owner of Campania)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.g"
		name = annex.1091.g
		trigger = {
			has_event_target = italy_campania
			NOT = { has_event_target = italy_can_annex_corsica }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_campania }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_campania }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_campania }
		var:tag_to_release = {
			1 = { #Corsica
				transfer_state_and_add_claim = yes
				hidden_effect = { var:tag_to_release = { PREV = { enable_state_integration_80_compliance = yes } } }
			}
		}
	}

	option = { #Give it to Italian tag 5 (owner of Sardinia)
		log = "[GetLogInfo]: event annex.1091 option annex.1091.h"
		name = annex.1091.h
		trigger = {
			has_event_target = italy_sardinia
			NOT = { has_event_target = italy_can_annex_corsica }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_sardinia }
				has_event_target = has_italian_ally
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy_sardinia }
				has_event_target = has_french_ally
				is_germany_or_splinter_tag = no
			}
			modifier = {
				factor = 0
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy_sardinia }
		var:tag_to_release = {
			1 = { #Corsica
				transfer_state_and_add_claim = yes
				hidden_effect = { var:tag_to_release = { PREV = { enable_state_integration_80_compliance = yes } } }
			}
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1091 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = { base = 1000 }
		1 = { add_claim_of_ROOT = yes } #Corsica
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1091 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = italy_can_annex_corsica
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 114.owner }
			1 = { add_claim_of_target_and_transfer_if_owned = yes } #Corsica
		}
		else = {
			1 = {
				add_claim_of_ROOT = yes #Corsica
				hidden_effect = { enable_state_integration_80_compliance = yes }
			}
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1091 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_french_tag = no
			NOT = { has_event_target = italy_can_annex_corsica }
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = CORSICA_CONQ
	}
}

country_event = { #Fate of Italy
	id = annex.1092
	title = annexation_ITA_CONQ
	desc = annexation_ITA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = ITA_CONQ
			if = {
				limit = {
					has_idea = PAP_exiled_holy_see
				}
				remove_ideas = PAP_exiled_holy_see
			}
			if = {
				limit = { tag = AUS }
				every_state = {
					limit = {
						OR = {
							state = 488 #Trieste
							state = 783 #Trentino
							state = 683 #Gorizia
							state = 736 #Istria
						}
						is_claim_or_core_of_ROOT = no
					}
					add_claim_by = ROOT
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.a"
		name = annex.1092.a #Release as Italy
		trigger = {
			has_socialist_government = no
			NOT = {
				tag = AUS
				has_government = authoritarian_democrat
				country_exists = ITA
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = ITA_CONQ
		set_temp_variable = { tag_to_release = ITA }

		# restore initial cores if they were removed
		hidden_effect = {
			159 = { remove_claim_and_add_core_of_target = yes } #Lombardy
			160 = { remove_claim_and_add_core_of_target = yes } #Venice
			759 = { remove_claim_and_add_core_of_target = yes } #Friuli
			every_state = {
				limit = {
					is_european_italy = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
		}

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		every_country = {
			limit = {
				is_ai = yes
				is_subject_of = ROOT
				is_italian_tag = yes
			}
			hidden_effect = { every_unit_leader = { set_nationality = var:tag_to_release } }
			var:tag_to_release = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}

		reverse_add_opinion_modifier = { target = ITA modifier = KR_liberated_us }
		puppet_released_tag = yes

		hidden_effect = {
			var:tag_to_release = {
				if = {
					limit = {
						has_government = national_populist
						NOT = { has_idea = ITA_republic_federation }
						NOT = { has_completed_focus = ITA_destroy_austrian_influence }
					}
					add_ideas = ITA_republic_federation
				}
				if = {
					limit = {
						has_government = national_populist
						NOT = { has_idea = ITA_republic_unitary }
						has_completed_focus = ITA_destroy_austrian_influence
					}
					add_ideas = ITA_republic_unitary
				}
				if = {
					limit = {
						has_government = national_populist
						has_idea = ITA_republic_unitary
						has_completed_focus = ITA_centralized_power
					}
					remove_ideas = ITA_republic_unitary
				}
				if = {
					limit = {
						NOT = { has_government = national_populist }
						NOT = { has_idea = ITA_republic_federation }
						NOT = { has_completed_focus = ITA_a_stable_italy }
						NOT = { has_completed_focus = ITA_stable_democracy }
					}
					add_ideas = ITA_republic_federation
				}
				if = {
					limit = { has_idea = ITA_federation_transition }
					remove_ideas = ITA_federation_transition
				}
				if = {
					limit = { has_idea = ITA_federation_secure }
					remove_ideas = ITA_federation_secure
				}
				if = {
					limit = { owns_state = 2 } #Latium
					set_capital = { state = 2 remember_old_capital = no }
				}
				mark_focus_tree_layout_dirty = yes
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.m"
		name = annex.1092.m #Release as Italian Federation
		trigger = {
			has_socialist_government = no
			OR = {
				tag = AUS
				has_government = authoritarian_democrat
			}
			NOT = {
				country_exists = ITA
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				NOT = { tag = AUS }
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = ITA_CONQ
		set_temp_variable = { tag_to_release = ITA }

		# restore initial cores if they were removed
		hidden_effect = {
			159 = { remove_claim_and_add_core_of_target = yes } #Lombardy
			160 = { remove_claim_and_add_core_of_target = yes } #Venice
			759 = { remove_claim_and_add_core_of_target = yes } #Friuli
			every_state = {
				limit = {
					is_european_italy = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
		}

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		every_country = {
			limit = {
				is_ai = yes
				is_subject_of = ROOT
				is_italian_tag = yes
			}
			hidden_effect = { every_unit_leader = { set_nationality = var:tag_to_release } }
			var:tag_to_release = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}
		reverse_add_opinion_modifier = { target = ITA modifier = KR_liberated_us }
		puppet_released_tag = yes

		hidden_effect = {
			var:tag_to_release = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				add_popularity = {
					ideology = authoritarian_democrat
					popularity = 0.2
				}
				if = {
					limit = { has_idea = ITA_republic_federation }
					remove_ideas = ITA_republic_federation
				}
				if = {
					limit = {
						NOT = { has_idea = ITA_federation_transition }
						NOT = { has_completed_focus = ITA_stable_institutions }
					}
					add_ideas = ITA_federation_transition
				}
				if = {
					limit = {
						NOT = { has_idea = ITA_federation_secure }
						has_completed_focus = ITA_stable_institutions
					}
					add_ideas = ITA_federation_secure
				}
				if = {
					limit = { owns_state = 2 } #Latium
					set_capital = { state = 2 remember_old_capital = no }
				}
				mark_focus_tree_layout_dirty = yes
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.b"
		name = annex.1092.b #Release as SRI
		trigger = {
			has_socialist_government = yes
			NOT = {
				country_exists = SRI
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = ITA_CONQ
		set_temp_variable = { tag_to_release = SRI }

		# restore initial cores if they were removed
		hidden_effect = {
			157 = { remove_claim_and_add_core_of_target = yes } #Marches
			158 = { remove_claim_and_add_core_of_target = yes } #Piedmont
			161 = { remove_claim_and_add_core_of_target = yes } #Romagna
			162 = { remove_claim_and_add_core_of_target = yes } #Tuscany
			764 = { remove_claim_and_add_core_of_target = yes } #Viterbo
			838 = { remove_claim_and_add_core_of_target = yes } #Liguria
			1003 = { remove_claim_and_add_core_of_target = yes } #Aosta Valley
			1004 = { remove_claim_and_add_core_of_target = yes } #Emilia
			1005 = { remove_claim_and_add_core_of_target = yes } #Umbria
			every_state = {
				limit = {
					is_european_italy = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
		}
		reverse_add_opinion_modifier = { target = SRI modifier = KR_liberated_us }
		release_targeted_tag = yes
		every_country = {
			limit = {
				is_ai = yes
				is_subject_of = ROOT
				is_italian_tag = yes
			}
			hidden_effect = { every_unit_leader = { set_nationality = SRI } }
			var:tag_to_release = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}
		var:tag_to_release = {
			if = {
				limit = { owns_state = 2 } #Latium
				set_capital = { state = 2 remember_old_capital = no }
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			ITA = { is_ally_of_ROOT = yes }
			NOT = { tag = ITA }
		}
		ai_chance = { base = 95 }
		clr_country_flag = ITA_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = ITA
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			SRI = { is_ally_of_ROOT = yes }
			NOT = { tag = SRI }
		}
		ai_chance = { base = 95 }
		clr_country_flag = ITA_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = SRI
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			SIC = { is_ally_of_ROOT = yes }
			NOT = { tag = SIC }
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0.5
				is_in_faction_with = SRD
			}
			modifier = {
				factor = 0.1
				OR = {
					is_in_faction_with = ITA
					is_in_faction_with = SRI
				}
			}
		}
		clr_country_flag = ITA_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = SIC
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0.1
				OR = {
					is_in_faction_with = ITA
					is_in_faction_with = SRI
				}
			}
		}
		clr_country_flag = ITA_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_european_italy = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = SRD
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.h"
		name = annex.1092.h #Offer to ITA
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			ITA = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_italy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = { base = 50 }
		ITA = {
			set_country_flag = offered_italy_@ROOT
			set_country_flag = offering_italy
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.i"
		name = annex.1092.i #Offer to SRD
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			158 = {
				OR = {
					is_owned_and_controlled_by = ROOT
					is_owned_and_controlled_by = SRD
				}
			}
			SRD = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_italy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = { base = 50 }
		SRD = {
			set_country_flag = offered_italy_@ROOT
			set_country_flag = offering_italy
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.j"
		name = annex.1092.j #Offer to SIC
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			SIC = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_italy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = { base = 50 }
		SIC = {
			set_country_flag = offered_italy_@ROOT
			set_country_flag = offering_italy
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.1092.k"
		name = annex.1092.k #We'll decide what to do with each region separately
		trigger = {
			has_socialist_government = no
		}
		ai_chance = { base = 5 }
		set_country_flag = { flag = KR_will_balkanize_italy days = 100 value = 1 }
		custom_effect_tooltip = will_balkanize_italy
		recheck_annexations_immediate = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1092 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_large_country = yes
	}
}

country_event = { #Fate of the Aosta Valley
	id = annex.1093
	title = annexation_AOSTA_CONQ
	desc = annexation_AOSTA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = { #Return to SRD
		log = "[GetLogInfo]: event annex.1093 option annex.1093.a"
		name = annex.1093.a
		trigger = {
			SRD = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				NOT = { is_ally_with = SRD }
			}
			modifier = {
				factor = 10
				SRD = { is_ally_of_ROOT = yes }
			}
		}
		SRD = { transfer_state = 1003 }
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1093 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = { base = 10 }
		add_political_power = -75
		add_state_claim = 1003
		recheck_annexations = yes
	}
}

country_event = { #Fate of Piedmont
	id = annex.1094
	title = annexation_PIEDMONT_CONQ
	desc = annexation_PIEDMONT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.1094 option annex.1092.b"
		name = annex.1092.b #Release as SRI
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = SRI }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = SRI }

		# restore initial cores if they were removed
		hidden_effect = {
			157 = { remove_claim_and_add_core_of_target = yes } #Marches
			158 = { remove_claim_and_add_core_of_target = yes } #Piedmont
			161 = { remove_claim_and_add_core_of_target = yes } #Romagna
			162 = { remove_claim_and_add_core_of_target = yes } #Tuscany
			764 = { remove_claim_and_add_core_of_target = yes } #Viterbo
			838 = { remove_claim_and_add_core_of_target = yes } #Liguria
			1003 = { remove_claim_and_add_core_of_target = yes } #Aosta Valley
			1004 = { remove_claim_and_add_core_of_target = yes } #Emilia
			1005 = { remove_claim_and_add_core_of_target = yes } #Umbria
			every_state = {
				limit = {
					is_european_italy = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
		}
		release_targeted_tag = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1094 option annex.1094.a"
		name = annex.1094.a #Release as SRD
		trigger = {
			has_socialist_government = no
			NOT = { country_exists = SRD }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		# restore initial cores if they were removed
		set_temp_variable = { tag_to_release = SRD }
		hidden_effect = {
			114 = { remove_claim_and_add_core_of_target = yes } #Sardinia
			158 = { remove_claim_and_add_core_of_target = yes } #Piedmont
			735 = { remove_claim_and_add_core_of_target = yes } #Savoy
			762 = { remove_claim_and_add_core_of_target = yes } #Nice
			838 = { remove_claim_and_add_core_of_target = yes } #Liguria
			943 = { remove_claim_and_add_core_of_target = yes } #Upper Savoy
			1003 = { remove_claim_and_add_core_of_target = yes } #Aosta Valley
		}
		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
					state = 114 #Sardinia
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_without_overriding_occupation = yes
		}
		puppet_released_tag = yes
		if = {
			limit = {
				OR = {
					owns_state = 158 #for the tooltip
					SRD = { owns_state = 158 }
				}
				NOT = { SRD = { has_cosmetic_tag = SRD_piedmont } }
			}
			SRD = { set_cosmetic_tag = SRD_piedmont }
		}
		reverse_add_opinion_modifier = { target = SRD modifier = KR_liberated_us }
		hidden_effect = { SRD = { SRD_restore_amedeo = yes } }
	}
	option = {
		log = "[GetLogInfo]: event annex.1094 option annex.1092.i"
		name = annex.1092.i #Offer to SRD
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			838 = {
				is_owned_and_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
			SRD = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_piedmont_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = { base = 50 }
		SRD = {
			set_country_flag = offered_piedmont_@ROOT
			set_country_flag = offering_piedmont
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1094 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0.5
				SRD = { is_ally_of_ROOT = yes }
			}
		}

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
				}
			}
			transfer_state_to = ITA
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1094 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 100 }

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
				}
			}
			transfer_state_to = SRI
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1094 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				SRD = { is_ally_of_ROOT = yes }
			}
		}

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
				}
			}
			transfer_state_to = SIC
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1094 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
			NOT = {
				AND = {
					tag = SIC
					NOT = { has_country_flag = SIC_empire }
					controls_all_owned_states = yes
					SRD = {
						exists = yes
						is_subject = no
						NOT = {
							has_war_with = ROOT
							has_country_flag = ITA_refuse_join_@ROOT
						}
						controls_all_owned_states = yes
					}
				}
			}
		}
		ai_chance = { base = 200 }

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				OR = {
					state = 1003 #Aosta Valley
					state = 158 #Piedmont
					state = 838 #Liguria
					state = 762 #Nice
					state = 735 #Savoy
					state = 943 #Upper Savoy
				}
			}
			if = {
				limit = {
					NOT = {
						is_claimed_by = SRD
						is_core_of = SRD
					}
				}
				add_claim_by = SRD
			}
			transfer_state_to = SRD
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1094 option SIC_offer_piedmont_to_SRD"
		name = SIC_offer_piedmont_to_SRD #Make a deal with SRD
		trigger = {
			tag = SIC
			NOT = { has_country_flag = SIC_empire }
			controls_all_owned_states = yes
			SRD = {
				exists = yes
				is_subject = no
				NOT = {
					has_war_with = ROOT
					has_country_flag = ITA_refuse_join_@ROOT
				}
				controls_all_owned_states = yes
			}
		}
		SRD = { country_event = sic.100 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1094 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_country_flag = SIC_confed }
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Lombardy
	id = annex.1095
	title = annexation_LOM_CONQ
	desc = annexation_LOM_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			LOM = {
				if = {
					limit = { has_character = ITA_adriano_visconti }
					ITA_adriano_visconti = {
						set_character_name = ITA_adriano_visconti
						clr_character_flag = is_monarch
						remove_all_country_leader_roles = yes
						set_nationality = ITA
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1092.a"
		name = annex.1092.a #Release as ITA
		trigger = {
			160 = { #Venice
				is_owned_and_controlled_by = ROOT
				is_claim_or_core_of_ROOT = no
			}
			has_socialist_government = no
			NOT = {
				tag = AUS
				has_government = authoritarian_democrat
				country_exists = ITA
				is_italian_tag = yes
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = { base = 50 }
		set_temp_variable = { tag_to_release = ITA }

		# restore initial cores if they were removed
		hidden_effect = {
			159 = { remove_claim_and_add_core_of_target = yes } #Lombardy
			160 = { remove_claim_and_add_core_of_target = yes } #Venice
			759 = { remove_claim_and_add_core_of_target = yes } #Friuli
			every_state = {
				limit = {
					is_european_italy = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 159
					state = 160
					state = 759
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		reverse_add_opinion_modifier = { target = ITA modifier = KR_liberated_us }
		puppet_released_tag = yes
		hidden_effect = {
			ITA = {
				if = {
					limit = {
						has_government = national_populist
						NOT = { has_idea = ITA_republic_federation }
						NOT = { has_completed_focus = ITA_destroy_austrian_influence }
					}
					add_ideas = ITA_republic_federation
				}
				if = {
					limit = {
						has_government = national_populist
						NOT = { has_idea = ITA_republic_unitary }
						has_completed_focus = ITA_destroy_austrian_influence
					}
					add_ideas = ITA_republic_unitary
				}
				if = {
					limit = {
						has_government = national_populist
						has_idea = ITA_republic_unitary
						has_completed_focus = ITA_centralized_power
					}
					remove_ideas = ITA_republic_unitary
				}
				if = {
					limit = {
						NOT = { has_government = national_populist }
						NOT = { has_idea = ITA_republic_federation }
						NOT = { has_completed_focus = ITA_a_stable_italy }
						NOT = { has_completed_focus = ITA_stable_democracy }
					}
					add_ideas = ITA_republic_federation
				}
				if = {
					limit = { has_idea = ITA_federation_transition }
					remove_ideas = ITA_federation_transition
				}
				if = {
					limit = { has_idea = ITA_federation_secure }
					remove_ideas = ITA_federation_secure
				}
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1092.m"
		name = annex.1092.m #Release as Italian Federation
		trigger = {
			has_socialist_government = no
			OR = {
				tag = AUS
				has_government = authoritarian_democrat
			}
			NOT = {
				country_exists = ITA
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				is_italian_tag = yes
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				NOT = { tag = AUS }
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = ITA }

		# restore initial cores if they were removed
		hidden_effect = {
			159 = { remove_claim_and_add_core_of_target = yes } #Lombardy
			160 = { remove_claim_and_add_core_of_target = yes } #Venice
			759 = { remove_claim_and_add_core_of_target = yes } #Friuli
			every_state = {
				limit = {
					is_european_italy = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
		}

		159 = { transfer_if_owned = yes }
		160 = { transfer_if_owned = yes }
		759 = { transfer_if_owned = yes }
		every_subject_country = {
			limit = {
				is_ai = yes
				is_italian_tag = yes
			}
			every_unit_leader = { set_nationality = var:tag_to_release }
			var:tag_to_release = { annex_country = { target = PREV transfer_troops = yes } }
		}
		puppet_released_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				set_politics = {
					ruling_party = authoritarian_democrat
					elections_allowed = no
				}
				add_popularity = {
					ideology = authoritarian_democrat
					popularity = 0.2
				}
				remove_ideas = ITA_republic_federation
				if = {
					limit = { has_completed_focus = ITA_stable_institutions }
					add_ideas = ITA_federation_secure
					remove_ideas = ITA_federation_transition
				}
				else = {
					add_ideas = ITA_federation_transition
				}
				if = {
					limit = {
						ROOT = { tag = AUS }
						NOT = {
							TUS = {
								exists = yes
								has_country_leader = { character = ITA_pietro_ferdinando }
							}
						}
					}
					ITA_pietro_ferdinando = {
						set_nationality = PREV
						set_character_name = ITA_pietro_ferdinando
						remove_all_country_leader_roles = yes
						add_country_leader_role = {
							country_leader = { ideology = authoritarian_democrat_subtype }
							promote_leader = yes
						}
					}
				}
				else = {
					ITA_adriano_visconti = {
						set_nationality = PREV
						set_character_name = ITA_adriano_visconti
						remove_all_country_leader_roles = yes
						add_country_leader_role = {
							country_leader = { ideology = authoritarian_democrat_subtype }
							promote_leader = yes
						}
					}
				}
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1092.b"
		name = annex.1092.b #Release as SRI
		trigger = {
			has_socialist_government = yes
			NOT = {
				country_exists = SRI
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = {
			base = 95
			modifier = {
				factor = 0
				OR = {
					SIC = { is_ally_of_ROOT = yes }
					SRD = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = SRI }

		# restore initial cores if they were removed
		hidden_effect = {
			157 = { remove_claim_and_add_core_of_target = yes } #Marches
			158 = { remove_claim_and_add_core_of_target = yes } #Piedmont
			161 = { remove_claim_and_add_core_of_target = yes } #Romagna
			162 = { remove_claim_and_add_core_of_target = yes } #Tuscany
			764 = { remove_claim_and_add_core_of_target = yes } #Viterbo
			838 = { remove_claim_and_add_core_of_target = yes } #Liguria
			1003 = { remove_claim_and_add_core_of_target = yes } #Aosta
			1004 = { remove_claim_and_add_core_of_target = yes } #Emilia
			1005 = { remove_claim_and_add_core_of_target = yes } #Umbria
			every_state = {
				limit = {
					is_european_italy = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
		}
		release_targeted_tag = yes
		every_subject_country = {
			limit = {
				is_ai = yes
				is_italian_tag = yes
			}
			hidden_effect = { every_unit_leader = { set_nationality = SRI } }
			var:tag_to_release = {
				annex_country = { target = PREV transfer_troops = yes }
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1095.a"
		name = annex.1095.a #Release as LOM duchy
		trigger = {
			has_socialist_government = no
			OR = {
				tag = AUS
				tag = GER
				tag = SIC
				tag = SRD
				has_government = authoritarian_democrat
			}
			NOT = {
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = LOM }
		var:tag_to_release = { add_state_core = 159 }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				if = {
					limit = {
						NOT = {
							has_government = authoritarian_democrat
							has_country_flag = LOM_constitutional_monarchy
						}
					}
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
					set_political_party = { ideology = authoritarian_democrat popularity = 60 }
				}
				LOM_create_adriano_visconti = yes
			}
			ITA = {
				every_character = {
					limit = { has_character_flag = ITA_lombard_leader }
					set_nationality = var:tag_to_release
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
			}
		}
		recheck_annexations = yes
	}

	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1095.c"
		name = annex.1095.c #Release as LOM republic
		trigger = {
			has_socialist_government = no
			NOT = {
				tag = AUS
				tag = GER
				tag = SIC
				tag = SRD
				has_government = authoritarian_democrat
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = LOM }
		var:tag_to_release = { add_state_core = 159 }
		release_targeted_tag = yes
		hidden_effect = {
			var:tag_to_release = {
				clr_country_flag = LOM_constitutional_monarchy
				if = {
					limit = { has_government = authoritarian_democrat }
					set_politics = {
						ruling_party = social_liberal
						elections_allowed = no
					}
					set_political_party = { ideology = social_liberal popularity = 60 }
				}
			}
			ITA = {
				every_character = {
					limit = { has_character_flag = ITA_lombard_leader }
					set_nationality = var:tag_to_release
					if = {
						limit = { can_be_country_leader = yes }
						promote_character = yes
					}
				}
				ITA_adriano_visconti = {
					set_nationality = var:tag_to_release
					remove_country_leader_role_authoritarian_democrat = yes
					add_country_leader_role = {
						country_leader = {
							desc = ITA_adriano_visconti_leader_desc
							ideology = authoritarian_democrat_subtype
						}
						promote_leader = yes
					}
				}
			}
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		set_temp_variable = { tag_to_release = ITA }
		159 = { add_claim_of_target_and_transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SIC
					tag = SRD
				}
			}
		}
		set_temp_variable = { tag_to_release = SRI }
		159 = { add_claim_of_target_and_transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
			NOT = {
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SRD
				}
			}
		}
		set_temp_variable = { tag_to_release = SIC }
		159 = { transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
			NOT = {
				AND = {
					tag = AUS
					country_exists = VNC
					VNC = {
						has_country_flag = VNC_accepted_austrian_help
						has_country_flag = VNC_republican_revolt
					}
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
				}
			}
		}
		set_temp_variable = { tag_to_release = SRD }
		159 = { add_claim_of_target_and_transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.1095.b"
		name = annex.1095.b #Give to VNC
		trigger = {
			tag = AUS
			country_exists = VNC
			VNC = {
				has_country_flag = VNC_accepted_austrian_help
				has_country_flag = VNC_republican_revolt
			}
		}
		set_temp_variable = { tag_to_release = VNC }
		159 = { transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1095 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_country_flag = SIC_confed }
		}
		set_country_flag = LOM_CONQ
		ai_chance = { base = 0 }
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Venice
	id = annex.1096
	title = annexation_VNC_CONQ
	desc = annexation_VNC_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.1096 option annex.1096.a"
		name = annex.1096.a #Release as VNC
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		VNC = {
			add_state_core = 160
			add_state_core = 759
			hidden_effect = {
				VNC_giuseppe_volpi = {
					set_nationality = VNC
					remove_country_leader_role_paternal_autocrat = yes
					add_country_leader_role = {
						country_leader = { ideology = paternal_autocrat_subtype }
						promote_leader = yes
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = VNC }
		release_targeted_tag = yes
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1096 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		set_temp_variable = { tag_to_release = ITA }
		160 = { add_claim_of_target_and_transfer_if_owned = yes }
		759 = { add_claim_of_target_and_transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1096 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SIC
					tag = SRD
				}
			}
		}
		set_temp_variable = { tag_to_release = SRI }
		160 = { add_claim_of_target_and_transfer_if_owned = yes }
		759 = { add_claim_of_target_and_transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1096 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SRD
				}
			}
		}
		set_temp_variable = { tag_to_release = SIC }
		160 = { add_claim_of_target_and_transfer_if_owned = yes }
		759 = { add_claim_of_target_and_transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1096 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
				}
			}
		}
		set_temp_variable = { tag_to_release = SRD }
		160 = { add_claim_of_target_and_transfer_if_owned = yes }
		759 = { add_claim_of_target_and_transfer_if_owned = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1096 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_country_flag = SIC_confed }
		}
		ai_chance = { base = 0 }
		set_country_flag = VNC_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Emilia
	id = annex.1097
	title = annexation_EMI_CONQ
	desc = annexation_EMI_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.1097 option annex.1097.a"
		name = annex.1097.a #Release as EMI
		trigger = {
			has_socialist_government = no
			if = {
				limit = {
					OR = {
						tag = SPK
						original_tag = SIC
						original_tag = NFA
					}
				}
				is_monarchy = no
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = EMI }
		var:tag_to_release = {
			add_state_core = 1004
			transfer_state = 1004
		}
		puppet_released_tag = yes
		hidden_effect = {
			EMI_move_relevant_characters = yes
			if = {
				limit = {
					NOT = { has_government = authoritarian_democrat }
					OR = {
						tag = GER
						tag = AUS
						tag = SRD
					}
				}
				EMI = {
					add_popularity = { ideology = authoritarian_democrat popularity = 0.2 }
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
				}
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event annex.1097 option annex.1097.b"
		name = annex.1097.b #Release as Parma
		trigger = {
			OR = {
				tag = SPK
				original_tag = SIC
				original_tag = NFA
			}
			is_monarchy = yes
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = EMI }
		var:tag_to_release = {
			add_state_core = 1004
			transfer_state = 1004
			EMI_create_elia = yes
		}
		puppet_released_tag_nocosmetic = yes
		hidden_effect = { EMI_move_relevant_characters = yes }
	}
	option = {
		log = "[GetLogInfo]: event annex.1097 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		ITA = { transfer_state = 1004 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1097 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		SRI = { transfer_state = 1004 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1097 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		SIC = { transfer_state = 1004 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1097 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		SRD = { transfer_state = 1004 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1097 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_country_flag = SIC_confed }
		}
		ai_chance = { base = 0 }
		set_country_flag = EMI_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Tuscany
	id = annex.1098
	title = annexation_TUS_CONQ
	desc = annexation_TUS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			TUS = {
				if = {
					limit = { has_character = ITA_pietro_ferdinando }
					ITA_pietro_ferdinando = {
						set_character_name = ITA_pietro_ferdinando
						remove_all_country_leader_roles = yes
						set_nationality = ITA
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1098 option annex.1098.a"
		name = annex.1098.a #Release as TUS grand duchy
		trigger = {
			has_socialist_government = no
			OR = {
				tag = AUS
				tag = GER
				tag = SRD
				tag = SIC
				has_government = authoritarian_democrat
				has_government = paternal_autocrat
			}
			NOT = { ITA = { has_country_leader = { character = ITA_pietro_ferdinando } } }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = TUS }
		TUS = {
			add_state_core = 162
			transfer_state = 162
			add_opinion_modifier = { target = TUS modifier = KR_liberated_us }
		}
		puppet_released_tag = yes

		hidden_effect = {
			if = {
				limit = { NOT = { has_government = paternal_autocrat } }
				TUS = {
					set_political_party = { ideology = authoritarian_democrat popularity = 60 }
					set_politics = {
						ruling_party = authoritarian_democrat
						elections_allowed = no
					}
				}
			}
			ITA = {
				ITA_pietro_ferdinando = {
					set_nationality = TUS
					remove_all_country_leader_roles = yes
					set_character_name = TUS_pietro_ferdinando_regnal
					add_country_leader_role = {
						country_leader = {
							ideology = authoritarian_democrat_subtype
							desc = TUS_pietro_ferdinando_leader_desc
						}
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = {
							ideology = paternal_autocrat_subtype
							desc = TUS_pietro_ferdinando_leader_desc
						}
						promote_leader = yes
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1098 option annex.1098.b"
		name = annex.1098.b #Release as TUS republic
		trigger = {
			has_socialist_government = no
			OR = {
				NOT = {
					tag = AUS
					tag = GER
					tag = SRD
					tag = SIC
				}
				ITA = { has_country_leader = { character = ITA_pietro_ferdinando } }
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = TUS }
		TUS = {
			add_state_core = 162
			transfer_state = 162
			add_opinion_modifier = { target = TUS modifier = KR_liberated_us }
		}
		puppet_released_tag = yes

		hidden_effect = {
			if = {
				limit = {
					TUS = {
						OR = {
							has_government = authoritarian_democrat
							has_government = paternal_autocrat
						}
					}
				}
				TUS = {
					add_popularity = { ideology = social_conservative popularity = 0.2 }
					set_politics = {
						ruling_party = social_conservative
						elections_allowed = no
					}
				}
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1098 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		ITA = { transfer_state = 162 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1098 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		SRI = { transfer_state = 162 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1098 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		SIC = { transfer_state = 162 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1098 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		SRD = { transfer_state = 162 }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1098 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_country_flag = SIC_confed }
		}
		set_country_flag = TUS_CONQ
		ai_chance = { base = 0 }
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Central Italy
	id = annex.1099
	title = annexation_PAP_STATES_CONQ
	desc = annexation_PAP_STATES_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = PAP_STATES_CONQ
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1099 option annex.1099.a"
		name = annex.1099.a #Give to PAP allies
		trigger = {
			NOT = { tag = PAP }
			PAP = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				SIC = {
					is_ally_of_ROOT = yes
					has_country_flag = SIC_empire
				}
			}
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = PAP modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marches
					state = 161 #Romagna
				}
			}
			transfer_state_to = PAP
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1099 option annex.1099.b"
		name = annex.1099.b #Offer to PAP
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			count_triggers = {
				amount = 3
				764 = { #Viterbo
					is_owned_and_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				1005 = { #Umbria
					is_owned_and_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				157 = { #Marches
					is_owned_and_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				161 = { #Romagna
					is_owned_and_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
			}
			PAP = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_papacy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
				PAP = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = { base = 50 }
		PAP = {
			set_country_flag = offered_papacy_@ROOT
			set_country_flag = offering_papacy
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1099 option annex.1092.j"
		name = annex.1092.j #Offer to SIC
		trigger = {
			is_faction_leader = yes
			has_socialist_government = no
			count_triggers = {
				amount = 3
				764 = { #Viterbo
					is_owned_and_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				1005 = { #Umbria
					is_owned_and_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				157 = { #Marches
					is_owned_and_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
				161 = { #Romagna
					is_owned_and_controlled_by = ROOT
					is_claim_or_core_of_ROOT = no
				}
			}
			SIC = {
				exists = yes
				is_subject = no
				NOT = { is_faction_leader = yes }
				controls_all_owned_states = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
				NOT = { has_country_flag = offered_papacy_@ROOT }
			}
			NOT = {
				ITA = { is_ally_of_ROOT = yes }
				SRI = { is_ally_of_ROOT = yes }
				SRD = { is_ally_of_ROOT = yes }
				SIC = { is_ally_of_ROOT = yes }
				PAP = { is_ally_of_ROOT = yes }
			}
		}
		ai_chance = { base = 50 }
		SIC = {
			set_country_flag = offered_papacy_@ROOT
			set_country_flag = offering_papacy
			country_event = annex.281
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1099 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
					tag = PAP
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marches
					state = 161 #Romagna
				}
			}
			transfer_state_to = ITA
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1099 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
					tag = PAP
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marches
					state = 161 #Romagna
				}
			}
			transfer_state_to = SRI
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1099 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				PAP = { is_ally_of_ROOT = yes }
				SIC = { NOT = { has_country_flag = SIC_empire } }
			}
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
					tag = PAP
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marches
					state = 161 #Romagna
				}
			}
			transfer_state_to = SIC
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1099 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
					tag = PAP
				}
			}
		}
		clr_country_flag = PAP_STATES_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 764 #Viterbo
					state = 1005 #Umbria
					state = 157 #Marches
					state = 161 #Romagna
				}
			}
			transfer_state_to = SRD
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1099 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Rome
	id = annex.1100
	title = annexation_PAP_CONQ
	desc = annexation_PAP_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = PAP_CONQ
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1100 option annex.1100.a"
		name = annex.1100.a #Release as PAP
		trigger = {
			has_socialist_government = no
			NOT = { country_exists = PAP }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = PAP_CONQ

		hidden_effect = {
			PAP = {
				add_state_core = 2
				add_state_core = 764
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Latium
					state = 764 #Viterbo
					AND = {
						ROOT = { has_country_flag = SIC_confed }
						OR = {
							state = 764 #Viterbo
							state = 1005 #Umbria
							state = 157 #Marches
							state = 161 #Romagna
						}
					}
				}
			}
			transfer_state_to = PAP
		}

		reverse_add_opinion_modifier = { target = PAP modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = PAP }
		puppet_released_tag = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1100 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 200
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Latium
					state = 764 #Viterbo
				}
			}
			transfer_state_to = ITA
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1100 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Latium
					state = 764 #Viterbo
				}
			}
			transfer_state_to = SRI
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1100 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Latium
					state = 764 #Viterbo
				}
			}
			transfer_state_to = SIC
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1100 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
			modifier = {
				factor = 0
				OR = {
					tag = ITA
					tag = SRI
					tag = SIC
					tag = SRD
				}
			}
		}
		clr_country_flag = PAP_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 2 #Latium
					state = 764 #Viterbo
				}
			}
			transfer_state_to = SRD
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1100 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_country_flag = SIC_confed }
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Southern Italy
	id = annex.1101
	title = annexation_SIC_CONQ
	desc = annexation_SIC_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			set_country_flag = SIC_CONQ
		}
	}

	option = {
		log = "[GetLogInfo]: event annex.1101 option annex.1092.b"
		name = annex.1092.b #Release as SRI
		trigger = {
			has_socialist_government = yes
			NOT = { country_exists = SRI }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = SIC_CONQ
		set_temp_variable = { tag_to_release = SRI }

		# restore initial cores if they were removed
		hidden_effect = {
			157 = { remove_claim_and_add_core_of_target = yes } #Marches
			158 = { remove_claim_and_add_core_of_target = yes } #Piedmont
			161 = { remove_claim_and_add_core_of_target = yes } #Romagna
			162 = { remove_claim_and_add_core_of_target = yes } #Tuscany
			764 = { remove_claim_and_add_core_of_target = yes } #Viterbo
			838 = { remove_claim_and_add_core_of_target = yes } #Liguria
			1003 = { remove_claim_and_add_core_of_target = yes } #Aosta Valley
			1004 = { remove_claim_and_add_core_of_target = yes } #Emilia
			1005 = { remove_claim_and_add_core_of_target = yes } #Umbria
			every_state = {
				limit = {
					is_european_italy = yes
					NOT = { is_core_of = var:tag_to_release }
				}
				add_claim_by = var:tag_to_release
			}
		}
		reverse_add_opinion_modifier = { target = SRI modifier = KR_liberated_us }
		release_targeted_tag = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1101 option annex.1101.a"
		name = annex.1101.a #Release as SIC
		trigger = {
			has_socialist_government = no
			NOT = { country_exists = SIC }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		clr_country_flag = SIC_CONQ

		# restore initial cores if they were removed
		hidden_effect = {
			every_state = {
				limit = {
					OR = {
						state = 117 #Campania
						state = 742 #Abruzzo
						state = 837 #Apulia
						state = 156 #Calabria
						state = 115 #Sicily
					}
				}
				if = {
					limit = { is_claimed_by = SIC }
					remove_claim_by = SIC
				}
				if = {
					limit = { NOT = { is_core_of = SIC } }
					add_core_of = SIC
				}
			}
		}

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = SIC
		}

		reverse_add_opinion_modifier = { target = SIC modifier = KR_liberated_us }
		set_temp_variable = { tag_to_release = SIC }
		puppet_released_tag = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1101 option annex.1092.c"
		name = annex.1092.c #Give to ITA allies
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				tag = SRD
			}
		}
		clr_country_flag = SIC_CONQ

		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
			}
			transfer_state_to = ITA
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1101 option annex.1092.e"
		name = annex.1092.e #Give to SRI allies
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				tag = SRD
			}
		}
		clr_country_flag = SIC_CONQ

		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
			}
			transfer_state_to = SRI
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1101 option annex.1092.f"
		name = annex.1092.f #Give to SIC allies
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 200 }
		clr_country_flag = SIC_CONQ

		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
			}
			transfer_state_to = SIC
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1101 option annex.1092.g"
		name = annex.1092.g #Give to SRD allies
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { is_ally_of_ROOT = yes }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				SRD = { has_cosmetic_tag = SRD_ITA }
			}
		}
		clr_country_flag = SIC_CONQ

		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		every_owned_state = {
			limit = {
				OR = {
					state = 117 #Campania
					state = 742 #Abruzzo
					state = 837 #Apulia
					state = 156 #Calabria
					state = 115 #Sicily
				}
			}
			transfer_state_to = SRD
		}
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1101 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_country_flag = SIC_confed }
		}
		ai_chance = { base = 0 }
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Sardinia
	id = annex.1102
	title = annexation_SRD_CONQ
	desc = annexation_SRD_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event annex.1102 option annex.1102.a"
		name = annex.1102.a #Release as SRD
		trigger = {
			has_socialist_government = no
			NOT = { country_exists = SRD }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_italian_tag = no
				OR = {
					ITA = { is_ally_of_ROOT = yes }
					SRI = { is_ally_of_ROOT = yes }
				}
			}
		}
		# restore initial cores if they were removed
		set_temp_variable = { tag_to_release = SRD }
		hidden_effect = {
			114 = { remove_claim_and_add_core_of_target = yes } #Sardinia
			158 = { remove_claim_and_add_core_of_target = yes } #Piedmont
			838 = { remove_claim_and_add_core_of_target = yes } #Liguria
			1003 = { remove_claim_and_add_core_of_target = yes } #Aosta Valley
		}
		114 = { transfer_state_to = var:tag_to_release }
		puppet_released_tag = yes
		if = {
			limit = {
				OR = {
					owns_state = 158 #for the tooltip
					SRD = { owns_state = 158 }
				}
				NOT = { SRD = { has_cosmetic_tag = SRD_piedmont } }
			}
			SRD = { set_cosmetic_tag = SRD_piedmont }
		}
		reverse_add_opinion_modifier = { target = SRD modifier = KR_liberated_us }
		hidden_effect = { SRD = { SRD_restore_amedeo = yes } }
	}
	option = {
		log = "[GetLogInfo]: event annex.1102 option annex.1102.b"
		name = annex.1102.b #Give to ITA
		trigger = {
			NOT = { tag = ITA }
			NOT = { has_country_flag = SIC_confed }
			ITA = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOT = { is_ally_with = ITA }
			}
		}
		reverse_add_opinion_modifier = { target = ITA modifier = KR_returned_land }

		114 = { transfer_state_to = ITA }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1102 option annex.1102.c"
		name = annex.1102.c #Give to SRI
		trigger = {
			NOT = { tag = SRI }
			NOT = { has_country_flag = SIC_confed }
			SRI = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOT = { is_ally_with = SRI }
			}
		}
		reverse_add_opinion_modifier = { target = SRI modifier = KR_returned_land }

		114 = { transfer_state_to = SRI }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1102 option annex.1102.d"
		name = annex.1102.d #Give to SIC
		trigger = {
			NOT = { tag = SIC }
			NOT = { has_country_flag = SIC_confed }
			SIC = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				NOT = { is_ally_with = SIC }
			}
			modifier = {
				factor = 4
				SIC = { has_country_flag = SIC_empire }
			}
		}
		reverse_add_opinion_modifier = { target = SIC modifier = KR_returned_land }

		114 = { transfer_state_to = SIC }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1102 option annex.1102.e"
		name = annex.1102.e #Give to SRD
		trigger = {
			NOT = { tag = SRD }
			NOT = { has_country_flag = SIC_confed }
			SRD = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				NOT = { is_ally_with = SRD }
			}
		}
		reverse_add_opinion_modifier = { target = SRD modifier = KR_returned_land }

		114 = { transfer_state_to = SRD }
		recheck_annexations = yes
	}
	option = {
		log = "[GetLogInfo]: event annex.1102 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_country_flag = SIC_confed }
		}
		ai_chance = { base = 0 }
		set_country_flag = SRD_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Malta
	id = annex.1103
	title = annexation_MLT_CONQ
	desc = annexation_MLT_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					original_tag = SIC
					AND = {
						tag = GBR
						NOT = { has_country_flag = GBR_decolonize }
					}
					AND = {
						original_tag = IMP
						is_in_faction_with = ENT
						NOT = { country_exists = GBR }
					}
				}
			}
			save_event_target_as = can_annex_malta
		}
		if = {
			limit = { GBR = { ROOT_can_grant_land = yes } }
			GBR = { save_event_target_as = britain }
		}
		else_if = {
			limit = {
				IMP = {
					is_in_faction_with = ENT
					ROOT_can_grant_land = yes
				}
			}
			IMP = { save_event_target_as = britain }
		}
	}

	option = { #puppet Malta
		log = "[GetLogInfo]: event annex.1103 option annex.1103.a"
		name = annex.1103.a
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				has_event_target = can_annex_malta
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:britain
					is_ally_with = ITA
					is_ally_with = SRI
					is_ally_with = SRD
					is_ally_with = SIC
				}
			}
		}
		set_temp_variable = { tag_to_release = MLT }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Give it to the British
		log = "[GetLogInfo]: event annex.1103 option annex.1103.b"
		name = annex.1103.b
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_event_target = can_annex_malta
			}
		}
		trigger = {
			has_event_target = britain
		}
		set_temp_variable = { tag_to_release = event_target:britain }
		116 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Give it to ITA
		log = "[GetLogInfo]: event annex.1103 option annex.1103.c"
		name = annex.1103.c
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_event_target = can_annex_malta
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = ITA }
				OR = {
					is_ally_with = event_target:britain
					is_ally_with = SRI
					is_ally_with = SRD
					is_ally_with = SIC
				}
			}
		}
		trigger = {
			is_italian_unifier_tag = no
			ITA = { ROOT_can_grant_land = yes }
		}
		set_temp_variable = { tag_to_release = ITA }
		116 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Give it to SRI
		log = "[GetLogInfo]: event annex.1103 option annex.1103.d"
		name = annex.1103.d
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_event_target = can_annex_malta
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = SRI }
				OR = {
					is_ally_with = event_target:britain
					is_ally_with = ITA
					is_ally_with = SRD
					is_ally_with = SIC
				}
			}
		}
		trigger = {
			is_italian_unifier_tag = no
			SRI = { ROOT_can_grant_land = yes }
		}
		set_temp_variable = { tag_to_release = SRI }
		116 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Give it to SRD
		log = "[GetLogInfo]: event annex.1103 option annex.1103.e"
		name = annex.1103.e
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_event_target = can_annex_malta
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = SRD }
				OR = {
					is_ally_with = event_target:britain
					is_ally_with = ITA
					is_ally_with = SRI
					is_ally_with = SIC
				}
			}

		}
		trigger = {
			is_italian_unifier_tag = no
			SRD = { ROOT_can_grant_land = yes }
		}
		set_temp_variable = { tag_to_release = SRD }
		116 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Give it to SIC
		log = "[GetLogInfo]: event annex.1103 option annex.1103.f"
		name = annex.1103.f
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_event_target = can_annex_malta
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = SIC }
				OR = {
					is_ally_with = event_target:britain
					is_ally_with = ITA
					is_ally_with = SRI
					is_ally_with = SRD
				}
			}

		}
		trigger = {
			is_italian_unifier_tag = no
			SIC = { ROOT_can_grant_land = yes }
		}
		set_temp_variable = { tag_to_release = SIC }
		116 = { transfer_state_without_overriding_occupation = yes }
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1103 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_malta
		}
		116 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1103 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_malta }
		}
		ai_chance = { base = 0 }
		set_country_flag = MLT_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of the Ardennes
	id = annex.1104
	title = annexation_ARDENNES_CONQ
	desc = annexation_ARDENNES_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		741 = { clear_retain_state = yes }
	}

	option = { #Give it to Belgium/Wallonia
		log = "[GetLogInfo]: event annex.1104 option annex.1104.a"
		name = annex.1104.a
		trigger = {
			var:948.owner = {
				OR = {
					tag = BEL
					tag = WAL
				}
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				NOT = { is_ally_with = 948.owner }
			}
		}
		set_temp_variable = { tag_to_release = 948.owner }
		741 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to France
		log = "[GetLogInfo]: event annex.1104 option annex.1104.c"
		name = annex.1104.c
		trigger = {
			is_french_tag = no
			NOT = {
				tag = BEL
				tag = WAL
			}
			var:8.owner = {
				is_french_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				var:948.owner = { ROOT_can_grant_land = yes }
			}
		}
		set_temp_variable = { tag_to_release = 8.owner }
		741 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to Germany
		log = "[GetLogInfo]: event annex.1104 option annex.1104.c"
		name = annex.1104.c
		trigger = {
			is_germany_or_splinter_tag = no
			NOT = {
				tag = BEL
				tag = WAL
			}
			var:8.owner = {
				is_germany_or_splinter_tag = yes
				is_ally_with = ROOT
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				var:948.owner = { ROOT_can_grant_land = yes }
			}
			modifier = {
				factor = 0
				is_french_tag = yes
				owns_state = 948 #Liege
			}
		}
		set_temp_variable = { tag_to_release = 8.owner }
		741 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1104 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				tag = BEL
				tag = WAL
			}
		}
		ai_chance = { base = 1000 }
		add_state_core = 741
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1104 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
			OR = {
				owns_state = 8 #Luxembourg
				owns_state = 948 #Liege
			}
		}
		ai_chance = { base = 1000 }
		add_state_claim = 741
		occupy_small_country = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1104 option annex.integration"
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
			owns_state = 8 #Luxembourg
		}
		ai_chance = { base = 1000 }
		add_state_claim = 741
		occupy_small_country = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1104 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				tag = BEL
				tag = WAL
				AND = {
					is_french_tag = yes
					OR = {
						owns_state = 8 #Luxembourg
						owns_state = 948 #Liege
					}
				}
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 8 #Luxembourg
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = ARDENNES_CONQ
	}
}

country_event = { #Fate of Teschen
	id = annex.1105
	title = annexation_TESCHEN_CONQ
	desc = annexation_TESCHEN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		924 = { clear_retain_state = yes }
		if = {
			limit = { CZE = { ROOT_can_grant_land = yes } }
			CZE = { save_event_target_as = moravia }
		}
		else_if = {
			limit = {
				var:75.owner = { #Moravia
					OR = {
						original_tag = AUS
						is_germany_or_splinter_tag = yes
					}
					is_ally_with = ROOT
				}
			}
			var:75.owner = { save_event_target_as = moravia }
		}
		if = {
			limit = {
				var:88.owner = { #Krakow
					is_polish_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:88.owner = { save_event_target_as = krakow }
		}
		if = {
			limit = {
				OR = {
					original_tag = CZE
					original_tag = GAL
					original_tag = POL
					AND = {
						original_tag = AUS
						AUS_is_unified = yes
					}
					AND = {
						is_germany_or_splinter_tag = yes
						owns_state = 75 #Moravia
					}
				}
			}
			save_event_target_as = can_integrate
		}
	}

	option = { #Give it to owner of Moravia
		log = "[GetLogInfo]: event annex.1105 option annex.1105.a"
		name = annex.1105.a
		trigger = {
			has_event_target = moravia
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = event_target:krakow
				NOT = { is_ally_with = event_target:moravia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:moravia }
		if = {
			limit = { var:tag_to_release = { is_germany_or_splinter_tag = yes } }
			924 = { transfer_state_and_add_claim = yes }
		}
		else = {
			924 = { transfer_state_and_add_core = yes }
		}
	}

	option = { #Give it to owner of Krakow
		log = "[GetLogInfo]: event annex.1105 option annex.1105.b"
		name = annex.1105.b
		trigger = {
			has_event_target = krakow
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = event_target:moravia
				NOT = { is_ally_with = event_target:krakow }
			}
		}
		set_temp_variable = { tag_to_release = event_target:krakow }
		if = {
			limit = { var:tag_to_release = { original_tag = GAL } }
			924 = { transfer_state_and_add_core = yes }
		}
		else = {
			924 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1105 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_integrate
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { original_tag = POL }
			924 = { add_claim_of_ROOT = yes }
		}
		else_if = {
			limit = { is_germany_or_splinter_tag = yes }
			924 = { add_claim_of_ROOT = yes }
		}
		else = {
			924 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1105 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = TESCHEN_CONQ
	}
}

country_event = { #Fate of the Danubian Plain
	id = annex.1106
	title = annexation_DANUBIAN_PLAIN_CONQ
	desc = annexation_DANUBIAN_PLAIN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		71 = { clear_retain_state = yes }
	}

	option = { #Give it to Hungary
		log = "[GetLogInfo]: event annex.1106 option annex.1106.a"
		name = annex.1106.a
		trigger = {
			NOT = {
				original_tag = HUN
				original_tag = CZE
				original_tag = SLO
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
			HUN = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				OR = {
					SLO = { is_ally_of_ROOT = yes }
					CZE = {
						owns_state = 70 #Slovakia
						has_cosmetic_tag = CZE_czechoslavakia
					}
				}
				NOT = { HUN = { is_ally_of_ROOT = yes } }
			}
		}
		set_temp_variable = { tag_to_release = HUN }
		71 = { transfer_state_and_add_claim = yes }
	}

	option = { #Give it to Slovakia
		log = "[GetLogInfo]: event annex.1106 option annex.1106.b"
		name = annex.1106.b
		trigger = {
			NOT = {
				original_tag = HUN
				original_tag = CZE
				original_tag = SLO
				AND = {
					tag = AUS
					AUS_is_unified = yes
				}
			}
			SLO = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				HUN = { is_ally_of_ROOT = yes }
				NOT = { SLO = { is_ally_of_ROOT = yes } }
			}
		}
		set_temp_variable = { tag_to_release = SLO }
		71 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Czechoslovakia
		log = "[GetLogInfo]: event annex.1106 option annex.1106.c"
		name = annex.1106.c
		trigger = {
			NOT = {
				original_tag = HUN
				original_tag = CZE
				original_tag = SLO
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
			CZE = {
				owns_state = 70 #Slovakia
				is_ally_with = ROOT
			}
		}
		ai_chance = { base = 30 }
		set_temp_variable = { tag_to_release = CZE }
		71 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Austria
		log = "[GetLogInfo]: event annex.1106 option annex.1106.d"
		name = annex.1106.d
		trigger = {
			NOT = {
				original_tag = HUN
				original_tag = CZE
				original_tag = SLO
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
			AUS = {
				AUS_is_unified = yes
				owns_state = 70 #Slovakia
				is_ally_with = ROOT
			}
		}
		ai_chance = { base = 1000 }
		set_temp_variable = { tag_to_release = AUS }
		71 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1106 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = HUN
				original_tag = CZE
				original_tag = SLO
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { original_tag = HUN }
			71 = { add_claim_of_ROOT = yes }
		}
		else = {
			71 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1106 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = HUN
				original_tag = CZE
				original_tag = SLO
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = DANUBIAN_PLAIN_CONQ
	}
}

country_event = { #Fate of Volkovysk
	id = annex.1107
	title = annexation_VOLKOVYSK_CONQ
	desc = annexation_VOLKOVYSK_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		94 = { clear_retain_state = yes }
	}

	option = { #give to Belarus/Russia
		log = "[GetLogInfo]: event annex.1107 option annex.1107.a"
		name = annex.1107.a
		trigger = {
			var:204.owner = {
				OR = {
					AND = {
						tag = WHR
						ROOT_can_grant_land = yes
					}
					AND = {
						is_russian_tag = yes
						is_ally_of_ROOT = yes
					}
				}
			}
			if = {
				limit = { tag = LIT }
				NOT = { owns_state = 96 } #Vilnius
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				POL = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = 204.owner }
			}
			modifier = {
				factor = 0
				tag = POL
				owns_state = 97 #Bialystok
			}
		}
		set_temp_variable = { tag_to_release = 204.owner }
		if = {
			limit = {
				var:204.owner = { is_russian_tag = yes }
				204 = { is_core_of = owner }
			}
			94 = { transfer_state_and_add_core = yes }
		}
		else = {
			94 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #give to Poland
		log = "[GetLogInfo]: event annex.1107 option annex.1107.b"
		name = annex.1107.b
		trigger = {
			NOT = { tag = WHR }
			POL = {
				owns_state = 97 #Bialystok
				ROOT_can_grant_land = yes
			}
			if = {
				limit = { tag = LIT }
				NOT = { owns_state = 96 } #Vilnius
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 4
				POL = { owns_state = 96 } #Vilnius
			}
			modifier = {
				factor = 0
				WHR = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		94 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to Lithuania
		log = "[GetLogInfo]: event annex.1107 option annex.1107.c"
		name = annex.1107.c
		trigger = {
			NOT = { tag = WHR }
			LIT = {
				owns_state = 96 #Vilnius
				owns_state = 97 #Bialystok
				ROOT_can_grant_land = yes
			}
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				WHR = { is_ally_of_ROOT = yes }
				NOT = { is_ally_with = LIT }
			}
			modifier = {
				factor = 0
				tag = POL
				owns_state = 97 #Bialystok
			}
		}
		set_temp_variable = { tag_to_release = LIT }
		94 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1107 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				tag = WHR
				AND = {
					is_russian_tag = yes
					owns_state = 204 #Novogrudok
					owns_state = 206 #Minsk
				}
				AND = {
					tag = POL
					owns_state = 97 #Bialystok
				}
				AND = {
					tag = LIT
					owns_state = 96 #Vilnius
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				tag = POL
				NOT = { owns_state = 96 } #Vilnius
				var:204.owner = {
					OR = {
						tag = WHR
						is_russian_tag = yes
					}
					ROOT_can_grant_land = yes
				}
			}
		}
		add_state_claim = 94
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1107 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				tag = WHR
				AND = {
					is_russian_tag = yes
					owns_state = 204 #Novogrudok
					owns_state = 206 #Minsk
				}
				AND = {
					tag = POL
					owns_state = 97 #Bialystok
				}
				AND = {
					tag = LIT
					owns_state = 96 #Vilnius
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = VOLKOVYSK_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Gomel
	id = annex.1108
	title = annexation_GOMEL_CONQ
	desc = annexation_GOMEL_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		241 = { clear_retain_state = yes }
		random_other_country = {
			limit = {
				is_russian_tag = yes
				ROOT_can_grant_land = yes
				241 = { any_neighbor_state = { is_owned_by = PREV.PREV } }
			}
			save_event_target_as = russia
		}
		if = {
			limit = {
				OR = {
					original_tag = UKR
					original_tag = WHR
					is_LITBEL = yes
					AND = {
						is_russian_tag = yes
						241 = { any_neighbor_state = { is_owned_by = PREV.PREV } }
					}
				}
			}
			save_event_target_as = can_annex_gomel
		}
	}

	option = { #give to UKR
		log = "[GetLogInfo]: event annex.1108 option annex.1108.a"
		name = annex.1108.a
		trigger = {
			UKR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				has_event_target = can_annex_gomel
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = WHR
					is_ally_with = event_target:russia
				}
				NOT = { is_ally_with = UKR }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		241 = { transfer_state_and_add_core = yes }
	}

	option = { #give to WHR
		log = "[GetLogInfo]: event annex.1108 option annex.1108.b"
		name = annex.1108.b
		trigger = {
			WHR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				has_event_target = can_annex_gomel
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = UKR
					is_ally_with = event_target:russia
				}
				NOT = { is_ally_with = WHR }
			}
		}
		set_temp_variable = { tag_to_release = WHR }
		241 = { transfer_state_and_add_claim = yes }
	}

	option = { #give to Russia
		log = "[GetLogInfo]: event annex.1108 option annex.1108.c"
		name = annex.1108.c
		trigger = {
			has_event_target = russia
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				has_event_target = can_annex_gomel
			}
			modifier = {
				factor = 0
				OR = {
					is_ally_with = UKR
					is_ally_with = WHR
				}
				NOT = { is_ally_with = event_target:russia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:russia }
		241 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1108 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_annex_gomel
		}
		241 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1108 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_gomel }
		}
		ai_chance = { base = 0 }
		set_country_flag = GOMEL_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Gorizia
	id = annex.1109
	title = annexation_GORIZIA_CONQ
	desc = annexation_GORIZIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		683 = { clear_retain_state = yes }
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					original_tag = VNC
					original_tag = AUS
					original_tag = SLV
					original_tag = SER
				}
			}
			save_event_target_as = can_integrate
		}
		if = {
			limit = {
				var:488.owner = { #Trieste
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:488.owner = { save_event_target_as = italy }
		}
		if = {
			limit = {
				var:102.owner = { #Carniola
					OR = {
						original_tag = AUS
						original_tag = SLV
						original_tag = CRO
						original_tag = SER
					}
					ROOT_can_grant_land = yes
				}
			}
			var:102.owner = { save_event_target_as = slovenia }
		}
	}

	option = { #Give Italy
		log = "[GetLogInfo]: event annex.1109 option annex.1109.a"
		name = annex.1109.a
		trigger = {
			has_event_target = italy
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy }
				is_ally_with = event_target:slovenia
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy }
		683 = { transfer_state_and_add_claim = yes }
		var:tag_to_release = { country_event = annex.18 }
	}

	option = { #Give AUS/SLV/SER
		log = "[GetLogInfo]: event annex.1109 option annex.1109.b"
		name = annex.1109.b
		trigger = {
			has_event_target = slovenia
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:slovenia }
				is_ally_with = event_target:italy
			}
		}
		set_temp_variable = { tag_to_release = event_target:slovenia }
		if = {
			limit = { var:tag_to_release = { original_tag = SER } }
			683 = { transfer_state_and_add_claim = yes }
		}
		else = {
			683 = { transfer_state_and_add_core = yes }
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1109 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				has_event_target = can_integrate
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
					owns_state = 102 #Carniola
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = {
				OR = {
					original_tag = AUS
					original_tag = SLV
				}
			}
			683 = { remove_claim_and_add_core_of_ROOT = yes }
		}
		else = {
			if = {
				limit = { has_country_flag = SIC_confed }
				set_temp_variable = { tag_to_release = 488.owner }
				683 = { add_claim_of_target_and_transfer_if_owned = yes }
			}
			else = {
				683 = { add_claim_of_ROOT = yes }
			}
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1109 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				has_event_target = can_integrate
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
					owns_state = 102 #Carniola
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = GORIZIA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Fiume
	id = annex.1110
	title = annexation_FIUME_CONQ
	desc = annexation_FIUME_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					is_italian_unifier_tag = yes
					original_tag = VNC
					original_tag = AUS
					original_tag = CRO
					original_tag = SER
					original_tag = HUN
				}
			}
			save_event_target_as = can_integrate
		}
		if = {
			limit = {
				var:736.owner = { #Istria
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:736.owner = { save_event_target_as = italy }
		}
		if = {
			limit = {
				AUS = {
					ROOT_can_grant_land = yes
					OR = {
						owns_state = 102 #Carniola
						owns_state = 736 #Istria
					}
				}
			}
			AUS = { save_event_target_as = austria }
		}
		if = {
			limit = {
				var:109.owner = { #Central Croatia
					OR = {
						original_tag = SER
						original_tag = CRO
						original_tag = HUN
					}
					ROOT_can_grant_land = yes
				}
			}
			var:109.owner = { save_event_target_as = croatia }
		}
	}

	option = { #Give Italy
		log = "[GetLogInfo]: event annex.1110 option annex.1110.a"
		name = annex.1110.a
		trigger = {
			has_event_target = italy
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:italy }
				OR = {
					is_ally_with = event_target:austria
					is_ally_with = event_target:croatia
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy }
		103 = { transfer_state_and_add_claim = yes }
		var:tag_to_release = { country_event = annex.18 }
	}

	option = { #Give to Austria
		log = "[GetLogInfo]: event annex.1110 option annex.1110.b"
		name = annex.1110.b
		trigger = {
			has_event_target = austria
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:austria }
				OR = {
					is_ally_with = event_target:italy
					is_ally_with = event_target:croatia
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		103 = { transfer_state_and_add_core = yes }
	}

	option = { #Give to SER/CRO/HUN
		log = "[GetLogInfo]: event annex.1110 option annex.1110.c"
		name = annex.1110.c
		trigger = {
			has_event_target = croatia
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:croatia }
				OR = {
					is_ally_with = event_target:italy
					is_ally_with = event_target:austria
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		if = {
			limit = { event_target:croatia = { original_tag = CRO } }
			103 = { transfer_state_and_add_core = yes }
		}
		else = {
			103 = { transfer_state_and_add_claim = yes }
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1110 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				has_event_target = can_integrate
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
					OR = {
						owns_state = 102 #Carniola
						owns_state = 736 #Istria
					}
				}
			}
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		if = {
			limit = {
				OR = {
					original_tag = AUS
					original_tag = CRO
				}
			}
			103 = { remove_claim_and_add_core_of_ROOT = yes }
		}
		else_if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 736.owner }
			103 = { add_claim_of_target_and_transfer_if_owned = yes }
		}
		else = {
			103 = { add_claim_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1110 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				has_event_target = can_integrate
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
					OR = {
						owns_state = 102 #Carniola
						owns_state = 736 #Istria
					}
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = FIUME_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Pressburg
	id = annex.1111
	title = annexation_PRESSBURG_CONQ
	desc = annexation_PRESSBURG_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		1090 = { clear_retain_state = yes }
		if = {
			limit = {
				OR = {
					original_tag = SLO
					original_tag = AUS
					AND = {
						original_tag = CZE
						owns_state = 70 #Slovakia
					}
					AND = {
						original_tag = HUN
						OR = {
							owns_state = 70 #Slovakia
							owns_state = 71 #Danubian Plain
							owns_state = 784 #Burgenland
						}
					}
				}
			}
			save_event_target_as = can_annex_pressburg
		}
		if = {
			limit = {
				var:70.owner = { #Slovakia
					OR = {
						original_tag = SLO
						original_tag = CZE
						original_tag = HUN
					}
					ROOT_can_grant_land = yes
				}
			}
			var:70.owner = { save_event_target_as = slovakia }
		}
		if = {
			limit = {
				var:4.owner = { #Lower Austria
					OR = {
						original_tag = AUS
						is_germany_or_splinter_tag = yes
					}
					ROOT_can_grant_land = yes
				}
			}
			var:4.owner = { save_event_target_as = austria }
		}
	}

	option = { #Give it to owner of Slovakia
		log = "[GetLogInfo]: event annex.1111 option annex.1111.a"
		name = annex.1111.a
		trigger = {
			has_event_target = slovakia
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				is_ally_with = event_target:austria
				NOT = { is_ally_with = event_target:slovakia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:slovakia }
		if = {
			limit = { var:tag_to_release = { original_tag = HUN } }
			71 = { add_claim_of_target_and_transfer_if_owned = yes }
			1090 = { transfer_state_and_add_claim = yes }
		}
		else = {
			1090 = { transfer_state_and_add_core = yes }
		}
	}

	option = { #Give it to Austria
		log = "[GetLogInfo]: event annex.1111 option annex.1111.b"
		name = annex.1111.b
		trigger = {
			has_event_target = austria
			NOT = { has_event_target = can_integrate }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_ally_with = event_target:slovakia
				NOT = { is_ally_with = event_target:austria }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		if = {
			limit = { var:tag_to_release = { original_tag = AUS } }
			1090 = { transfer_state_and_add_core = yes }
		}
		else = {
			1090 = {
				hidden_effect = { add_core_of = AUS }
				transfer_state_and_add_claim = yes
			}
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1111 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				has_event_target = can_annex_pressburg
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { original_tag = HUN }
			1090 = { add_claim_of_ROOT = yes }
		}
		else_if = {
			limit = { is_germany_or_splinter_tag = yes }
			1090 = {
				add_claim_of_ROOT = yes
				enable_state_integration_50_compliance = yes
			}
		}
		else = {
			1090 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1111 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				has_event_target = can_annex_pressburg
				AND = {
					is_germany_or_splinter_tag = yes
					owns_state = 4 #Vienna
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = PRESSBURG_CONQ
	}
}

country_event = { #Fate of Roussillon
	id = annex.1112
	title = annexation_ROUSSILLON_CONQ
	desc = annexation_ROUSSILLON_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		817 = { clear_retain_state = yes }
		hidden_effect = {
			if = {
				limit = {
					var:22.owner = {
						is_french_tag = yes
						ROOT_can_grant_land = yes
					}
				}
				var:22.owner = { save_event_target_as = france }
			}
			else_if = {
				limit = {
					var:984.owner = {
						is_french_tag = yes
						ROOT_can_grant_land = yes
					}
				}
				var:984.owner = { save_event_target_as = france }
			}
			if = {
				limit = {
					var:165.owner = {
						OR = {
							original_tag = SPA
							original_tag = CAT
						}
						ROOT_can_grant_land = yes
					}
				}
				var:165.owner = { save_event_target_as = spain }
			}
		}
	}

	option = { #Give it to France
		log = "[GetLogInfo]: event annex.1112 option annex.1112.a"
		name = annex.1112.a
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = event_target:spain
				NOT = { is_ally_with = event_target:france }
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		817 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Catalonia/Spain
		log = "[GetLogInfo]: event annex.1112 option annex.1112.b"
		name = annex.1112.b
		trigger = {
			has_event_target = spain
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = no
				is_ally_with = event_target:france
				NOT = { is_ally_with = event_target:spain }
			}
			modifier = {
				factor = 4
				event_target:spain = { original_tag = CAT }
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain }
		if = {
			limit = {
				var:165.owner = { original_tag = SPA }
			}
			817 = { transfer_state_and_add_claim = yes }

		}
		else = {
			817 = { transfer_state_and_add_core = yes }
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1112 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = CAT
				original_tag = SPA
				is_french_tag = yes
			}
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { original_tag = SPA }
			817 = { add_claim_of_ROOT = yes }
		}
		else = {
			817 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1112 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = CAT
				original_tag = SPA
				is_french_tag = yes
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = ROUSSILLON_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Chelm
	id = annex.1113
	title = annexation_CHELM_CONQ
	desc = annexation_CHELM_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		1088 = { clear_retain_state = yes }
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1113 option annex.1113.a"
		name = annex.1113.a
		trigger = {
			POL = { ROOT_can_grant_land = yes }
			NOT = { original_tag = UKR }
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				is_ally_with = UKR
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = POL }
		1088 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Ukraine
		log = "[GetLogInfo]: event annex.1113 option annex.1113.b"
		name = annex.1113.b
		trigger = {
			UKR = { ROOT_can_grant_land = yes }
			NOT = { original_tag = POL }
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = UKR
				NOT = { is_ally_with = POL }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		1088 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1113 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = POL
				original_tag = UKR
			}
		}
		ai_chance = { base = 1000 }
		1088 = { remove_claim_and_add_core_of_ROOT = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1113 option annex.integration"
		name = annex.integration
		trigger = {
			is_russian_tag = yes
			owns_state = 792 #Volhynia
		}
		ai_chance = {
			base = 1000
			modifier = {
				factor = 0
				OR = {
					POL = {
						owns_state = 91 #Lwow
						ROOT_can_grant_land = yes
					}
					UKR = {
						owns_state = 91 #Lwow
						ROOT_can_grant_land = yes
					}
				}
			}
		}
		1088 = { add_claim_of_ROOT = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1113 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = POL
				original_tag = UKR
				AND = {
					is_russian_tag = yes
					owns_state = 792 #Volhynia
				}
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = CHELM_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Labourd
	id = annex.1114
	title = annexation_LABOURD_CONQ
	desc = annexation_LABOURD_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		817 = { clear_retain_state = yes }
		hidden_effect = {
			if = {
				limit = {
					var:19.owner = {
						is_french_tag = yes
						ROOT_can_grant_land = yes
					}
				}
				var:19.owner = { save_event_target_as = france }
			}
			else_if = {
				limit = {
					var:984.owner = {
						is_french_tag = yes
						ROOT_can_grant_land = yes
					}
				}
				var:984.owner = { save_event_target_as = france }
			}
			if = {
				limit = {
					var:1070.owner = {
						OR = {
							original_tag = SPA
							original_tag = BAS
						}
						ROOT_can_grant_land = yes
					}
				}
				var:1070.owner = { save_event_target_as = spain }
			}
			else_if = {
				limit = {
					var:172.owner = {
						OR = {
							original_tag = SPA
							original_tag = BAS
						}
						ROOT_can_grant_land = yes
					}
				}
				var:172.owner = { save_event_target_as = spain }
			}
		}
	}

	option = { #Give it to France
		log = "[GetLogInfo]: event annex.1114 option annex.1114.a"
		name = annex.1114.a
		trigger = {
			has_event_target = france
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:spain
				NOT = { is_ally_with = event_target:france }
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		779 = { transfer_state_and_add_core = yes }
	}

	option = { #Give it to Basque/Spain
		log = "[GetLogInfo]: event annex.1114 option annex.1114.b"
		name = annex.1114.b
		trigger = {
			has_event_target = spain
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = no
				is_ally_with = event_target:france
				NOT = { is_ally_with = event_target:spain }
			}
			modifier = {
				factor = 4
				event_target:spain = { original_tag = BAS }
			}
		}
		set_temp_variable = { tag_to_release = event_target:spain }
		if = {
			limit = {
				OR = {
					var:1070.owner = { original_tag = SPA }
					var:172.owner = { original_tag = SPA }
				}
			}
			779 = { transfer_state_and_add_claim = yes }
		}
		else = {
			779 = { transfer_state_and_add_core = yes }
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1114 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = BAS
				original_tag = SPA
				is_french_tag = yes
			}
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { original_tag = SPA }
			779 = { add_claim_of_ROOT = yes }
		}
		else = {
			779 = { remove_claim_and_add_core_of_ROOT = yes }
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1114 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = CAT
				original_tag = SPA
				is_french_tag = yes
			}
		}
		ai_chance = { base = 0 }
		set_country_flag = LABOURD_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Saxony
	id = annex.1115
	title = annexation_SAXONY_CONQ
	desc = annexation_SAXONY_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				var:59.owner = { #Hanover
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:59.owner = { save_event_target_as = german_hanover }
		}
		if = {
			limit = {
				var:64.owner = { #Brandenburg
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_hanover }
				}
			}
			var:64.owner = { save_event_target_as = german_brandenburg }
		}
	}

	option = { #Give to German tag 1 (owner of Hanover)
		log = "[GetLogInfo]: event annex.1115 option annex.1115.a"
		name = annex.1115.a
		trigger = {
			is_germany_or_splinter_tag = no
			has_event_target = german_hanover
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_ally_with = event_target:german_brandenburg
				NOT = { is_ally_with = event_target:german_hanover }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_hanover }
		every_state = {
			limit = { is_saxony = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_saxony = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Give to German tag 2 (owner of Brandenburg)
		log = "[GetLogInfo]: event annex.1115 option annex.1115.b"
		name = annex.1115.b
		trigger = {
			is_germany_or_splinter_tag = no
			has_event_target = german_brandenburg
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				is_ally_with = event_target:german_hanover
				NOT = { is_ally_with = event_target:german_brandenburg }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_brandenburg }
		every_state = {
			limit = { is_saxony = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_saxony = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1115 option annex.integration"
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = { base = 100 }
		every_state = {
			limit = {
				is_saxony = yes
				NOT = { is_core_of = ROOT }
			}
			add_claim_of_ROOT = yes
		}
	}

	option = { #give to GEX
		log = "[GetLogInfo]: event annex.1115 option annex.europe.give_to_gex"
		name = annex.europe.give_to_gex
		trigger = {
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = yes }
		}
		every_state = {
			limit = {
				is_saxony = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = GEX
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1115 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		set_country_flag = SAXONY_CONQ
		occupy_large_country = yes
	}
}

country_event = { #Fate of Schleswig-Holstein
	id = annex.1116
	title = annexation_HOLSTEIN_CONQ
	desc = annexation_HOLSTEIN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				var:59.owner = { #Hanover
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:59.owner = { save_event_target_as = german_hanover }
		}
		if = {
			limit = {
				var:61.owner = { #Mecklenburg
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_hanover }
				}
			}
			var:61.owner = { save_event_target_as = german_mecklenburg }
		}
	}

	option = { #Give to German tag 1 (owner of Hanover)
		log = "[GetLogInfo]: event annex.1116 option annex.1116.a"
		name = annex.1116.a
		trigger = {
			is_germany_or_splinter_tag = no
			has_event_target = german_hanover
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 65
			modifier = {
				factor = 0
				is_ally_with = event_target:german_mecklenburg
				NOT = { is_ally_with = event_target:german_hanover }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_hanover }
		58 = { transfer_state_and_add_core = yes }
	}

	option = { #Give to German tag 2 (owner of Mecklenburg)
		log = "[GetLogInfo]: event annex.1116 option annex.1116.b"
		name = annex.1116.b
		trigger = {
			is_germany_or_splinter_tag = no
			has_event_target = german_mecklenburg
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 35
			modifier = {
				factor = 0
				is_ally_with = event_target:german_hanover
				NOT = { is_ally_with = event_target:german_mecklenburg }
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_mecklenburg }
		58 = { transfer_state_and_add_core = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1116 option annex.integration"
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = { base = 100 }
		58 = { add_claim_of_ROOT = yes }
	}

	option = { #give to GEX
		log = "[GetLogInfo]: event annex.1116 option annex.europe.give_to_gex"
		name = annex.europe.give_to_gex
		trigger = {
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = yes }
		}
		ai_chance = { base = 200 }
		set_temp_variable = { tag_to_release = GEX }
		58 = { transfer_state_and_add_claim = yes }
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1116 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		set_country_flag = HOLSTEIN_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of East Oder
	id = annex.1117
	title = annexation_EAST_ODER_CONQ
	desc = annexation_EAST_ODER_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		hidden_effect = {
			if = {
				limit = { NOT = { country_exists = PRE } }
				add_to_temp_array = { core_removal_array = PRE }
				remove_all_cores_and_claims_of_tags = yes
				PRE = {
					drop_cosmetic_tag = yes
					if = {
						limit = { has_character = RUS_boris_romanov }
						RUS_boris_romanov = {
							set_character_name = RUS_boris_romanov
							remove_all_country_leader_roles = yes
							set_nationality = RUS
						}
					}
				}
			}
		}
		if = {
			limit = {
				var:64.owner = { #Brandenburg
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:64.owner = { save_event_target_as = german_brandenburg }
		}
		if = {
			limit = {
				var:62.owner = { #Farther Pomerania
					is_germany_or_splinter_tag = yes
					ROOT_can_grant_land = yes
					NOT = { tag = event_target:german_brandenburg }
				}
			}
			var:62.owner = { save_event_target_as = german_pomerania }
		}
	}

	option = { #puppet PRE
		log = "[GetLogInfo]: event annex.1117 option annex.1117.a"
		name = annex.1117.a
		trigger = {
			NOT = { country_exists = PRE }
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				RUS_can_crown_boris_in_germany = yes
			}
			modifier = {
				factor = 0
				OR = {
					has_event_target = german_brandenburg
					has_event_target = german_pomerania
				}
				AI_trigger_country_wants_to_dismantle_germany = no
			}
			modifier = {
				factor = 4
				AI_trigger_country_wants_to_dismantle_germany = yes
			}
		}
		set_temp_variable = { tag_to_release = PRE }
		every_state = {
			limit = { is_east_oder = yes }
			add_core_of = var:tag_to_release
		}
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Give to German tag 1 (owner of Brandenburg)
		log = "[GetLogInfo]: event annex.1117 option annex.1117.b"
		name = annex.1117.b
		trigger = {
			has_event_target = german_brandenburg
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:german_pomerania
					AND = {
						is_major = yes
						NOT = { country_exists = PRE }
					}
				}
				NOT = { is_ally_with = event_target:german_brandenburg }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_brandenburg }
		every_state = {
			limit = { is_east_oder = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_east_oder = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Give to German tag 2 (owner of Hither Pomerania)
		log = "[GetLogInfo]: event annex.1117 option annex.1117.c"
		name = annex.1117.c
		trigger = {
			has_event_target = german_pomerania
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					is_ally_with = event_target:german_brandenburg
					AND = {
						is_major = yes
						NOT = { country_exists = PRE }
					}
				}
				NOT = { is_ally_with = event_target:german_pomerania }
				AI_trigger_country_wants_to_dismantle_germany = no
			}
		}
		set_temp_variable = { tag_to_release = event_target:german_pomerania }
		every_state = {
			limit = { is_east_oder = yes }
			add_core_of = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				is_east_oder = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Give to Poland
		log = "[GetLogInfo]: event annex.1117 option annex.1117.e"
		name = annex.1117.e
		trigger = {
			POL = { is_ally_of_ROOT = yes }
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		set_temp_variable = { tag_to_release = POL }
		every_state = {
			limit = {
				OR = {
					is_east_oder = yes
					state = 86 #Posen
					state = 67 #Upper Silesia
				}
			}
			add_claim_by = var:tag_to_release
		}
		every_owned_state = {
			limit = {
				OR = {
					is_east_oder = yes
					state = 86 #Posen
					state = 67 #Upper Silesia
				}
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = var:tag_to_release
		}
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1117 option annex.integration"
		name = annex.integration
		trigger = {
			is_germany_or_splinter_tag = yes
		}
		ai_chance = { base = 100 }
		every_state = {
			limit = {
				is_east_oder = yes
				NOT = { is_core_of = ROOT }
			}
			add_claim_of_ROOT = yes
		}
	}

	option = { #give to GEX
		log = "[GetLogInfo]: event annex.1117 option annex.europe.give_to_gex"
		name = annex.europe.give_to_gex
		trigger = {
			GEX = { is_ally_of_ROOT = yes }
		}
		every_state = {
			limit = {
				is_east_oder = yes
				is_claim_or_core_of_ROOT = no
			}
			transfer_state_to = GEX
		}
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1117 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_germany_or_splinter_tag = no
			GEX = { is_ally_of_ROOT = no }
		}
		ai_chance = { base = 0 }
		set_country_flag = EAST_ODER_CONQ
		occupy_medium_country = yes
	}
}

country_event = { #Fate of Kuban
	id = annex.1118
	title = annexation_KUBAN_CONQ
	desc = annexation_KUBAN_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = UKR
					is_russian_tag = yes
				}
			}
			save_event_target_as = can_annex_kuban
		}
		if = {
			limit = {
				var:235.owner = { #Stavropol
					is_russian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:235.owner = { save_event_target_as = russia }
		}
	}

	option = { #give to RUS
		log = "[GetLogInfo]: event annex.1118 option annex.1118.a"
		name = annex.1118.a
		trigger = {
			NOT = { has_event_target = can_annex_kuban }
			has_event_target = russia
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = UKR
				NOT = { is_ally_with = event_target:russia }
			}
			modifier = {
				factor = 0
				OR = {
					original_tag = TUR
					is_germany_or_splinter_tag = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:russia }
		218 = { add_core_of_target_and_transfer_if_owned = yes } #Rostov
		234 = { add_core_of_target_and_transfer_if_owned = yes } #Ekaterinodar
		1006 = { add_core_of_target_and_transfer_if_owned = yes } #Novorossiysk
	}

	option = { #give to UKR
		log = "[GetLogInfo]: event annex.1118 option annex.1118.b"
		name = annex.1118.b
		trigger = {
			NOT = { has_event_target = can_annex_kuban }
			UKR = { ROOT_can_grant_land = yes }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_ally_with = event_target:russia
				NOT = { is_ally_with = UKR }
			}
		}
		set_temp_variable = { tag_to_release = UKR }
		218 = { add_claim_of_target_and_transfer_if_owned = yes } #Rostov
		234 = { add_claim_of_target_and_transfer_if_owned = yes } #Ekaterinodar
		1006 = { add_claim_of_target_and_transfer_if_owned = yes } #Novorossiysk
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1118 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = UKR
		}
		add_state_claim = 218 #Rostov
		add_state_claim = 234 #Ekaterinodar
		add_state_claim = 1006 #Novorossiysk
		recheck_annexations = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1118 option annex.integration"
		name = annex.integration
		trigger = {
			is_russian_tag = yes
		}
		add_state_core = 218 #Rostov
		add_state_core = 234 #Ekaterinodar
		add_state_core = 1006 #Novorossiysk
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1118 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_kuban }
		}
		ai_chance = { base = 0 }
		set_country_flag = KUBAN_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of the North Caucasus
	id = annex.1119
	title = annexation_MNR_CONQ
	desc = annexation_MNR_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				var:235.owner = { #Stavropol
					is_russian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:235.owner = { save_event_target_as = russia }
		}
	}

	option = { #puppet MNR
		log = "[GetLogInfo]: event annex.1119 option annex.1119.a"
		name = annex.1119.a
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					original_tag = AZR
					original_tag = TUR
					is_german_tag = yes
				}
			}
		}
		set_temp_variable = { tag_to_release = MNR }
		release_targeted_tag = yes
		recheck_annexations = yes
	}

	option = { #Give to RUS
		log = "[GetLogInfo]: event annex.1119 option annex.1119.b"
		name = annex.1119.b
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					original_tag = AZR
					original_tag = TUR
					is_german_tag = yes
				}
			}
		}
		trigger = {
			has_event_target = russia
		}
		set_temp_variable = { tag_to_release = event_target:russia }
		MNR = { set_transfer_target_cores = yes }
		transfer_targeted_territory_and_add_cores = yes
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1119 option annex.integration"
		name = annex.integration
		trigger = {
			is_russian_tag = yes
		}
		MNR = { every_core_state = { add_core_of = ROOT } }
		recheck_annexations = yes
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1119 option annex.occupation"
		name = annex.occupation
		ai_chance = { base = 0 }
		set_country_flag = MNR_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Southern Lithuania
	id = annex.1120
	title = annexation_SOUTHERN_LITHUANIA_CONQ
	desc = annexation_SOUTHERN_LITHUANIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = POL
					original_tag = WHR
					original_tag = LIT
					AND = {
						original_tag = BAT
						11 = { is_claim_or_core_of_PREV = yes } #Kaunas
					}
				}
			}
			save_event_target_as = can_annex_southern_lithuania
		}
		if = {
			limit = { POL = { ROOT_can_grant_land = yes } }
			POL = { save_event_target_as = poland }
		}
		if = {
			limit = { LIT = { ROOT_can_grant_land = yes } }
			LIT = { save_event_target_as = lithuania }
		}
		else_if = {
			limit = {
				BAT = {
					is_ally_with = ROOT
					11 = { is_claim_or_core_of_PREV = yes } #Kaunas
				}
			}
			BAT = { save_event_target_as = lithuania }
		}
		if = {
			limit = {
				var:204.owner = { #Braslav
					OR = {
						AND = {
							tag = WHR
							ROOT_can_grant_land = yes
						}
						AND = {
							is_russian_tag = yes
							is_ally_with = ROOT
						}
					}
				}
			}
			var:204.owner = { save_event_target_as = belarus }
		}
	}

	option = { #Give it to Poland
		log = "[GetLogInfo]: event annex.1120 option annex.1120.a"
		name = annex.1120.a
		trigger = {
			has_event_target = poland
			NOT = { has_event_target = can_annex_southern_lithuania }
		}
		ai_chance = { base = 20 }
		set_temp_variable = { tag_to_release = event_target:poland }
		94 = { transfer_state_and_add_claim = yes } #Volkovysk
		96 = { transfer_state_and_add_claim = yes } #Vilnius
		97 = { transfer_state_and_add_claim = yes } #Bialystok
	}

	option = { #Give it to Belarus
		log = "[GetLogInfo]: event annex.1120 option annex.1120.b"
		name = annex.1120.b
		trigger = {
			has_event_target = belarus
			NOT = { has_event_target = can_annex_southern_lithuania }
		}
		ai_chance = { base = 20 }
		set_temp_variable = { tag_to_release = event_target:belarus }
		94 = { add_claim_of_target_and_transfer_if_owned = yes } #Volkovysk
		96 = { add_claim_of_target_and_transfer_if_owned = yes } #Vilnius
		97 = { transfer_state_and_add_claim = yes } #Bialystok
	}

	option = { #Give it to Lithuania
		log = "[GetLogInfo]: event annex.1120 option annex.1120.c"
		name = annex.1120.c
		trigger = {
			has_event_target = lithuania
			NOT = { has_event_target = can_annex_southern_lithuania }
		}
		ai_chance = { base = 20 }
		set_temp_variable = { tag_to_release = event_target:lithuania }
		if = {
			limit = { var:tag_to_release = { original_tag = BAT } }
			94 = { add_core_of_target_and_transfer_if_owned = yes } #Volkovysk
			96 = { add_core_of_target_and_transfer_if_owned = yes } #Vilnius
			97 = { add_core_of_target_and_transfer_if_owned = yes } #Bialystok
		}
		else = {
			94 = { add_claim_of_target_and_transfer_if_owned = yes } #Volkovysk
			96 = { add_core_of_target_and_transfer_if_owned = yes } #Vilnius
			97 = { add_claim_of_target_and_transfer_if_owned = yes } #Bialystok
		}
	}

	option = { #Split between Poland and Belarus/Russia
		log = "[GetLogInfo]: event annex.1120 option annex.1120.d"
		name = annex.1120.d
		trigger = {
			has_event_target = poland
			has_event_target = belarus
			NOT = { has_event_target = can_annex_southern_lithuania }
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = POL }
		97 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:belarus }
		94 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line

		96 = { transfer_state_and_add_claim = yes }
	}

	option = { #Split between Belarus/Russia and Lithuania
		log = "[GetLogInfo]: event annex.1120 option annex.1120.e"
		name = annex.1120.e
		trigger = {
			has_event_target = belarus
			has_event_target = lithuania
			NOT = { has_event_target = can_annex_southern_lithuania }
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = event_target:lithuania }
		96 = { transfer_state_and_add_core = yes }
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:belarus }
		94 = { transfer_state_and_add_claim = yes }
		97 = { transfer_state_and_add_claim = yes }
	}

	option = { #Split three-way
		log = "[GetLogInfo]: event annex.1120 option annex.1120.f"
		name = annex.1120.f
		trigger = {
			has_event_target = poland
			has_event_target = belarus
			has_event_target = lithuania
			NOT = { has_event_target = can_annex_southern_lithuania }
		}
		ai_chance = { base = 80 }
		set_temp_variable = { tag_to_release = event_target:belarus }
		94 = { transfer_state_and_add_claim = yes }
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:lithuania }
		96 = { transfer_state_and_add_core = yes }
		custom_effect_tooltip = tooltip_white_line

		set_temp_variable = { tag_to_release = event_target:poland }
		97 = { transfer_state_and_add_claim = yes }
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1120 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				has_event_target = can_annex_southern_lithuania
				AND = {
					is_russian_tag = yes
					OR = {
						owns_state = 11 #Kaunas
						owns_state = 204 #Braslav
					}
				}
			}
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { original_tag = BAT }
			94 = { remove_claim_and_add_core_of_ROOT = yes } #Volkovysk
			96 = { remove_claim_and_add_core_of_ROOT = yes } #Vilnius
			97 = { remove_claim_and_add_core_of_ROOT = yes } #Bialystok
		}
		else = {
			94 = { add_claim_of_ROOT = yes } #Volkovysk
			96 = { add_claim_of_ROOT = yes } #Vilnius
			97 = { add_claim_of_ROOT = yes } #Bialystok
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1120 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				has_event_target = can_annex_southern_lithuania
				AND = {
					is_russian_tag = yes
					OR = {
						owns_state = 11 #Kaunas
						owns_state = 204 #Braslav
					}
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = SOUTHERN_LITHUANIA_CONQ
	}
}

country_event = { #Fate of Savoy
	id = annex.1121
	title = annexation_SAVOY_CONQ
	desc = annexation_SAVOY_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				var:20.owner = { #Lyonnais
					is_french_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:20.owner = { save_event_target_as = france }
		}
		else_if = {
			limit = {
				var:763.owner = { #Alpes
					is_french_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:763.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				var:158.owner = { #Piedmont
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:158.owner = { save_event_target_as = italy }
		}
	}

	option = { #Give it to France
		log = "[GetLogInfo]: event annex.1121 option annex.1121.a"
		name = annex.1121.a
		trigger = {
			is_french_tag = no
			has_event_target = france
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				is_ally_with = event_target:italy
				NOT = { is_ally_with = event_target:france }
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				is_italian_unifier_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		735 = { add_core_of_target_and_transfer_if_owned = yes } #Savoy
		943 = { add_core_of_target_and_transfer_if_owned = yes } #Upper Savoy
	}

	option = { #Give it to Italy
		log = "[GetLogInfo]: event annex.1121 option annex.1121.b"
		name = annex.1121.b
		trigger = {
			is_italian_unifier_tag = no
			has_event_target = italy
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = no
				is_ally_with = event_target:france
				NOT = { is_ally_with = event_target:italy }
			}
			modifier = {
				factor = 0
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy }
		735 = { add_claim_of_target_and_transfer_if_owned = yes } #Savoy
		943 = { add_claim_of_target_and_transfer_if_owned = yes } #Upper Savoy
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1121 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = { base = 1000 }
		735 = { remove_claim_and_add_core_of_ROOT = yes } #Savoy
		943 = { remove_claim_and_add_core_of_ROOT = yes } #Upper Savoy
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1121 option annex.integration"
		name = annex.integration
		trigger = {
			is_italian_unifier_tag = yes
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 158.owner }
			735 = { add_claim_of_target_and_transfer_if_owned = yes } #Savoy
			943 = { add_claim_of_target_and_transfer_if_owned = yes } #Upper Savoy
		}
		else = {
			735 = { add_claim_of_ROOT = yes } #Savoy
			943 = { add_claim_of_ROOT = yes } #Upper Savoy
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1121 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_french_tag = no
			is_italian_unifier_tag = no
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = SAVOY_CONQ
	}
}

country_event = { #Fate of Nice
	id = annex.1122
	title = annexation_NICE_CONQ
	desc = annexation_NICE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				var:21.owner = { #Provence
					is_french_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:21.owner = { save_event_target_as = france }
		}
		if = {
			limit = {
				var:158.owner = { #Piedmont
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:158.owner = { save_event_target_as = italy }
		}
		else_if = {
			limit = {
				var:838.owner = { #Liguria
					is_italian_tag = yes
					ROOT_can_grant_land = yes
				}
			}
			var:838.owner = { save_event_target_as = italy }
		}
	}

	option = { #Give it to France
		log = "[GetLogInfo]: event annex.1122 option annex.1122.a"
		name = annex.1122.a
		trigger = {
			is_french_tag = no
			has_event_target = france
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_ally_with = event_target:italy
				NOT = { is_ally_with = event_target:france }
			}
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = yes
			}
			modifier = {
				factor = 0
				is_italian_unifier_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:france }
		762 = { transfer_state_and_add_core = yes } #Nice
	}

	option = { #Give it to Italy
		log = "[GetLogInfo]: event annex.1122 option annex.1122.b"
		name = annex.1122.b
		trigger = {
			is_italian_unifier_tag = no
			has_event_target = italy
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				is_germany_or_splinter_tag = no
				is_ally_with = event_target:france
				NOT = { is_ally_with = event_target:italy }
			}
			modifier = {
				factor = 0
				is_french_tag = yes
			}
		}
		set_temp_variable = { tag_to_release = event_target:italy }
		762 = { transfer_state_and_add_claim = yes } #Nice
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1122 option annex.integration"
		name = annex.integration
		trigger = {
			is_french_tag = yes
		}
		ai_chance = { base = 1000 }
		762 = { remove_claim_and_add_core_of_ROOT = yes } #Nice
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1122 option annex.integration"
		name = annex.integration
		trigger = {
			is_italian_unifier_tag = yes
		}
		ai_chance = { base = 1000 }
		if = {
			limit = { has_country_flag = SIC_confed }
			set_temp_variable = { tag_to_release = 158.owner }
			762 = { add_claim_of_target_and_transfer_if_owned = yes } #Nice
		}
		else = {
			762 = { add_claim_of_ROOT = yes } #Nice
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1122 option annex.occupation"
		name = annex.occupation
		trigger = {
			is_french_tag = no
			is_italian_unifier_tag = no
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = NICE_CONQ
	}
}

country_event = { #Fate of Syrmia
	id = annex.1123
	title = annexation_SYRMIA_CONQ
	desc = annexation_SYRMIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { CRO = { ROOT_can_grant_land = yes } }
			CRO = { save_event_target_as = croatia }
		}
		else_if = {
			limit = {
				var:109.owner = { #Central Croatia
					OR = {
						original_tag = HUN
						AND = {
							original_tag = AUS
							AUS_is_unified = yes
						}
					}
					ROOT_can_grant_land = yes
				}
			}
			var:109.owner = { save_event_target_as = croatia }
		}
		if = {
			limit = { SER = { ROOT_can_grant_land = yes } }
			SER = { save_event_target_as = serbia }
		}
	}

	option = { #Give it to Croatia
		log = "[GetLogInfo]: event annex.1123 option annex.1123.a"
		name = annex.1123.a
		trigger = {
			has_event_target = croatia
			NOT = { original_tag = SER }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0
				is_ally_with = event_target:serbia
				NOT = { is_ally_with = event_target:croatia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:croatia }
		if = {
			limit = { event_target:croatia = { original_tag = HUN } }
			794 = { transfer_state_and_add_claim = yes }
		}
		else = {
			794 = { transfer_state_and_add_core = yes } #Syrmia
		}
	}

	option = { #Give it to Serbia
		log = "[GetLogInfo]: event annex.1123 option annex.1123.b"
		name = annex.1123.b
		trigger = {
			has_event_target = serbia
			NOT = { original_tag = CRO }
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				is_ally_with = event_target:croatia
				NOT = { is_ally_with = event_target:serbia }
			}
			modifier = {
				factor = 0
				original_tag = BUL
				SER = { is_subject_of = BUL }
			}
		}
		set_temp_variable = { tag_to_release = event_target:serbia }
		794 = { transfer_state_and_add_claim = yes } #Syrmia
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1123 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = CRO
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
					owns_state = 109 #Central Croatia
				}
			}
		}
		794 = { remove_claim_and_add_core_of_ROOT = yes } #Syrmia
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1123 option annex.integration"
		name = annex.integration
		trigger = {
			OR = {
				original_tag = SER
				AND = {
					original_tag = HUN
					owns_state = 109 #Central Croatia
				}
			}
		}
		794 = { add_claim_of_ROOT = yes } #Syrmia
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1123 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = {
				original_tag = CRO
				original_tag = SER
				AND = {
					original_tag = AUS
					AUS_is_unified = yes
					owns_state = 109 #Central Croatia
				}
				AND = {
					original_tag = HUN
					owns_state = 109 #Central Croatia
				}
			}
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = SYRMIA_CONQ
	}
}

country_event = { #Fate of the Karavanks
	id = annex.1124
	title = annexation_KARAVANKS_CONQ
	desc = annexation_KARAVANKS_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = AUS
					original_tag = SLV
					AND = {
						original_tag = CRO
						owns_state = 102 #Carniola
					}
					AND = {
						original_tag = SER
						owns_state = 102 #Carniola
					}
					AND = {
						owns_state = 4 #Vienna
						is_germany_or_splinter_tag = yes
					}
				}
			}
			save_event_target_as = can_integrate_karavanks
		}
		if = {
			limit = { AUS = { ROOT_can_grant_land = yes } }
			AUS = { save_event_target_as = austria }
		}
		else_if = {
			limit = {
				var:835.owner = {
					is_germany_or_splinter_tag = yes
					is_ally_with = ROOT
					NOT = { tag = ROOT }
				}
			}
			var:835.owner = { save_event_target_as = austria }
		}
		if = {
			limit = {
				var:102.owner = { #Carniola
					OR = {
						original_tag = SLV
						original_tag = CRO
						original_tag = SER
						original_tag = BUL
					}
					ROOT_can_grant_land = yes
				}
			}
			var:102.owner = { save_event_target_as = slovenia }
		}
	}

	option = { #Give it to Slovenia
		log = "[GetLogInfo]: event annex.1124 option annex.1124.a"
		name = annex.1124.a
		trigger = {
			has_event_target = slovenia
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				is_ally_with = event_target:austria
				NOT = { is_ally_with = event_target:slovenia }
			}
		}
		set_temp_variable = { tag_to_release = event_target:slovenia }
		if = {
			limit = {
				var:tag_to_release = {
					OR = {
						original_tag = SLV
						original_tag = CRO
					}
				}
			}
			1107 = { transfer_state_and_add_core = yes } #Karavanks
		}
		else = {
			1107 = { transfer_state_and_add_claim = yes } #Karavanks
		}
	}

	option = { #Give it to Austria
		log = "[GetLogInfo]: event annex.1124 option annex.1124.b"
		name = annex.1124.b
		trigger = {
			has_event_target = austria
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				is_ally_with = event_target:slovenia
				NOT = { is_ally_with = event_target:austria }
			}
		}
		set_temp_variable = { tag_to_release = event_target:austria }
		if = {
			limit = { var:tag_to_release = { original_tag = AUS } }
			1107 = { transfer_state_and_add_core = yes } #Karavanks
		}
		else = {
			1107 = { transfer_state_and_add_claim = yes } #Karavanks
		}
	}

	option = { #Integrate
		log = "[GetLogInfo]: event annex.1124 option annex.integration"
		name = annex.integration
		trigger = {
			has_event_target = can_integrate_karavanks
		}
		if = {
			limit = {
				OR = {
					original_tag = AUS
					original_tag = SLV
					original_tag = CRO
				}
			}
			1107 = { remove_claim_and_add_core_of_ROOT = yes } #Karavanks
		}
		else = {
			1107 = { add_claim_of_ROOT = yes } #Karavanks
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1124 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_integrate_karavanks }
		}
		ai_chance = { base = 0 }
		occupy_small_country = yes
		set_country_flag = KARAVANKS_CONQ
	}
}

country_event = { #Fate of Dobrogea
	id = annex.1125
	title = annexation_DOBROGEA_CONQ
	desc = annexation_DOBROGEA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = ROM
					48 = { is_claim_or_core_of_ROOT = yes } #Sofia - covers BUL and SER
				}
			}
			save_event_target_as = can_annex_dobrogea
		}
		if = {
			limit = { ROM = { ROOT_can_grant_land = yes } }
			ROM = { save_event_target_as = romania }
		}
		if = {
			limit = { BUL = { ROOT_can_grant_land = yes } }
			BUL = { save_event_target_as = bulgaria }
		}
		else_if = {
			limit = {
				SER = {
					ROOT_can_grant_land = yes
					48 = { is_claim_or_core_of_ROOT = yes } #Sofia
				}
			}
			SER = { save_event_target_as = bulgaria }
		}
	}

	option = { #Give to Romania
		log = "[GetLogInfo]: event annex.1125 option annex.1125.a"
		name = annex.1125.a
		trigger = {
			has_event_target = romania
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_event_target = can_annex_dobrogea
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:bulgaria
				NOT = { is_ally_with = event_target:romania }
			}
			modifier = {
				factor = 2
				event_target:romania = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = event_target:romania }
		77 = { transfer_state_and_add_claim_or_core = yes } #Silistria
		772 = { transfer_state_and_add_core = yes } #Constantza
	}

	option = { #Give to Bulgaria/Serbia
		log = "[GetLogInfo]: event annex.1125 option annex.1125.b"
		name = annex.1125.b
		trigger = {
			has_event_target = bulgaria
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_event_target = can_annex_dobrogea
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:romania
				NOT = { is_ally_with = event_target:bulgaria }
			}
			modifier = {
				factor = 2
				event_target:bulgaria = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		if = {
			limit = { var:tag_to_release = { original_tag = BUL } }
			77 = { transfer_state_and_add_core = yes } #Silistria
		}
		else = {
			77 = { transfer_state_and_add_claim = yes } #Silistria
		}
		772 = { transfer_state_and_add_claim = yes } #Constantza
	}

	option = { #Split between ROM and BUL
		log = "[GetLogInfo]: event annex.1125 option annex.1125.c"
		name = annex.1125.c
		trigger = {
			has_event_target = romania
			has_event_target = bulgaria
			77 = { is_valid_annexation_state = yes } #Silistria
			772 = { is_valid_annexation_state = yes } #Constantza
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					AND = {
						is_ally_with = event_target:bulgaria
						NOT = { is_ally_with = event_target:romania }
					}
					AND = {
						is_ally_with = event_target:romania
						NOT = { is_ally_with = event_target:bulgaria }
					}
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		if = {
			limit = { var:tag_to_release = { original_tag = BUL } }
			77 = { transfer_state_and_add_core = yes } #Silistria
		}
		else = {
			77 = { transfer_state_and_add_claim = yes } #Silistria
		}

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:romania }
		772 = { transfer_state_and_add_core = yes } #Constantza
	}

	option = { #Annex Silistria, give Constanta to Romania
		log = "[GetLogInfo]: event annex.1125 option annex.1125.d"
		name = annex.1125.d
		trigger = {
			48 = { is_claim_or_core_of_ROOT = yes } #Varna
			has_event_target = romania
			77 = { is_valid_annexation_state = yes } #Silistria
			772 = { is_valid_annexation_state = yes } #Constantza
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				original_tag = BUL
			}
		}
		77 = { add_claim_of_ROOT = yes } #Silistria

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:romania }
		772 = { add_core_of_target_and_transfer_if_owned = yes } #Constantza
	}

	option = { #Annex Silistria, occupy Constanta
		log = "[GetLogInfo]: event annex.1125 option annex.1125.e"
		name = annex.1125.e
		trigger = {
			original_tag = SER
			48 = { is_claim_or_core_of_ROOT = yes } #Varna
			77 = { is_valid_annexation_state = yes }
			772 = { is_valid_annexation_state = yes }
		}
		ai_chance = { base = 100 }
		77 = { add_claim_of_ROOT = yes } #Silistria
	}

	option = { #Annex Silistria
		log = "[GetLogInfo]: event annex.1125 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = SER
			48 = { is_claim_or_core_of_ROOT = yes } #Varna
			77 = { is_valid_annexation_state = yes }
			772 = { is_valid_annexation_state = no }
		}
		ai_chance = { base = 100 }
		77 = { add_claim_of_ROOT = yes } #Silistria
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1125 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = ROM
		}
		ai_chance = { base = 100 }
		if = {
			limit = { owns_state = 77 }
			77 = { add_claim_of_ROOT = yes } #Silistria
		}
		if = {
			limit = { owns_state = 772 }
			772 = { remove_claim_and_add_core_of_ROOT = yes } #Constantza
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1125 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = BUL
		}
		ai_chance = { base = 100 }
		if = {
			limit = { owns_state = 77 }
			77 = { remove_claim_and_add_core_of_ROOT = yes } #Silistria
		}
		if = {
			limit = { owns_state = 772 }
			772 = { remove_claim_and_add_core_of_ROOT = yes } #Constantza
		}
	}
	option = { #occupy
		log = "[GetLogInfo]: event annex.1125 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_dobrogea }
		}
		ai_chance = { base = 0 }
		set_country_flag = DOBROGEA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Aegean Macedonia
	id = annex.1126
	title = annexation_AEGEAN_MACEDONIA_CONQ
	desc = annexation_AEGEAN_MACEDONIA_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				OR = {
					original_tag = GRE
					106 = { #Macedonia - covers BUL and any Yugoslavia
						is_owned_by = ROOT
						is_claim_or_core_of_ROOT = yes
					}
				}
			}
			save_event_target_as = can_annex_aegean_macedonia
		}
		if = {
			limit = { GRE = { ROOT_can_grant_land = yes } }
			GRE = { save_event_target_as = greece }
		}
		if = {
			limit = {
				106 = { #Macedonia
					is_claim_or_core_of_owner = yes
					owner = {
						ROOT_can_grant_land = yes
						OR = {
							is_south_slav_tag = yes
							original_tag = BUL
						}
					}
				}
			}
			var:106.owner = { save_event_target_as = bulgaria }
		}
	}

	option = { #Give to Greece
		log = "[GetLogInfo]: event annex.1126 option annex.1126.a"
		name = annex.1126.a
		trigger = {
			has_event_target = greece
		}
		ai_chance = {
			base = 80
			modifier = {
				factor = 0
				has_event_target = can_annex_aegean_macedonia
			}
			modifier = {
				add = -40
				is_ally_with = event_target:bulgaria
				NOT = { is_ally_with = event_target:greece }
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		731 = { transfer_state_and_add_core = yes } #Florina
		1076 = { add_core_of_target_and_transfer_if_owned = yes } #Veria
	}

	option = { #Give to Bulgaria
		log = "[GetLogInfo]: event annex.1126 option annex.1126.b"
		name = annex.1126.b
		trigger = {
			has_event_target = bulgaria
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				has_event_target = can_annex_aegean_macedonia
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:greece
				NOT = { is_ally_with = event_target:bulgaria }
			}
			modifier = {
				factor = 0
				769 = { #Serres
					NOT = { is_owned_by = event_target:bulgaria }
					is_valid_annexation_state = no
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		731 = { transfer_state_and_add_claim = yes } #Florina
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1126 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = GRE
		}
		ai_chance = { base = 100 }
		731 = { remove_claim_and_add_core_of_ROOT = yes } #Florina
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1126 option annex.integration"
		name = annex.integration
		trigger = {
			106 = { #Macedonia - covers BUL and any Yugoslavia
				is_owned_by = ROOT
				is_claim_or_core_of_ROOT = yes
			}
		}
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				NOT = { original_tag = BUL }
			}
		}
		731 = { add_claim_of_ROOT = yes } #Florina
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1126 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_aegean_macedonia }
		}
		set_country_flag = AEGEAN_MACEDONIA_CONQ
		occupy_small_country = yes
	}
}

country_event = { #Fate of Western Thrace
	id = annex.1127
	title = annexation_THRACE_CONQ
	desc = annexation_THRACE_CONQ_desc
	picture = GFX_report_event_generic_conference2

	is_triggered_only = yes

	immediate = {
		if = {
			limit = { 184 = { is_valid_annexation_state = yes } } #Komotini
			184 = { save_event_target_as = komotini }
		}
		if = {
			limit = { 769 = { is_valid_annexation_state = yes } } #Serres
			769 = { save_event_target_as = serres }
		}
		if = {
			limit = { 1089 = { is_valid_annexation_state = yes } } #Kardzhali
			769 = { save_event_target_as = kardzhali }
		}
		if = {
			limit = {
				OR = {
					AND = {
						original_tag = GRE
						OR = {
							has_event_target = komotini
							has_event_target = serres
							AND = {
								has_event_target = kardzhali
								owns_state = 184 #Komotini
							}
						}
					}
					AND = {
						OR = {
							original_tag = BUL
							is_south_slav_tag = yes
						}
						owns_state = 212 #Plovdiv
						48 = { is_claim_or_core_of_ROOT = yes } #Sofia
						OR = {
							has_event_target = serres
							has_event_target = kardzhali
							AND = {
								has_event_target = komotini
								owns_state = 1089 #Kardzhali
							}
						}
					}
					AND = {
						original_tag = TUR
						owns_state = 341 #Adrianople
						OR = {
							has_event_target = komotini
							has_event_target = kardzhali
						}
					}
				}
			}
			save_event_target_as = can_annex_western_thrace
		}
		if = {
			limit = {
				GRE = {
					ROOT_can_grant_land = yes
					OR = {
						owns_state = 341 #Adrianople
						owns_state = 731 #Florina
						owns_state = 989 #Chalcidice
					}
				}
			}
			GRE = { save_event_target_as = greece }
		}
		if = {
			limit = {
				var:212.owner = { #Plovdiv
					OR = {
						original_tag = BUL
						is_south_slav_tag = yes
					}
					48 = { is_claim_or_core_of_PREV = yes } #Sofia
					ROOT_can_grant_land = yes
					OR = {
						has_event_target = serres
						has_event_target = kardzhali
						AND = {
							has_event_target = komotini
							owns_state = 1089 #Kardzhali
						}
					}
				}
			}
			var:212.owner = { save_event_target_as = bulgaria }
		}
		if = {
			limit = {
				TUR = {
					ROOT_can_grant_land = yes
					owns_state = 341 #Adrianople
					OR = {
						has_event_target = komotini
						has_event_target = kardzhali
					}
				}
			}
			TUR = { save_event_target_as = turkey }
		}
	}

	option = { #Give to GRE
		log = "[GetLogInfo]: event annex.1127 option annex.1127.a"
		name = annex.1127.a
		trigger = {
			has_event_target = greece
		}
		ai_chance = {
			base = 60
			modifier = {
				factor = 0
				has_event_target = can_annex_western_thrace
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:greece }
				OR = {
					is_ally_with = event_target:bulgaria
					is_ally_with = event_target:turkey
				}
			}
			modifier = {
				factor = 0.5
				event_target:greece = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		if = {
			limit = { has_event_target = komotini }
			184 = { transfer_state_and_add_claim = yes } #Komotini
		}
		if = {
			limit = { has_event_target = serres }
			769 = { transfer_state_and_add_claim = yes } #Serres
		}
		if = {
			limit = {
				has_event_target = kardzhali
				OR = {
					has_event_target = komotini
					184 = { is_owned_by = var:tag_to_release } #Komotini
				}
			}
			1089 = { transfer_state_and_add_claim = yes } #Kardzhali
		}
	}

	option = { #Give to BUL/YUG
		log = "[GetLogInfo]: event annex.1127 option annex.1127.b"
		name = annex.1127.b
		trigger = {
			has_event_target = bulgaria
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				has_event_target = can_annex_western_thrace
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:bulgaria }
				OR = {
					is_ally_with = event_target:greece
					is_ally_with = event_target:turkey
				}
			}
			modifier = {
				factor = 0.5
				event_target:bulgaria = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		if = {
			limit = {
				has_event_target = komotini
				OR = {
					has_event_target = kardzhali
					1089 = { is_owned_by = var:tag_to_release } #Kardzhali
				}
			}
			184 = { transfer_state_and_add_claim = yes } #Komotini
		}
		if = {
			limit = { has_event_target = serres }
			769 = { transfer_state_and_add_claim = yes } #Serres
		}
		if = {
			limit = { has_event_target = kardzhali }
			1089 = { transfer_state_and_add_claim = yes } #Kardzhali
		}
	}

	option = { #Give to TUR
		log = "[GetLogInfo]: event annex.1127 option annex.1127.c"
		name = annex.1127.c
		trigger = {
			has_event_target = turkey
			NOT = { has_event_target = serres }
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				has_event_target = can_annex_western_thrace
			}
			modifier = {
				factor = 0
				NOT = { is_ally_with = event_target:turkey }
				OR = {
					is_ally_with = event_target:greece
					is_ally_with = event_target:bulgaria
				}
			}
			modifier = {
				factor = 0.5
				event_target:turkey = { is_subject = yes }
			}
		}
		set_temp_variable = { tag_to_release = event_target:turkey }
		if = {
			limit = { has_event_target = komotini }
			184 = { transfer_state_and_add_claim = yes } #Komotini
		}
		if = {
			limit = { has_event_target = kardzhali }
			1089 = { transfer_state_and_add_claim = yes } #Kardzhali
		}
	}

	option = { #Split between GRE and BUL
		log = "[GetLogInfo]: event annex.1127 option annex.1127.d"
		name = annex.1127.d
		trigger = {
			has_event_target = greece
			has_event_target = serres
			has_event_target = bulgaria
			OR = {
				has_event_target = kardzhali
				AND = {
					has_event_target = komotini
					1089 = { is_owned_by = event_target:bulgaria }
				}
			}
		}
		ai_chance = {
			base = 70
			modifier = {
				factor = 0
				has_event_target = can_annex_western_thrace
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:greece
				NOT = { is_ally_with = event_target:bulgaria }
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:bulgaria
				NOT = { is_ally_with = event_target:greece }
			}
			modifier = {
				factor = 0
				event_target:greece = { is_subject = no }
				event_target:bulgaria = { is_subject = yes }
			}
			modifier = {
				factor = 0
				event_target:greece = { is_subject = yes }
				event_target:bulgaria = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		769 = { transfer_state_and_add_claim = yes } #Serres

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		if = {
			limit = {
				has_event_target = komotini
				OR = {
					has_event_target = kardzhali
					1089 = { is_owned_by = var:tag_to_release } #Kardzhali
				}
			}
			184 = { transfer_state_and_add_claim = yes } #Komotini
		}
		if = {
			limit = { has_event_target = kardzhali }
			1089 = { transfer_state_and_add_claim = yes } #Kardzhali
		}
	}

	option = { #Split between GRE and TUR
		log = "[GetLogInfo]: event annex.1127 option annex.1127.e"
		name = annex.1127.e
		trigger = {
			has_event_target = greece
			has_event_target = serres
			has_event_target = turkey
			OR = {
				has_event_target = komotini
				AND = {
					has_event_target = kardzhali
					184 = { is_owned_by = event_target:turkey }
				}
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				has_event_target = can_annex_western_thrace
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:greece
				NOT = { is_ally_with = event_target:turkey }
			}
			modifier = {
				factor = 0
				is_ally_with = event_target:turkey
				NOT = { is_ally_with = event_target:greece }
			}
			modifier = {
				factor = 0
				event_target:greece = { is_subject = no }
				event_target:turkey = { is_subject = yes }
			}
			modifier = {
				factor = 0
				event_target:greece = { is_subject = yes }
				event_target:turkey = { is_subject = no }
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		769 = { transfer_state_and_add_claim = yes } #Serres

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		if = {
			limit = { has_event_target = komotini }
			184 = { transfer_state_and_add_claim = yes } #Komotini
		}
		if = {
			limit = {
				has_event_target = kardzhali
				OR = {
					has_event_target = komotini
					184 = { is_owned_by = var:tag_to_release } #Komotini
				}
			}
			1089 = { transfer_state_and_add_claim = yes } #Kardzhali
		}
	}

	option = { #Split between GRE, BUL and TUR
		log = "[GetLogInfo]: event annex.1127 option annex.1127.f"
		name = annex.1127.f
		trigger = {
			has_event_target = greece
			has_event_target = serres
			has_event_target = bulgaria
			has_event_target = kardzhali
			has_event_target = turkey
			has_event_target = komotini
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				has_event_target = can_annex_western_thrace
			}
			modifier = {
				factor = 0 #is ally with one, but not all three
				OR = {
					is_ally_with = event_target:greece
					is_ally_with = event_target:bulgaria
					is_ally_with = event_target:turkey
				}
				OR = {
					NOT = { is_ally_with = event_target:greece }
					NOT = { is_ally_with = event_target:bulgaria }
					NOT = { is_ally_with = event_target:turkey }
				}
			}
			modifier = {
				factor = 0 #one is a puppet, but not all three
				OR = {
					event_target:greece = { is_subject = no }
					event_target:bulgaria = { is_subject = no }
					event_target:turkey = { is_subject = no }
				}
				OR = {
					event_target:greece = { is_subject = yes }
					event_target:bulgaria = { is_subject = yes }
					event_target:turkey = { is_subject = yes }
				}
			}
		}
		set_temp_variable = { tag_to_release = event_target:greece }
		769 = { transfer_state_and_add_claim = yes } #Serres

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:turkey }
		184 = { transfer_state_and_add_claim = yes } #Komotini

		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { tag_to_release = event_target:bulgaria }
		1089 = { transfer_state_and_add_claim = yes } #Kardzhali
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1127 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = GRE
		}
		ai_chance = { base = 100 }
		if = {
			limit = { has_event_target = komotini }
			184 = { add_claim_of_ROOT = yes } #Komotini
		}
		if = {
			limit = { has_event_target = serres }
			769 = { add_claim_of_ROOT = yes } #Serres
		}
		if = {
			limit = {
				has_event_target = kardzhali
				owns_state = 184 #Komotini
			}
			1089 = { add_claim_of_ROOT = yes } #Kardzhali
		}
	}

	option = { #annex - BUL/SER/CRO
		log = "[GetLogInfo]: event annex.1127 option annex.integration"
		name = annex.integration
		trigger = {
			owns_state = 212 #Plovdiv
			48 = { is_claim_or_core_of_ROOT = yes } #Sofia
		}
		ai_chance = { base = 100 }
		if = {
			limit = {
				has_event_target = komotini
				owns_state = 1089 #Kardzhali
			}
			184 = { add_claim_of_ROOT = yes } #Komotini
		}
		if = {
			limit = { has_event_target = serres }
			769 = { add_claim_of_ROOT = yes } #Serres
		}
		if = {
			limit = { has_event_target = kardzhali }
			1089 = { add_claim_of_ROOT = yes } #Kardzhali
		}
	}

	option = { #annex
		log = "[GetLogInfo]: event annex.1127 option annex.integration"
		name = annex.integration
		trigger = {
			original_tag = TUR
			owns_state = 341 #Adrianople
		}
		ai_chance = { base = 100 }
		if = {
			limit = { has_event_target = komotini }
			184 = { add_claim_of_ROOT = yes } #Komotini
		}
		if = {
			limit = {
				has_event_target = kardzhali
				owns_state = 184 #Komotini
			}
			1089 = { add_claim_of_ROOT = yes } #Kardzhali
		}
	}

	option = { #occupy
		log = "[GetLogInfo]: event annex.1127 option annex.occupation"
		name = annex.occupation
		trigger = {
			NOT = { has_event_target = can_annex_western_thrace }
		}
		ai_chance = { base = 0 }
		set_country_flag = THRACE_CONQ
		occupy_small_country = yes
	}
}
