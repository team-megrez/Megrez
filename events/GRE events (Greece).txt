###########################
# Greece Events
###########################

add_namespace = gre

### Political Events

# Greek Independence Day
country_event = {
	id = gre.3
	title = gre.3.t
	desc = gre.3.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.3 option gre.3.a"
		name = gre.3.a
		add_political_power = 20
		hidden_effect = {
			country_event = { id = gre.4 days = 365 }
		}
	}
}

# Greek Independence Day (subsequent years)
country_event = {
	id = gre.4
	title = gre.3.t
	desc = gre.4.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.4 option gre.4.a"
		name = gre.4.a
		add_political_power = 20
		hidden_effect = {
			country_event = { id = gre.4 days = 365 }
		}
	}
}

# Black Monday hits Greece
country_event = {
	id = gre.5
	title = gre.5.t
	desc = gre.5.d
	picture = GFX_report_event_HOL_black_monday

	is_triggered_only = yes

	immediate = {
		hidden_effect = { add_ideas = GRE_black_monday_1 }
	}

	option = {
		log = "[GetLogInfo]: event gre.5 option gre.5.a"
		name = gre.5.a
		add_stability = -0.1
		effect_tooltip = { add_ideas = GRE_black_monday_1 }
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 2 }
		hidden_effect = {
			country_event = { id = gre.154 days = 10 random_days = 30 }
		}
	}
}

# Agricultural crisis (fired by focus)
country_event = {
	id = gre.6
	title = gre.6.t
	desc = gre.6.d
	picture = GFX_report_event_SRI_italian_farmers

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.6 option gre.6.a"
		name = gre.6.a #Help them out as much as we can
		ai_chance = { base = 60 }
		add_political_power = -25
		add_stability = -0.05
		custom_effect_tooltip = GRE_increase_monarchist
		if = {
			limit = {
				NOT = {
					has_government = radical_socialist
				}
			}
			add_popularity = {
				ideology = radical_socialist
				popularity = 0.05
			}
			else = {
				add_popularity = {
					ideology = radical_socialist
					popularity = -0.05
				}
			}
		}
		modify_country_flag = { flag = gre_monarchist_sympathies value = 1 }
	}
	option = {
		log = "[GetLogInfo]: event gre.6 option gre.6.b"
		name = gre.6.b #Dig deep - they're the backbone of Greece
		ai_chance = { base = 40 }
		add_political_power = -75
		add_stability = 0.05
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -1 }
	}
}

# Foreign Industry Question (fired by focus)
country_event = {
	id = gre.7
	title = gre.7.t
	desc = gre.7.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.7 option gre.7.a"
		name = gre.7.a #Seize it all, no matter the repercussions
		ai_chance = { base = 75 }
		custom_effect_tooltip = GRE_germany_austria_tt
		custom_effect_tooltip = tooltip_white_line
		set_temp_variable = { ideology_change_var = 0.05 }
		change_ruling_party_popularity = yes
		custom_effect_tooltip = tooltip_white_line
		if = {
			limit = { has_idea = GRE_foreign_industry_GER1 }
			remove_ideas = GRE_foreign_industry_GER1
			GER = {
				country_event = gre.8
				add_opinion_modifier = {
					target = ROOT
					modifier = GRE_stole_industry1
				}
				custom_effect_tooltip = tooltip_white_line
				set_country_flag = { flag = GRE_stole_industry days = 1095 value = 1 }
			}
		}
		if = {
			limit = { has_idea = GRE_foreign_industry_AUS1 }
			remove_ideas = GRE_foreign_industry_AUS1
			AUS = {
				country_event = gre.8
				add_opinion_modifier = {
					target = ROOT
					modifier = GRE_stole_industry1
				}
				custom_effect_tooltip = tooltip_white_line
				set_country_flag = { flag = GRE_stole_industry days = 1095 value = 1 }
			}
		}
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -1 }
	}
	option = {
		log = "[GetLogInfo]: event gre.7 option gre.7.b"
		name = gre.7.b #Deal with the worst cases only
		ai_chance = { base = 20 }
		custom_effect_tooltip = GRE_germany_austria_maybe_tt
		custom_effect_tooltip = tooltip_white_line
		if = {
			limit = { has_idea = GRE_foreign_industry_GER1 }
			swap_ideas = {
				remove_idea = GRE_foreign_industry_GER1
				add_idea = GRE_foreign_industry_GER2
			}
			GER = {
				country_event = gre.11
				add_opinion_modifier = {
					target = ROOT
					modifier = GRE_stole_industry2
				}
				set_country_flag = { flag = GRE_stole_industry days = 540 value = 1 }
			}
		}
		if = {
			limit = { has_idea = GRE_foreign_industry_AUS1 }
			swap_ideas = {
				remove_idea = GRE_foreign_industry_AUS1
				add_idea = GRE_foreign_industry_AUS2
			}
			AUS = {
				country_event = gre.11
				add_opinion_modifier = {
					target = ROOT
					modifier = GRE_stole_industry2
				}
				set_country_flag = { flag = GRE_stole_industry days = 540 value = 1 }
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.7 option gre.7.c"
		name = gre.7.c #Subsidize the investors ourselves - they'd better be grateful
		ai_chance = { base = 5 }
		add_political_power = -100
		set_temp_variable = { ideology_change_var = -0.1 }
		change_ruling_party_popularity = yes
		custom_effect_tooltip = GRE_increase_monarchist
		if = {
			limit = { has_idea = GRE_foreign_industry_GER1 }
			swap_ideas = {
				remove_idea = GRE_foreign_industry_GER1
				add_idea = GRE_foreign_industry_GER3
			}
			reverse_add_opinion_modifier = {
				target = GER
				modifier = GRE_aided_industry
			}
		}
		if = {
			limit = { has_idea = GRE_foreign_industry_AUS1 }
			swap_ideas = {
				remove_idea = GRE_foreign_industry_AUS1
				add_idea = GRE_foreign_industry_AUS3
			}
			reverse_add_opinion_modifier = {
				target = AUS
				modifier = GRE_aided_industry
			}
		}
		modify_country_flag = { flag = gre_monarchist_sympathies value = 2 }
	}
}

# Germany or Austria reacts to full nationalization
country_event = {
	id = gre.8
	title = gre.8.t
	desc = gre.8.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.8 option gre.8.a"
		name = gre.8.a #Apply sanctions and pull all business out at once
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				tag = AUS
			}
			modifier = {
				factor = 0
				OR = {
					AND = {
						tag = AUS
						has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_AUS }
					}
					AND = {
						tag = GER
						has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_GER }
					}
				}
			}
		}
		if = { limit = { tag = AUS }
			custom_effect_tooltip = GRE_sanction_tt
		}
		if = { limit = { tag = GER }
			custom_effect_tooltip = GRE_sanction_tt
		}
		custom_effect_tooltip = tooltip_white_line
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_they_applied_sanctions1
		}
		FROM = {
			country_event = { id = gre.9 days = 3 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.8 option gre.8.b"
		name = gre.8.b #Just apply the sanctions and express our outrage
		ai_chance = {
			base = 30
			modifier = {
				factor = 1.5
				tag = GER
			}
			modifier = {
				factor = 0
				OR = {
					AND = {
						tag = AUS
						has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_AUS }
					}
					AND = {
						tag = GER
						has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_GER }
					}
				}
			}
		}
		if = { limit = { tag = AUS }
			custom_effect_tooltip = GRE_sanction_tt
		}
		if = { limit = { tag = GER }
			custom_effect_tooltip = GRE_sanction_tt
		}
		custom_effect_tooltip = tooltip_white_line
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_they_applied_sanctions2
		}
		FROM = {
			country_event = { id = gre.10 days = 3 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.8 option gre.8.c"
		name = gre.8.c #Leave them be - we're all trying to cope
		ai_chance = {
			base = 20
			modifier = {
				factor = 2.0
				tag = AUS
			}
		}
	}
}

# Germany or Austria has_responded with full sanctions
country_event = {
	id = gre.9
	title = gre.9.t
	desc = gre.9.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.9 option gre.9.a"
		name = gre.9.a
		if = {
			limit = { FROM = { tag = GER } }
			add_timed_idea = {
				idea = GRE_german_sanctions
				days = 1095
			}
		}
		else = {
			add_timed_idea = {
				idea = GRE_austrian_sanctions
				days = 1095
			}
		}
		every_country = {
			limit = { is_ally_with = FROM }
			add_opinion_modifier = {
				target = ROOT
				modifier = GRE_applied_sanctions
			}
		}
	}
}

# Germany or Austria has_responded with partial sanctions
country_event = {
	id = gre.10
	title = gre.10.t
	desc = gre.10.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.10 option gre.9.a"
		name = gre.9.a
		every_country = {
			limit = { is_ally_with = FROM }
			add_opinion_modifier = {
				target = FROM
				modifier = GRE_applied_sanctions
			}
		}
	}
}

# Germany or Austria reacts to partial nationalization
country_event = {
	id = gre.11
	title = gre.11.t
	desc = gre.11.d
	picture = GFX_report_event_NOR_black_monday

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.11 option gre.11.a"
		name = gre.11.a #Apply sanctions and express our outrage
		ai_chance = {
			base = 65
			modifier = {
				factor = 0
				OR = {
					AND = {
						tag = AUS
						has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_AUS }
					}
					AND = {
						tag = GER
						has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_GER }
					}
				}
			}
		}
		if = { limit = { tag = AUS }
			custom_effect_tooltip = GRE_sanction_tt
		}
		if = { limit = { tag = GER }
			custom_effect_tooltip = GRE_sanction_tt
		}
		custom_effect_tooltip = tooltip_white_line
		set_country_flag = GRE_economic_sanctions
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_they_applied_sanctions2
		}
		FROM = {
			country_event = { id = gre.10 days = 3 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.11 option gre.8.c"
		name = gre.8.c #Leave them be - we're all trying to cope
		ai_chance = {
			base = 35
			modifier = {
				factor = 2
				tag = AUS
			}
		}
	}
}

# Government waits too long to start referendum
country_event = {
	id = gre.12
	title = gre.12.t
	desc = gre.12.d
	picture = GFX_report_event_GRE_metaxas

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = GRE_1938_elections_happened
		NOT = { focus_progress = { focus = GRE_monarchy_referendum progress > 0 } }
		has_idea = GRE_memories_of_king
		has_elected_government = yes
		has_war = no
		OR = {
			has_stability > 0.60
			has_country_flag = GRE_balkan_war_loss
			AND = {
				owns_state = 731 #Florina
				owns_state = 769 #Serres
			}
		}
	}

	mean_time_to_happen = {
		months = 6
	}

	option = {
		log = "[GetLogInfo]: event gre.12 option gre.12.a"
		name = gre.12.a
		set_temp_variable = { ideology_change_var = -0.05 }
		change_ruling_party_popularity = yes
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 1 }
	}
}

# Greece asks to join faction (fired by decision)
country_event = {
	id = gre.14
	title = gre.14.t
	desc = gre.14.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	trigger = {
		is_faction_leader = yes
		country_exists = FROM
		NOT = { has_war_with = FROM }
		FROM = { is_in_faction = no }
	}

	option = {
		log = "[GetLogInfo]: event gre.14 option gre.14.a"
		name = gre.14.a #Of course!
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				FROM = { has_country_flag = GRE_may_start_megali }
				OR = {
					GRE_allied_country_is_target_of_greek_claim = yes
					GRE_status_quo_factions_country_is_target_of_greek_claim = yes
				}
			}
		}
		if = {
			limit = { is_faction_leader = yes }
			add_to_faction = FROM
		}
		else = {
			if = {
				limit = { has_country_flag = AUS_intervened_in_weltkrieg }
				FROM = { set_country_flag = AUS_former_faction_member }
			}
			faction_leader = { add_to_faction = FROM }
		}
		FROM = {
			country_event = { id = gre.15 hours = 3 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.14 option gre.14.b"
		name = gre.14.b #They will be more trouble than they're worth
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				FROM = { has_country_flag = GRE_may_start_megali }
				OR = {
					GRE_allied_country_is_target_of_greek_claim = yes
					GRE_status_quo_factions_country_is_target_of_greek_claim = yes
				}
			}
		}
		FROM = {
			country_event = { id = gre.16 hours = 3 }
		}
	}
}

# Faction accepts Greece
country_event = {
	id = gre.15
	title = gre.15.t
	desc = gre.15.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.15 option gre.15.a"
		name = gre.15.a
		add_political_power = 50
	}
}

# Faction refuses Greece
country_event = {
	id = gre.16
	title = gre.16.t
	desc = gre.16.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.16 option gre.16.a"
		name = gre.16.a
		add_political_power = -25
	}
}

# Massive demonstrations after Balkan War loss
country_event = {
	id = gre.17
	title = gre.17.t
	desc = gre.17.d
	picture = GFX_report_event_GRE_protest

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.17 option gre.17.a"
		name = gre.17.a
		set_country_flag = GRE_balkan_war_loss
		add_stability = -0.20
		set_temp_variable = { ideology_change_var = -0.2 }
		change_ruling_party_popularity = yes
	}
}

# The government nears collapse
country_event = {
	id = gre.18
	title = gre.18.t
	desc = gre.18.d
	picture = GFX_report_event_SPA_civwar3

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = GRE_balkan_war_loss
		controls_all_owned_states = yes
		is_subject = no
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		log = "[GetLogInfo]: event gre.18 option gre.18.a"
		name = gre.18.a #Forces loyal to Metaxas take over
		trigger = {
			has_character = GRE_ioannis_metaxas
			NOT = { has_government = paternal_autocrat }
		}
		ai_chance = {
			base = 35
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		clr_country_flag = GRE_republicans_win_referendum
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = { has_socialist_government = yes }
			GRE_stop_being_syndicalist = yes
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = { faction_leader = { tag = BPL } }
			}
			leave_faction = yes
			separate_peace_all_wars = yes
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = no
		}
		add_popularity = {
			ideology = paternal_autocrat
			popularity = 0.10
		}
		hidden_effect = { news_event = gre.500 }
	}
	option = {
		log = "[GetLogInfo]: event gre.18 option gre.18.b"
		name = gre.18.b #Athanasios Klaras wrests control in a coup
		trigger = {
			has_socialist_government = no
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_ENT }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_AUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_RUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_GER }
				}
			}
		}
		clr_country_flag = GRE_republicans_win_referendum
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		leave_faction = yes
		separate_peace_all_wars = yes
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		GRE_become_syndicalist = yes
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
		hidden_effect = { news_event = gre.501 }
	}
	option = {
		log = "[GetLogInfo]: event gre.18 option gre.18.c"
		name = gre.18.c #The army takes control, promising free and democratic elections
		trigger = {
			OR = {
				has_government = national_populist
				has_government = paternal_autocrat
				has_socialist_government = yes
			}
			NOT = { has_cosmetic_tag = GRE_kingdom }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
				}
			}
		}
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = { has_socialist_government = yes }
			GRE_stop_being_syndicalist = yes
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = { faction_leader = { tag = BPL } }
			}
			leave_faction = yes
		}
		separate_peace_all_wars = yes
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = no
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.10
		}
		hidden_effect = {
			news_event = gre.502
			country_event = { id = gre.53 days = 60 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.18 option gre.18.e"
		name = gre.18.e #The King abdicates the throne, restoring the republic
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
				}
			}
		}
		trigger = {
			has_cosmetic_tag = GRE_kingdom
		}
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_decrease_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = -4 }
		}
		if = {
			limit = { has_country_flag = GRE_monarchists_win_referendum }
			set_country_flag = GRE_republicans_win_referendum
			clr_country_flag = GRE_monarchists_win_referendum
		}
		add_stability = -0.10
		add_political_power = -200
		GRE_restore_republic = yes
		if = {
			limit = {
				has_government = social_conservative
			}
			set_country_flag = GRE_was_soccon
		}
		else_if = {
			limit = {
				has_government = social_liberal
			}
			set_country_flag = GRE_was_soclib
		}
		else_if = {
			limit = {
				has_government = market_liberal
			}
			set_country_flag = GRE_was_marklib
		}
		else_if = {
			limit = {
				has_government = social_democrat
			}
			set_country_flag = GRE_was_socdem
		}
		country_event = { id = gre.54 days = 1 }
	}
	option = {
		log = "[GetLogInfo]: event gre.18 option gre.18.f"
		name = gre.18.f #The government steps down, promising immediate elections
		trigger = {
			has_elected_government = yes
			NOT = { has_cosmetic_tag = GRE_kingdom }
		}
		ai_chance = {
			base = 15
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
				}
			}
		}
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_increase_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = 4 }
		}
		if = {
			limit = {
				has_government = social_conservative
			}
			set_country_flag = GRE_was_soccon
		}
		else_if = {
			limit = {
				has_government = social_liberal
			}
			set_country_flag = GRE_was_soclib
		}
		else_if = {
			limit = {
				has_government = market_liberal
			}
			set_country_flag = GRE_was_marklib
		}
		else_if = {
			limit = {
				has_government = social_democrat
			}
			set_country_flag = GRE_was_socdem
		}
		country_event = { id = gre.54 days = 1 }
	}
}

# The Death of Ioannis Metaxas
country_event = {
	id = gre.19
	title = gre.19.t
	picture = GFX_report_event_GRE_metaxas

	desc = {
		text = gre.19.d.ishos
		trigger = {
			has_country_leader = { character = GRE_ioannis_metaxas }
		}
	}
	desc = {
		text = gre.19.d.nothos
		trigger = {
			NOT = { has_country_leader = { character = GRE_ioannis_metaxas } }
		}
	}

	is_triggered_only = yes

	trigger = {
		has_character = GRE_ioannis_metaxas
	}

	option = {
		log = "[GetLogInfo]: event gre.19 option gre.19.a"
		name = gre.19.a
		retire_character = GRE_ioannis_metaxas
	}
}

# Papanastasiou dies shortly after 1938 election
country_event = {
	id = gre.20
	title = gre.20.t
	picture = GFX_report_event_europe_funeral

	desc = {
		text = gre.20.d.ishos
		trigger = {
			has_country_leader = { character = GRE_alexandros_papanastasiou }
		}
	}
	desc = {
		text = gre.20.d.nothos
		trigger = {
			NOT = { has_country_leader = { character = GRE_alexandros_papanastasiou } }
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.20 option gre.20.a"
		name = gre.20.a
		if = {
			limit = { has_cosmetic_tag = GRE_kingdom }
			add_country_leader_role = {
				character = GRE_nikolaos_plastiras
				country_leader = { ideology = social_democrat_subtype }
			}
		}
		else = {
			add_country_leader_role = {
				character = GRE_nikolaos_plastiras
				country_leader = { ideology = social_democrat_subtype }
				promote_leader = yes
			}
		}
		retire_character = GRE_alexandros_papanastasiou
	}
}

# Gavrillides steps down in 1940
country_event = {
	id = gre.21
	title = gre.21.t
	picture = GFX_report_event_GRE_parliament

	desc = {
		text = gre.21.d.ishos
		trigger = {
			has_country_leader = { character = GRE_kostas_gavriilides }
		}
	}
	desc = {
		text = gre.21.d.nothos
		trigger = {
			NOT = { has_country_leader = { character = GRE_kostas_gavriilides } }
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.21 option gre.20.a"
		name = gre.20.a
		add_country_leader_role = {
			character = GRE_nikos_ploumpidis
			country_leader = { ideology = radical_socialist_subtype }
			promote_leader = yes
		}
		retire_character = GRE_kostas_gavriilides
	}
}

# George Papandreou is challenged for leadership
country_event = {
	id = gre.22
	title = gre.22.t
	desc = gre.22.d
	picture = GFX_report_event_GRE_papandreou

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		date > 1940.10.10
		has_country_leader = { character = GRE_georgios_papandreou }
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		log = "[GetLogInfo]: event gre.22 option gre.22.a"
		name = gre.22.a #Kanellopoulos wrests controls of the party
		ai_chance = { base = 70 }
		add_political_power = -50
		if = {
			limit = { has_cosmetic_tag = GRE_kingdom }
			add_country_leader_role = {
				character = GRE_panagiotis_kanellopoulos
				country_leader = { ideology = social_liberal_subtype }
			}
		}
		else = {
			add_country_leader_role = {
				character = GRE_panagiotis_kanellopoulos
				country_leader = { ideology = social_liberal_subtype }
				promote_leader = yes
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.22 option gre.22.b"
		name = gre.22.b #Papandreou holds onto leadership after a narrow vote
		ai_chance = { base = 30 }
		add_popularity = {
			ideology = social_liberal
			popularity = -0.10
		}
	}
}

# Themistoklis Sofoulis dies in 1949
country_event = {
	id = gre.23
	title = gre.23.t
	picture = GFX_report_event_europe_funeral

	desc = {
		text = gre.23.d.ishos
		trigger = {
			has_country_leader = { character = GRE_themistoklis_sofoulis }
		}
	}
	desc = {
		text = gre.23.d.nothos
		trigger = {
			NOT = { has_country_leader = { character = GRE_themistoklis_sofoulis } }
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.23 option gre.20.a"
		name = gre.20.a
		if = {
			limit = { has_cosmetic_tag = GRE_kingdom }
			add_country_leader_role = {
				character = GRE_konstantinos_tsatsos
				country_leader = { ideology = market_liberal_subtype }
			}
		}
		else = {
			add_country_leader_role = {
				character = GRE_konstantinos_tsatsos
				country_leader = { ideology = market_liberal_subtype }
				promote_leader = yes
			}
		}
		retire_character = GRE_themistoklis_sofoulis
	}
}

# Panagis Tsaldaris dies in 1936
country_event = {
	id = gre.24
	title = gre.24.t
	desc = gre.24.d
	picture = GFX_report_event_europe_funeral

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.24 option gre.24.a"
		name = gre.24.a
		if = {
			limit = { has_cosmetic_tag = GRE_kingdom }
			add_country_leader_role = {
				character = GRE_konstantinos_tsaldaris
				country_leader = { ideology = social_conservative_subtype }
			}
		}
		else = {
			add_country_leader_role = {
				character = GRE_konstantinos_tsaldaris
				country_leader = { ideology = social_conservative_subtype }
				promote_leader = yes
			}
		}
		retire_character = GRE_panagis_tsaldaris
		add_popularity = {
			ideology = social_conservative
			popularity = 0.03
		}
	}
}

### Election Events

# Elections prior to monarchy referendum
country_event = {
	id = gre.50
	title = gre.50.t
	desc = gre.50.d
	picture = GFX_report_event_AST_election

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
		NOT = { has_completed_focus = GRE_monarchy_referendum }
		has_capitulated = no
	}

	immediate = {
		if = {
			limit = {
				date > 1938.1.1
				NOT = { has_country_flag = GRE_1938_elections_happened }
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.50 option gre.50.a"
		name = gre.50.a #Social Conservative
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_conservative
			}
		}
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 1 }
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.50 option gre.50.b"
		name = gre.50.b #Social Liberal
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.50 option gre.50.c"
		name = gre.50.c #Market Liberal
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = market_liberal
			}
		}
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -1 }
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.50 option gre.50.e"
		name = gre.50.e #Social Democrats
		ai_chance = {
			base = 20
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
				}
			}
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = social_democrat
			}
		}
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -2 }
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.20
		}
	}
}

# Elections after a monarchist win
country_event = {
	id = gre.51
	title = gre.51.t
	picture = GFX_report_event_AST_election

	desc = {
		text = gre.51.d.noban
		trigger = {
			NOT = {
				has_country_flag = GRE_socialists_banned
			}
		}
	}
	desc = {
		text = gre.51.d.ban
		trigger = {
			has_country_flag = GRE_socialists_banned
		}
	}

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
		has_completed_focus = GRE_monarchy_referendum
		has_country_flag = GRE_monarchists_win_referendum
		has_capitulated = no
	}

	immediate = {
		if = {
			limit = {
				date > 1938.1.1
				NOT = {
					has_country_flag = GRE_1938_elections_happened
				}
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.51 option gre.51.a"
		name = gre.51.a #Social Conservative
		ai_chance = {
			base = 40
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_conservative
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.51 option gre.51.b"
		name = gre.51.b #Radical Socialists
		trigger = {
			compare_autonomy_state > kr_occupied_puppet
			NOT = { has_country_flag = GRE_socialists_banned }
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					AND = {
						OR = {
							has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_KEEP }
							has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_AUS_BEATEN }
							has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_INT_BEATEN }
						}
						SER = { has_socialist_government = no }
					}
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_ENT }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_AUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_RUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_GER }
				}
				NOT = { has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE } }
			}
		}
		set_politics = {
			ruling_party = radical_socialist
			elections_allowed = no
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.20
		}
		GRE_become_syndicalist = yes
		hidden_effect = { news_event = gre.503 }
	}
	option = {
		log = "[GetLogInfo]: event gre.51 option gre.51.c"
		name = gre.51.c #Social Liberal-Social Democrat coalition
		trigger = {
			NOT = {
				has_country_flag = GRE_socialists_banned
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 2
				date > 1939.1.1
				OR = {
					has_government = social_liberal
					has_government = social_democrat
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.10
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.10
		}
		set_temp_variable = { coalition_partner_var = token:social_democrat }
		add_to_coalition = yes
	}
	option = {
		log = "[GetLogInfo]: event gre.51 option gre.50.b"
		name = gre.50.b #Social Liberal
		trigger = {
			has_country_flag = GRE_socialists_banned
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
				}
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.51 option gre.50.c"
		name = gre.50.c #Market Liberal
		trigger = {
			has_country_flag = GRE_socialists_banned
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
				}
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
	}
}

# Elections after a republican win
country_event = {
	id = gre.52
	title = gre.52.t
	picture = GFX_report_event_AST_election

	desc = {
		text = gre.52.d.noban
		trigger = {
			NOT = {
				has_country_flag = GRE_socialists_banned
			}
		}
	}
	desc = {
		text = gre.52.d.ban
		trigger = {
			has_country_flag = GRE_socialists_banned
		}
	}

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
		has_completed_focus = GRE_monarchy_referendum
		NOT = { has_country_flag = GRE_monarchists_win_referendum }
		has_capitulated = no
	}

	immediate = {
		if = {
			limit = {
				date > 1938.1.1
				NOT = { has_country_flag = GRE_1938_elections_happened }
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.52 option gre.52.a"
		name = gre.52.a #Social Conservative
		ai_chance = {
			base = 10
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = social_conservative
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.52 option gre.52.b"
		name = gre.52.b #Social Liberal
		ai_chance = {
			base = 35
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.52 option gre.52.c"
		name = gre.52.c #Market Liberal
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.52 option gre.52.e"
		name = gre.52.e #Syndicalists
		trigger = {
			compare_autonomy_state > kr_occupied_puppet
			NOT = { has_country_flag = GRE_socialists_banned }
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_democrat
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					AND = {
						OR = {
							has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_KEEP }
							has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_AUS_BEATEN }
							has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_INT_BEATEN }
						}
						SER = { has_socialist_government = no }
					}
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_ENT }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_AUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_RUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_GER }
				}
				NOT = { has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE } }
			}
		}
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.10
		}
		set_temp_variable = { coalition_partner_var = token:radical_socialist }
		add_to_coalition = yes
		GRE_become_syndicalist = yes
		hidden_effect = { news_event = gre.504 }
	}
}

# Elections restoring democracy
country_event = {
	id = gre.53
	title = gre.53.t
	desc = gre.53.d
	picture = GFX_report_event_AST_election

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				date > 1938.1.1
				NOT = { has_country_flag = GRE_1938_elections_happened }
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.53 option gre.50.a"
		name = gre.50.a #Social Conservative
		trigger = {
			OR = {
				NOT = {
					has_country_flag = GRE_was_soccon
				}
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_conservative
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
				}
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_increase_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = 1 }
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.53 option gre.50.b"
		name = gre.50.b #Social Liberal
		trigger = {
			OR = {
				NOT = {
					has_country_flag = GRE_was_soclib
				}
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
				}
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.53 option gre.50.c"
		name = gre.50.c #Market Liberal
		trigger = {
			OR = {
				NOT = {
					has_country_flag = GRE_was_marklib
				}
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = market_liberal
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_decrease_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = -1 }
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.53 option gre.50.e"
		name = gre.50.e #Social Democrats
		trigger = {
			OR = {
				NOT = {
					has_country_flag = GRE_was_socdem
				}
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
			}
		}
		ai_chance = {
			base = 20
			modifier = {
				factor = 5
				date > 1939.1.1
				has_government = social_democrat
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_decrease_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = -2 }
		}
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.20
		}
	}
}

# Elections after a loss in the Balkan War
country_event = {
	id = gre.54
	title = gre.54.t
	desc = gre.54.d
	picture = GFX_report_event_AST_election

	is_triggered_only = yes

	immediate = {
		if = {
			limit = {
				date > 1938.1.1
				NOT = { has_country_flag = GRE_1938_elections_happened }
			}
			set_country_flag = GRE_1938_elections_happened
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.54 option gre.50.a"
		name = gre.50.a #Social Conservative
		trigger = {
			OR = {
				NOT = {
					has_country_flag = GRE_was_soccon
				}
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
			}
		}
		ai_chance = {
			base = 35
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_conservative
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_increase_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = 1 }
		}
		set_politics = {
			ruling_party = social_conservative
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_conservative
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.54 option gre.50.b"
		name = gre.50.b #Social Liberal
		trigger = {
			OR = {
				NOT = {
					has_country_flag = GRE_was_soclib
				}
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
			}
		}
		ai_chance = {
			base = 25
			modifier = {
				factor = 2
				date > 1939.1.1
				has_government = social_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		set_politics = {
			ruling_party = social_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.54 option gre.50.c"
		name = gre.50.c #Market Liberal
		trigger = {
			OR = {
				NOT = {
					has_country_flag = GRE_was_marklib
				}
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
			}
		}
		ai_chance = {
			base = 10
			modifier = {
				factor = 3
				date > 1939.1.1
				has_government = market_liberal
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_decrease_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = -1 }
		}
		set_politics = {
			ruling_party = market_liberal
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = market_liberal
			popularity = 0.20
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.54 option gre.50.e"
		name = gre.50.e #Social Democrats
		trigger = {
			OR = {
				NOT = {
					has_country_flag = GRE_was_socdem
				}
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
				has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
			}
		}
		ai_chance = {
			base = 30
			modifier = {
				factor = 5
				date > 1939.1.1
				has_government = social_democrat
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		add_political_power = 100
		add_stability = 0.05
		clr_country_flag = GRE_was_soccon
		clr_country_flag = GRE_was_soclib
		clr_country_flag = GRE_was_marklib
		clr_country_flag = GRE_was_socdem
		if = {
			limit = { NOT = { has_completed_focus = GRE_monarchy_referendum } }
			custom_effect_tooltip = GRE_decrease_monarchist
			modify_country_flag = { flag = gre_monarchist_sympathies value = -2 }
		}
		set_politics = {
			ruling_party = social_democrat
			election_frequency = 48
			elections_allowed = yes
		}
		add_popularity = {
			ideology = social_democrat
			popularity = 0.20
		}
	}
}

### Monarchy Referendum Events

# Referendum begins
country_event = {
	id = gre.100
	title = gre.100.t
	desc = gre.100.d
	picture = GFX_report_event_GRE_referendum

	fire_only_once = yes
	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.100 option gre.100.a"
		name = gre.100.a
		add_stability = -0.05
		hidden_effect = {
			country_event = { id = gre.101 days = 5 } #Monarchist pamphlets
			country_event = { id = gre.102 days = 15 } #Republican campaign
			country_event = { id = gre.103 days = 25 } #Aristrocrat lobbying
			country_event = { id = gre.104 days = 35 } #Socialist speech
			country_event = { id = gre.105 days = 45 } #Pro-Monarchist Riot
			country_event = { id = gre.106 days = 45 } #Pro-Republican Riot
			country_event = { id = gre.107 days = 55 } #Monarchists might win?
			country_event = { id = gre.108 days = 55 } #Republicans might win?
		}
	}
}

# Monarchist pamphlets
country_event = {
	id = gre.101
	title = gre.101.t
	desc = gre.101.d
	picture = GFX_report_event_generic_rally2

	is_triggered_only = yes

	trigger = {
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.101 option gre.101.a"
		name = gre.101.a #Allow them to distribute
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_democrat
			}
		}
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 2 }
	}
	option = {
		log = "[GetLogInfo]: event gre.101 option gre.101.b"
		name = gre.101.b #We must suppress this nonsense
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
			}
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -1 }
	}
}

# Republican campaign
country_event = {
	id = gre.102
	title = gre.102.t
	desc = gre.102.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.102 option gre.102.a"
		name = gre.102.a # Yes, we should fund this
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
			}
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -3 }
	}
	option = {
		log = "[GetLogInfo]: event gre.102 option gre.102.b"
		name = gre.102.b # No, we should not get involved
		ai_chance = { base = 50 }
	}
	option = {
		log = "[GetLogInfo]: event gre.102 option gre.102.c"
		name = gre.102.c # Discourage this talk within our government
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_democrat
			}
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
			}
		}
		add_political_power = -25
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 1 }
	}
}

# Aristocratic lobbying
country_event = {
	id = gre.103
	title = gre.103.t
	desc = gre.103.d
	picture = GFX_report_event_GRE_metaxas

	is_triggered_only = yes

	trigger = {
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.103 option gre.103.a"
		name = gre.103.a # We'll allow it
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_democrat
			}
		}
		add_political_power = 25
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 2 }
	}
	option = {
		log = "[GetLogInfo]: event gre.103 option gre.103.b"
		name = gre.103.b # Place a moratorium on this lobbying
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.5
				has_political_power < 0
			}
			modifier = {
				factor = 0
				has_political_power < -50
			}
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
		}
		add_political_power = -50
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -1 }
	}
}

# Socialist speech
country_event = {
	id = gre.104
	title = gre.104.t
	desc = gre.104.d
	picture = GFX_report_event_GRE_zachariadis

	is_triggered_only = yes

	trigger = {
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.104 option gre.104.a"
		name = gre.104.a # Allow it to proceed
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.05
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.03
		}
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -2 }
	}
	option = {
		log = "[GetLogInfo]: event gre.104 option gre.104.b"
		name = gre.104.b # Send in the police to break it up
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_democrat
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 1 }
	}
}

# Pro-Monarchist riot
country_event = {
	id = gre.105
	title = gre.105.t
	desc = gre.105.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	trigger = {
		has_country_flag = {
			flag = gre_monarchist_sympathies
			value < 2
		}
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.105 option gre.105.a"
		name = gre.105.a # Keep it contained, but use leniency
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.2
				has_government = social_democrat
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 2 }
	}
	option = {
		log = "[GetLogInfo]: event gre.105 option gre.105.b"
		name = gre.105.b # Shut this down with extreme prejudice
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_liberal
			}
			modifier = {
				factor = 0.2
				has_government = social_conservative
			}
			modifier = {
				factor = 1.5
				has_government = market_liberal
			}
		}
		add_stability = -0.06
		set_temp_variable = { ideology_change_var = -0.1 }
		change_ruling_party_popularity = yes
		modify_country_flag = { flag = gre_monarchist_sympathies value = -1 }
	}
}

# Pro-Republican riot
country_event = {
	id = gre.106
	title = gre.106.t
	desc = gre.106.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	trigger = {
		has_country_flag = {
			flag = gre_monarchist_sympathies
			value > 4
		}
		focus_progress = {
			focus = GRE_monarchy_referendum
			progress > 0
		}
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
		}
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.106 option gre.105.a"
		name = gre.105.a # Keep it contained, but use leniency
		ai_chance = {
			base = 50
			modifier = {
				factor = 0.2
				has_government = social_conservative
			}
			modifier = {
				factor = 1.5
				has_government = market_liberal
			}
		}
		add_stability = -0.03
		custom_effect_tooltip = GRE_decrease_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = -3 }
	}
	option = {
		log = "[GetLogInfo]: event gre.106 option gre.105.b"
		name = gre.105.b # Shut this down with extreme prejudice
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_liberal
			}
			modifier = {
				factor = 0.2
				has_government = social_democrat
			}
		}
		add_stability = -0.06
		set_temp_variable = { ideology_change_var = -0.1 }
		change_ruling_party_popularity = yes
		custom_effect_tooltip = GRE_increase_monarchist
		modify_country_flag = { flag = gre_monarchist_sympathies value = 1 }
	}
}

# Monarchists might win?
country_event = {
	id = gre.107
	title = gre.107.t
	desc = gre.107.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	trigger = {
		OR = {
			has_country_flag = { flag = gre_monarchist_sympathies value > 0 }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
		}
		focus_progress = { focus = GRE_monarchy_referendum progress > 0 }
		has_elected_government = yes
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.107 option gre.107.a"
		name = gre.107.a # We need to rig the outcome in favor of the republic
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_government = social_conservative
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
				}
			}
			modifier = {
				factor = 0.5
				has_government = social_liberal
			}
			modifier = {
				factor = 2
				has_government = social_democrat
			}
		}
		custom_effect_tooltip = GRE_rigged_for_republic
		set_country_flag = GRE_republic_rig
	}
	option = {
		log = "[GetLogInfo]: event gre.107 option gre.107.b"
		name = gre.107.b # Might win? We must rig the referendum to ensure it
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_government = social_democrat
			}
			modifier = {
				factor = 0.5
				OR = {
					has_government = social_liberal
					has_government = market_liberal
				}
			}
			modifier = {
				factor = 2
				has_government = social_conservative
			}
			modifier = {
				factor = 0.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 3
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
				}
			}
		}
		custom_effect_tooltip = GRE_rigged_for_monarchy
		set_country_flag = GRE_monarchy_rig
	}
	option = {
		log = "[GetLogInfo]: event gre.107 option gre.107.c"
		name = gre.107.c # Do nothing - we will accept the legitimate results
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
				}
			}
		}
	}
}

# Republicans might win?
country_event = {
	id = gre.108
	title = gre.108.t
	desc = gre.108.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	trigger = {
		OR = {
			has_country_flag = { flag = gre_monarchist_sympathies value < 1 }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
		}
		focus_progress = { focus = GRE_monarchy_referendum progress > 0 }
		has_elected_government = yes
		NOT = {
			has_completed_focus = GRE_monarchy_referendum
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
			has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.108 option gre.108.a"
		name = gre.108.a # We need to rig the outcome in favor of the monarchy
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_government = social_democrat
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 0.5
				OR = {
					has_government = social_liberal
					has_government = market_liberal
				}
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 2
				has_government = social_conservative
			}
		}
		custom_effect_tooltip = GRE_rigged_for_monarchy
		set_country_flag = GRE_monarchy_rig
	}
	option = {
		log = "[GetLogInfo]: event gre.108 option gre.107.b"
		name = gre.107.b # Might win? We must rig the referendum to ensure it
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 0.5
				has_government = social_liberal
			}
			modifier = {
				factor = 2
				has_government = social_democrat
			}
			modifier = {
				factor = 0.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -2
				}
			}
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		custom_effect_tooltip = GRE_rigged_for_republic
		set_country_flag = GRE_republic_rig
	}
	option = {
		log = "[GetLogInfo]: event gre.108 option gre.107.c"
		name = gre.107.c # Do nothing - we will accept the legitimate results
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
	}
}

# Referendum occurs
country_event = {
	id = gre.109
	title = gre.109.t
	desc = gre.109.d
	picture = GFX_report_event_GRE_referendum

	is_triggered_only = yes
	fire_only_once = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_monarchists_win_referendum
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.109 option gre.109.a"
		name = gre.109.a
		if = {
			limit = {
				OR = {
					has_country_flag = GRE_republic_rig
					has_country_flag = GRE_monarchy_rig
				}
			}
			custom_effect_tooltip = GRE_referendum_is_rigged
		}
		if = {
			limit = {
				NOT = {
					has_country_flag = GRE_republic_rig
				}
				OR = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 5
					}
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
				}
			}
			custom_effect_tooltip = GRE_monarchy_guaranteed
		}
		else_if = {
			limit = {
				NOT = {
					has_country_flag = GRE_monarchy_rig
				}
				OR = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -5
					}
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
				}
			}
			custom_effect_tooltip = GRE_republic_guaranteed
		}
		else_if = {
			limit = {
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 2
				}
			}
			custom_effect_tooltip = GRE_monarchy_likely
		}
		else_if = {
			limit = {
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -1
				}
			}
			custom_effect_tooltip = GRE_republic_likely
		}
		else = {
			custom_effect_tooltip = GRE_referendum_close
		}
		hidden_effect = {
			country_event = { id = gre.110 days = 3 }
		}
	}
}

# Bounce event to determine victor
country_event = {
	id = gre.110
	hidden = yes
	is_triggered_only = yes

	option = { #Republicans win
		log = "[GetLogInfo]: event gre.110 option 1"
		trigger = {
			NOT = {
				AND = {
					is_ai = yes
					OR = {
						has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
						has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
						has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
						has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
						has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
					}
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = GRE_monarchy_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value > 5
					}
				}
			}
			modifier = {
				factor = 1.2
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 0
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -2
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -1
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -3
				}
			}
			modifier = {
				factor = 2.0
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -2
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -4
				}
			}
			modifier = {
				factor = 2.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -3
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -5
				}
			}
			modifier = {
				factor = 3.0
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -4
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > -6
				}
			}
		}
		country_event = gre.111
	}
	option = { #Monarchists win
		log = "[GetLogInfo]: event gre.110 option 2"
		trigger = {
			NOT = {
				AND = {
					is_ai = yes
					OR = {
						has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_REPUBLIC }
						has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
						has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
					}
				}
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_country_flag = GRE_republic_rig
					has_country_flag = {
						flag = gre_monarchist_sympathies
						value < -5
					}
				}
			}
			modifier = {
				factor = 1.2
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 0
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 2
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 1
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 3
				}
			}
			modifier = {
				factor = 2.0
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 2
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 4
				}
			}
			modifier = {
				factor = 2.5
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 3
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 5
				}
			}
			modifier = {
				factor = 3.0
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 4
				}
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < 6
				}
			}
		}
		country_event = gre.112
	}
}

# Republican victory
country_event = {
	id = gre.111
	title = gre.111.t
	desc = gre.111.d
	picture = GFX_report_event_GRE_crowd2

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_monarchists_win_referendum
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.111 option gre.111.a"
		name = gre.111.a
		set_country_flag = GRE_republicans_win_referendum
		add_stability = 0.05
		hidden_effect = {
			if = {
				limit = {
					has_country_flag = GRE_republic_rig
					has_character = GRE_ioannis_metaxas
				}
				country_event = { id = gre.113 days = 3 }
			}
			news_event = gre.509
		}
	}
}

# Monarchist victory
country_event = {
	id = gre.112
	title = gre.112.t
	desc = gre.112.d
	picture = GFX_report_event_GRE_royal

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
		NOT = {
			has_country_flag = GRE_republicans_win_referendum
			has_country_flag = GRE_monarchists_win_referendum
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.112 option gre.112.a"
		name = gre.112.a
		set_country_flag = GRE_monarchists_win_referendum
		add_stability = 0.05
		hidden_effect = {
			if = {
				limit = { has_country_flag = GRE_monarchy_rig }
				country_event = { id = gre.113 days = 3 }
			}
		}
	}
}

# Bounce effect to determine whether rig was discovered
country_event = {
	id = gre.113
	title = gre.113.t
	picture = GFX_report_event_GRE_crowd2

	desc = {
		text = gre.113.d.monarchist
		trigger = {
			has_country_flag = GRE_monarchists_win_referendum
		}
	}
	desc = {
		text = gre.113.d.republican
		trigger = {
			has_country_flag = GRE_republicans_win_referendum
		}
	}

	is_triggered_only = yes

	trigger = {
		is_subject = no
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.113 option gre.113.a"
		name = gre.113.a # The rigging is discovered!
		ai_chance = {
			base = 25
			modifier = {
				factor = 0
				has_war = yes
				NOT = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = GRE_republic_rig
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 2
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = GRE_republic_rig
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 3
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = GRE_republic_rig
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 4
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = GRE_republic_rig
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value > 5
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = GRE_monarchy_rig
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -2
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = GRE_monarchy_rig
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -3
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = GRE_monarchy_rig
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -4
				}
			}
			modifier = {
				factor = 1.5
				has_country_flag = GRE_monarchy_rig
				has_country_flag = {
					flag = gre_monarchist_sympathies
					value < -5
				}
			}
		}
		if = {
			limit = { has_country_flag = GRE_republic_rig }
			country_event = { id = gre.114 hours = 3 }
			else = {
				country_event = { id = gre.115 hours = 3 }
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.113 option gre.113.b"
		name = gre.113.b # No evidence is uncovered and the protests die down
		ai_chance = {
			base = 75
			modifier = {
				factor = 0
				has_country_flag = GRE_republic_rig
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
				}
			}
			modifier = {
				factor = 0
				has_country_flag = GRE_monarchy_rig
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
			}
		}
		add_political_power = -100
		add_stability = -0.05
	}
}

# Metaxas overthrows a rigged republic vote
country_event = {
	id = gre.114
	title = gre.114.t
	desc = gre.114.d
	picture = GFX_report_event_GRE_metaxas

	is_triggered_only = yes

	trigger = {
		has_character = GRE_ioannis_metaxas
	}

	option = {
		log = "[GetLogInfo]: event gre.114 option gre.114.a"
		name = gre.114.a
		clr_country_flag = GRE_republicans_win_referendum
		add_stability = -0.10
		add_political_power = -200
		if = {
			limit = { is_subject = yes }
			overlord = {
				country_event = { id = gre.116 days = 1 }
				set_autonomy = {
					target = ROOT
					autonomy_state = autonomy_free
				}
			}
		}
		if = {
			limit = {
				is_in_faction = yes
				NOT = { is_in_faction_with = BPL }
			}
			leave_faction = yes
			if = {
				limit = { has_war = yes }
				every_enemy_country = {
					limit = {
						is_valid_peace_target = yes
						NOT = {
							any_owned_state = { is_claim_or_core_of_ROOT = yes }
							any_allied_country = {
								any_owned_state = { is_claim_or_core_of_ROOT = yes }
							}
						}
					}
					white_peace_with_ROOT = yes
				}
			}
		}
		set_politics = {
			ruling_party = paternal_autocrat
			elections_allowed = no
		}
		add_popularity = {
			ideology = paternal_autocrat
			popularity = 0.10
		}
		hidden_effect = { news_event = gre.505 }
	}
}

# Syndicalists overthrow a rigged monarchy vote
country_event = {
	id = gre.115
	title = gre.115.t
	desc = gre.115.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.115 option gre.114.a"
		name = gre.114.a
		clr_country_flag = GRE_monarchists_win_referendum
		add_stability = -0.10
		add_political_power = -200
		set_politics = {
			ruling_party = syndicalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
		GRE_become_syndicalist = yes
		hidden_effect = { news_event = gre.506 }
	}
}

# Greece breaks puppet status after coup
country_event = {
	id = gre.116
	title = gre.116.t
	picture = GFX_report_event_generic_diplomacy2

	is_triggered_only = yes

	trigger = {
		can_declare_war_on = FROM
	}

	desc = {
		text = gre.116.d.metaxas
		trigger = {
			FROM = { has_government = paternal_autocrat }
		}
	}
	desc = {
		text = gre.116.d.syndicalist
		trigger = {
			FROM = { has_government = syndicalist }
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.116 option gre.116.a"
		name = gre.116.a #They cannot escape so easily
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				has_war = yes
			}
			modifier = {
				factor = 0
				has_elected_government = yes
			}
		}
		create_wargoal = {
			type = annex_everything
			target = FROM
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.116 option gre.116.b"
		name = gre.116.b #We have little choice but to let them be
		ai_chance = {
			base = 70
			modifier = {
				factor = 0.5
				has_authoritarian_government = yes
			}
		}
		add_political_power = -50
		add_opinion_modifier = {
			target = FROM
			modifier = KR_outraged
		}
	}
}

# Question of Monarchists (fired by focus)
country_event = {
	id = gre.117
	title = gre.117.t
	desc = gre.117.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.117 option gre.117.a"
		name = gre.117.a #Purging them is the only way
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_government = social_conservative
			}
			modifier = {
				factor = 2
				has_government = social_democrat
			}
		}
		add_stability = -0.05
		add_political_power = 50
		add_popularity = {
			ideology = social_conservative
			popularity = -0.10
		}
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = -0.10
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.117 option gre.117.b"
		name = gre.117.b #Let them remain - the question is settled
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				has_government = social_liberal
			}
		}
		add_stability = 0.05
		add_political_power = -100
	}
}

# Question of Republicans (fired by focus)
country_event = {
	id = gre.118
	title = gre.118.t
	desc = gre.118.d
	picture = GFX_report_event_GRE_parliament

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.118 option gre.117.a"
		name = gre.117.a #Purging them is the only way
		ai_chance = { base = 50 }
		add_stability = -0.05
		add_political_power = 50
		add_popularity = {
			ideology = authoritarian_democrat
			popularity = 0.10
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.118 option gre.117.b"
		name = gre.117.b #Let them remain - the question is settled
		ai_chance = { base = 50 }
		add_stability = 0.05
		add_political_power = -100
	}
}

# Rise of the radical socialists after monarchist win
country_event = {
	id = gre.119
	title = gre.119.t
	desc = gre.119.d
	picture = GFX_report_event_GRE_zachariadis

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = GRE_monarchists_win_referendum
		has_completed_focus = GRE_monarchy_referendum
		has_elected_government = yes
	}

	mean_time_to_happen = {
		days = 15
	}

	option = {
		log = "[GetLogInfo]: event gre.119 option gre.119.a"
		name = gre.119.a #Rather worrying...
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
				NOT = { has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE } }
			}
		}
		add_stability = -0.05
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.10
		}
		hidden_effect = {
			country_event = { id = gre.120 days = 10 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.119 option gre.119.b"
		name = gre.119.b #Ban them from the election
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_ENT }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_AUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_RUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_GER }
					has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_KEEP }
					has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_AUS_BEATEN }
					has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_INT_BEATEN }
				}
			}
		}
		custom_effect_tooltip = GRE_socialists_banned_elections
		set_country_flag = GRE_socialists_banned
		add_stability = -0.10
	}
}

# Liberals and moderate socialists form coalition
country_event = {
	id = gre.120
	title = gre.120.t
	desc = gre.120.d
	picture = GFX_report_event_GRE_papandreou

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.120 option gre.120.a"
		name = gre.120.a
		add_popularity = {
			ideology = social_liberal
			popularity = 0.03
		}
	}
}

# Left unites after republican win
country_event = {
	id = gre.121
	title = gre.121.t
	desc = gre.121.d
	picture = GFX_report_event_GRE_zachariadis

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = GRE_republicans_win_referendum
		has_completed_focus = GRE_monarchy_referendum
		has_elected_government = yes
	}

	mean_time_to_happen = {
		days = 15
	}

	option = {
		log = "[GetLogInfo]: event gre.121 option gre.121.a"
		name = gre.121.a
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
				}
				NOT = { has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE } }
			}
		}
		add_stability = -0.05
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.121 option gre.121.b"
		name = gre.121.b #Ban them from the election
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCCON }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_MARLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCLIB }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_SOCDEM }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_DEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_ALEXANDER_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_GEORGE_AUTDEM }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_PAUL_PATAUT }
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_METAXAS_PATAUT }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_ENT }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_AUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_RUS }
					has_game_rule = { rule = GRE_forpol option = GRE_FORPOL_GER }
					has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_KEEP }
					has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_AUS_BEATEN }
					has_game_rule = { rule = BPL_dissolution option = BPL_DISSOLUTION_GRE_INT_BEATEN }
				}
			}
		}
		custom_effect_tooltip = GRE_socialists_banned_elections
		set_country_flag = GRE_socialists_banned
		add_stability = -0.10
	}
}

# Civil war begins after socialists are banned from the elections
country_event = {
	id = gre.122
	title = gre.122.t
	desc = gre.122.d
	picture = GFX_report_event_GRE_aris

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = GRE_socialists_banned
		has_socialist_government = no
		is_subject = no
		num_divisions > 4
		surrender_progress < 0.01
		owns_state = 768 #Thessaly
		NOT = { has_country_flag = GRE_had_civil_war }
	}

	mean_time_to_happen = {
		months = 1
	}

	immediate = {
		set_country_flag = GRE_had_civil_war
		hidden_effect = { country_lock_all_division_template = yes }
	}

	option = {
		log = "[GetLogInfo]: event gre.122 option gre.122.a"
		name = gre.122.a
		hidden_effect = { country_lock_all_division_template = no }
		if = {
			limit = {
				is_in_faction = yes
				is_subject = no
			}
			set_variable = { GRE_previous_faction_leader = faction_leader }
			leave_faction = yes
		}
		set_temp_variable = { GRE_civil_war_divisions_infantry = num_divisions }
		set_temp_variable = { GRE_civil_war_divisions_cavalry = num_divisions }
		add_named_threat = {
			threat = 3
			name = GRE_civil_war_threat
		}
		civil_war_set_flag_to_restore_elections = yes
		start_civil_war = {
			### basics ###
			ideology = syndicalist
			size = 0.01
			navy_ratio = 0

			### states ###
			capital = 768
			states = { 185 731 768 1076 }

			### characters ###
			keep_all_characters = yes
		}
		# civil wars always transfer some units, so the workaround transfers them back, then spawns new units instead
		multiply_temp_variable = { GRE_civil_war_divisions_infantry = 0.7 }
		multiply_temp_variable = { GRE_civil_war_divisions_cavalry = 0.3 }
		hidden_effect = {
			random_other_country = {
				limit = {
					original_tag = ROOT
					civilwar_target = ROOT
				}
				set_cosmetic_tag = GRE_civil_war_socialist
				GRE_become_syndicalist = yes
				GRE_uncomplete_expansion_focuses = yes

				ROOT = { GRE_nikos_zachariadis = { set_nationality = PREV.PREV } }
				GRE_nikos_zachariadis = { promote_character = yes }
				GRE_uncomplete_focuses = yes

				copy_popularities_of_ROOT = yes
				add_popularity = { ideology = syndicalist popularity = 0.35 }

				GRE_naval_variants = yes
				GRE_spawn_civil_war_units = yes
			}
			if = {
				limit = { has_variable = GRE_previous_faction_leader }
				var:GRE_previous_faction_leader = {
					give_guarantee = ROOT
					diplomatic_relation = { country = ROOT relation = non_aggression_pact }
					ROOT = { give_military_access = PREV }
				}
			}
		}
		if = {
			limit = { has_war_with = BUL }
			BUL = { country_event = bulfor.38 }
		}
	}
}

### SYNDICALIST EVENTS

# First Hellenic Congress (fired by focus)
country_event = {
	id = gre.150
	title = gre.150.t
	desc = gre.150.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.150 option gre.150.a"
		name = gre.150.a # Zachariadis remains in control
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_TOTALIST }
			}
		}
		add_stability = 0.05
		meta_effect = {
			text = {
				set_politics = {
					ruling_party = syndicalist
					last_election = "[CURRENT_DATE]"
					election_frequency = 48
					elections_allowed = yes
				}
			}
			CURRENT_DATE = "[?global.date.GetDateStringNoHour]"
		}
		add_popularity = {
			ideology = syndicalist
			popularity = 0.10
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.150 option gre.150.b"
		name = gre.150.b # Athanasios Klaras commands the room, in the end
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = GRE_referendum option = GRE_REFERENDUM_SYNDIE }
					has_game_rule = { rule = GRE_election option = GRE_ELECTION_RADSOC_SYNDIE }
				}
			}
		}
		set_politics = {
			ruling_party = totalist
			elections_allowed = no
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.10
		}
	}
}

# Establishing the Communes (fired by focus)
country_event = {
	id = gre.151
	title = gre.151.t
	desc = gre.151.d
	picture = GFX_report_event_GRE_demonstration

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.151 option gre.151.a"
		name = gre.151.a #Expand the industrial base, regardless of the cost
		add_stability = -0.10
		add_one_random_military_factory = yes
		add_one_random_military_factory = yes
		add_one_random_civilian_factory = yes
	}
	option = {
		log = "[GetLogInfo]: event gre.151 option gre.151.b"
		name = gre.151.b #Ease the country into this, with incentives
		add_stability = 0.10
		add_political_power = -50
		add_one_random_civilian_factory = yes
	}
	option = {
		log = "[GetLogInfo]: event gre.151 option gre.151.c"
		name = gre.151.c #The unions must drive this change - let them take charge
		add_stability = 0.05
		add_political_power = 50
		add_ideas = GRE_unions_in_charge
	}
}

# Rebuilding the Nation (fired by focus)
country_event = {
	id = gre.152
	title = gre.152.t
	desc = gre.152.d
	picture = GFX_report_event_GRE_aris

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.152 option gre.152.a"
		name = gre.152.a #We must build our military power
		add_one_random_military_factory = yes
		add_one_random_military_factory = yes
		add_one_random_military_factory = yes
	}
	option = {
		log = "[GetLogInfo]: event gre.152 option gre.152.b"
		name = gre.152.b #A strong civilian industry will be our foundation
		add_ideas = GRE_totalist_industry
		add_one_random_civilian_factory = yes
		add_one_random_civilian_factory = yes
	}
	option = {
		log = "[GetLogInfo]: event gre.152 option gre.152.c"
		name = gre.152.c #Unity is more important than the economy
		add_ideas = GRE_secret_police
		add_one_random_military_factory = yes
		add_one_random_civilian_factory = yes
	}
}

# Syndicalists march after Black Friday
country_event = {
	id = gre.153
	title = gre.153.t
	desc = gre.153.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.153 option gre.153.a"
		name = gre.153.a #Crack down on these rabble-rousers
		add_stability = -0.08
	}
	option = {
		log = "[GetLogInfo]: event gre.153 option gre.153.b"
		name = gre.153.b #Keep them contained, but we want no violence
		add_political_power = -50
		add_popularity = {
			ideology = syndicalist
			popularity = 0.06
		}
		add_popularity = {
			ideology = totalist
			popularity = 0.03
		}
	}
}

# Farmers march after Black Friday
country_event = {
	id = gre.154
	title = gre.154.t
	desc = gre.154.d
	picture = GFX_report_event_GRE_riot

	is_triggered_only = yes

	trigger = {
		has_elected_government = yes
	}

	option = {
		log = "[GetLogInfo]: event gre.154 option gre.154.a"
		name = gre.154.a
		add_stability = -0.03
		add_popularity = {
			ideology = social_democrat
			popularity = 0.02
		}
		add_popularity = {
			ideology = radical_socialist
			popularity = 0.03
		}
		hidden_effect = {
			country_event = { id = gre.153 days = 15 }
		}
	}
}

# Plot to replace Athanasios Klaras
country_event = {
	id = gre.155
	title = gre.155.t
	desc = gre.155.d
	picture = GFX_report_event_GRE_aris

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_leader = { character = GRE_athanasios_klaras }
		date > 1941.1.1
	}

	mean_time_to_happen = {
		months = 10
	}

	immediate = {
		hidden_effect = {
			event_target:original_greece = { GRE_georgios_siantos = { set_nationality = PREV.PREV } }
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.155 option gre.155.a"
		name = gre.155.a #Georgios Santos takes over party leadership
		ai_chance = { base = 75 }
		add_stability = -0.10
		promote_character = GRE_georgios_siantos
	}
	option = {
		log = "[GetLogInfo]: event gre.155 option gre.155.b"
		name = gre.155.b #Siantos is executed - Athanasios Klaras rules
		ai_chance = { base = 25 }
		if = {
			limit = { has_character = GRE_georgios_siantos }
			retire_character = GRE_georgios_siantos
		}
		add_political_power = -100
	}
}

# Second Hellenic Congress
country_event = {
	id = gre.156
	title = gre.156.t
	desc = gre.156.d
	picture = GFX_report_event_AST_federationalist

	is_triggered_only = yes

	trigger = {
		has_government = syndicalist
		NOT = { has_country_flag = GRE_had_second_congress }
	}

	immediate = {
		set_country_flag = GRE_had_second_congress
		hidden_effect = {
			event_target:original_greece = { GRE_konstantinos_speras = { set_nationality = PREV.PREV } }
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.156 option gre.156.a"
		name = gre.156.a #Zachariadis ushers in a new cabinet and retains control
		add_stability = 0.05
	}
	option = {
		log = "[GetLogInfo]: event gre.156 option gre.156.b"
		name = gre.156.b #Konstantinos Speras wins the most votes and becomes chairman
		add_political_power = 75
		promote_character = GRE_konstantinos_speras
	}
}

# Third Hellenic Congress
country_event = {
	id = gre.157
	title = gre.157.t
	picture = GFX_report_event_AST_federationalist

	desc = {
		text = gre.157.d.zach
		trigger = {
			has_country_leader = { character = GRE_nikos_zachariadis }
		}
	}
	desc = {
		text = gre.157.d.notzach
		trigger = {
			NOT = { has_country_leader = { character = GRE_nikos_zachariadis } }
		}
	}

	is_triggered_only = yes

	trigger = {
		has_government = syndicalist
		has_country_flag = GRE_had_second_congress
	}

	immediate = {
		hidden_effect = {
			event_target:original_greece = {
				GRE_konstantinos_speras = { set_nationality = PREV.PREV }
				GRE_nikos_beloyannis = { set_nationality = PREV.PREV }
			}
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.157 option gre.157.a"
		name = gre.157.a #Konstantinos Speras maintains control
		trigger = {
			NOT = { has_country_leader = { character = GRE_nikos_zachariadis } }
		}
		ai_chance = { base = 40 }
		add_stability = 0.05
	}
	option = {
		log = "[GetLogInfo]: event gre.157 option gre.157.b"
		name = gre.157.b #Konstantinos Speras wins the majority of the vote
		trigger = {
			has_country_leader = { character = GRE_nikos_zachariadis }
		}
		ai_chance = { base = 40 }
		add_political_power = 50
		promote_character = GRE_konstantinos_speras
	}
	option = {
		log = "[GetLogInfo]: event gre.157 option gre.157.c"
		name = gre.157.c #Upstart Nikos Beloyannis wins over the council
		ai_chance = { base = 60 }
		add_political_power = 75
		add_country_leader_role = {
			character = GRE_nikos_beloyannis
			country_leader = { ideology = syndicalist_subtype }
			promote_leader = yes
		}
	}
}

# Metaxas tries to overthrow the syndicalists not long after they take power
country_event = {
	id = gre.158
	title = gre.158.t
	desc = gre.158.d
	picture = GFX_report_event_GRE_metaxas

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_character = GRE_ioannis_metaxas
		has_socialist_government = yes
		is_subject = no
		surrender_progress < 0.01
		num_divisions > 4
		owns_state = 768 #Thessaly
		NOT = { has_country_flag = GRE_had_civil_war }
	}

	mean_time_to_happen = {
		months = 1
	}

	immediate = {
		set_country_flag = GRE_had_civil_war
		hidden_effect = { country_lock_all_division_template = yes }
	}

	option = {
		log = "[GetLogInfo]: event gre.158 option gre.158.a"
		name = gre.158.a
		hidden_effect = {
			country_lock_all_division_template = no
			set_cosmetic_tag = GRE_civil_war_socialist
		}
		if = {
			limit = {
				is_in_faction = yes
				is_subject = no
			}
			set_variable = { GRE_previous_faction_leader = faction_leader }
			leave_faction = yes
		}
		set_temp_variable = { GRE_civil_war_divisions_infantry = num_divisions }
		set_temp_variable = { GRE_civil_war_divisions_cavalry = num_divisions }
		add_named_threat = {
			threat = 3
			name = GRE_civil_war_threat
		}
		civil_war_set_flag_to_restore_elections = yes
		start_civil_war = {
			### basics ###
			ideology = paternal_autocrat
			size = 0.01
			navy_ratio = 0

			### states ###
			capital = 768
			states = { 185 731 768 1076 }

			### characters ###
			keep_all_characters = yes
		}
		# civil wars always transfer some units, so the workaround transfers them back, then spawns new units instead
		multiply_temp_variable = { GRE_civil_war_divisions_infantry = 0.7 }
		multiply_temp_variable = { GRE_civil_war_divisions_cavalry = 0.3 }
		hidden_effect = {
			random_other_country = {
				limit = {
					original_tag = ROOT
					civilwar_target = ROOT
				}
				set_cosmetic_tag = GRE_civil_war
				GRE_stop_being_syndicalist = yes
				GRE_uncomplete_expansion_focuses = yes

				ROOT = { GRE_ioannis_metaxas = { set_nationality = PREV.PREV } }
				GRE_ioannis_metaxas = { promote_character = yes }
				GRE_uncomplete_focuses = yes

				copy_popularities_of_ROOT = yes
				add_popularity = { ideology = paternal_autocrat popularity = 0.35 }

				GRE_naval_variants = yes
				GRE_spawn_civil_war_units = yes
			}
			if = {
				limit = { has_variable = GRE_previous_faction_leader }
				var:GRE_previous_faction_leader = {
					give_guarantee = ROOT
					diplomatic_relation = { country = ROOT relation = non_aggression_pact }
					ROOT = { give_military_access = PREV }
				}
			}
		}
		if = {
			limit = { has_war_with = BUL }
			BUL = { country_event = bulfor.38 }
		}
	}
}

### DIPLOMATIC PATH EVENTS

# Thawing relations with the Turks (fired by focus)
country_event = {
	id = gre.200
	title = gre.200.t
	desc = gre.200.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.200 option gre.200.a"
		name = gre.200.a #We welcome better relations with the Greeks
		ai_chance = {
			base = 70
			modifier = {
				factor = 0.5
				has_government = national_populist
			}
			modifier = {
				factor = 0.5
				FROM = {
					any_owned_state = { is_claim_or_core_of_ROOT = yes }
				}
			}
		}
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_diplomatic_mission
		}
		FROM = {
			country_event = { id = gre.201 days = 3 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.200 option gre.200.b"
		name = gre.200.b #No, we've no need for this
		ai_chance = {
			base = 30
			modifier = {
				factor = 2
				has_government = national_populist
			}
			modifier = {
				factor = 0
				has_elected_government = yes
				FROM = { has_elected_government = yes }
			}
		}
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
		FROM = {
			country_event = { id = gre.202 days = 3 }
		}
	}
}

# The Turks agree to diplomacy
country_event = {
	id = gre.201
	title = gre.201.t
	desc = gre.201.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = { has_war_with = ROOT }
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.201 option gre.201.a"
		name = gre.201.a
		set_country_flag = GRE_has_thaw_with_turks
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_diplomatic_mission
		}
	}
}

# The Turks reject diplomacy
country_event = {
	id = gre.202
	title = gre.202.t
	desc = gre.202.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = { has_war_with = ROOT }
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.202 option gre.202.a"
		name = gre.202.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# Greeks seek treaty of cooperation with the Turks
country_event = {
	id = gre.203
	title = gre.203.t
	desc = gre.203.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.203 option gre.203.a"
		name = gre.203.a #We agree to their terms
		ai_chance = {
			base = 50
			modifier = {
				factor = 1.5
				FROM = {
					any_owned_state = { is_core_of = ROOT }
				}
			}
			modifier = {
				factor = 0.1
				has_government = national_populist
			}
			modifier = {
				factor = 0.5
				tag = TUR
				surrender_progress < 0.10
			}
		}
		add_political_power = 100
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
		if = {
			limit = { FROM = { owns_state = 184 } } #Komotini
			remove_state_core = 184
		}
		if = {
			limit = { owns_state = 164 } #Dodecanese
			remove_state_core = 164
			FROM = { transfer_state = 164 }
		}
		if = {
			limit = { owns_state = 187 } #Aegean Islands
			remove_state_core = 187
			FROM = { transfer_state = 187 }
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		FROM = {
			country_event = { id = gre.208 days = 3 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.203 option gre.203.b"
		name = gre.203.b #We agree to everything but surrendering land
		trigger = {
			any_owned_state = { is_core_of = FROM }
		}
		ai_chance = {
			base = 40
			modifier = {
				factor = 0.5
				FROM = {
					any_owned_state = { is_core_of = ROOT }
				}
			}
			modifier = {
				factor = 0.5
				tag = TUR
				surrender_progress < 0.10
			}
		}
		FROM = {
			country_event = { id = gre.204 days = 3 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.203 option gre.203.c"
		name = gre.203.c #No, they are asking for far too much
		ai_chance = {
			base = 10
			modifier = {
				factor = 0.5
				FROM = {
					any_owned_state = { is_core_of = ROOT }
				}
			}
			modifier = {
				factor = 10
				tag = TUR
				surrender_progress < 0.10
			}
		}
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
		FROM = {
			country_event = { id = gre.207 days = 3 }
		}
	}
}

# The Turks refuse to exchange cores
country_event = {
	id = gre.204
	title = gre.204.t
	desc = gre.204.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		country_exists = FROM
		NOT = { has_war_with = FROM }
	}

	option = {
		log = "[GetLogInfo]: event gre.204 option gre.204.a"
		name = gre.204.a #Then there's no deal
		ai_chance = { base = 75 }
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
		FROM = {
			country_event = { id = gre.205 days = 3 }
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.204 option gre.204.b"
		name = gre.204.b #Very well, we'll work with that
		ai_chance = { base = 25 }
		effect_tooltip = {
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		hidden_effect = {
			set_country_flag = GRE_no_surrender_claims
			FROM = {
				save_event_target_as = turks
			}
			country_event = { id = gre.209 days = 30 }
		}
		FROM = {
			country_event = { id = gre.206 days = 3 }
		}
	}
}

# The Greeks refuse to agree to the modified deal
country_event = {
	id = gre.205
	title = gre.205.t
	desc = gre.205.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		country_exists = FROM
		NOT = { has_war_with = FROM }
	}

	option = {
		log = "[GetLogInfo]: event gre.205 option gre.205.a"
		name = gre.205.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# The Greeks agree to the modified deal
country_event = {
	id = gre.206
	title = gre.206.t
	desc = gre.206.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		FROM = {
			exists = yes
			NOT = { has_war_with = ROOT }
		}
	}

	option = {
		log = "[GetLogInfo]: event gre.206 option gre.206.a"
		name = gre.206.a
		add_political_power = 100
		set_country_flag = GRE_no_surrender_claims
		diplomatic_relation = {
			country = FROM
			relation = non_aggression_pact
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
	}
}

# The Turks refuse the deal
country_event = {
	id = gre.207
	title = gre.207.t
	desc = gre.207.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		country_exists = FROM
		NOT = { has_war_with = FROM }
	}

	option = {
		log = "[GetLogInfo]: event gre.207 option gre.207.a"
		name = gre.207.a
		add_political_power = -50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_no_peace
		}
	}
}

# The Turks agree to the full deal
country_event = {
	id = gre.208
	title = gre.208.t
	desc = gre.208.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		country_exists = FROM
		NOT = { has_war_with = FROM }
	}

	option = {
		log = "[GetLogInfo]: event gre.208 option gre.208.a"
		name = gre.208.a
		add_political_power = 100
		every_owned_state = {
			limit = {
				is_core_of = FROM
			}
			FROM = {
				transfer_state = PREV
			}
		}
		custom_effect_tooltip = GRE_population_exchange_one_month
		hidden_effect = {
			country_event = { id = gre.209 days = 30 }
		}
	}
}

# Population Exchange
country_event = {
	id = gre.209

	hidden = yes
	is_triggered_only = yes

	trigger = {
		country_exists = TUR
		NOT = { has_war_with = TUR }
	}

	immediate = {
		set_variable = { popmove = 0 }
		set_variable = { TUR.popmove = 0 }
		TUR = {
			set_variable = {
				var = popmove
				value = 0
			}
		}

		#Greek side
		if = {
			limit = { owns_state = 184 } #Komotini
			set_temp_variable = { temp1 = 184.state_population_k }
			multiply_temp_variable = { temp1 = 500 }
			add_to_variable = { TUR.popmove = temp1 }
			multiply_temp_variable = { temp1 = -1 }
			184 = { add_manpower = temp1 }
		}
		if = {
			limit = { owns_state = 769 } #Serres
			set_temp_variable = { temp1 = 769.state_population_k }
			multiply_temp_variable = { temp1 = 0.5 }
			add_to_variable = { TUR.popmove = temp1 }
			multiply_temp_variable = { temp1 = -1 }
			769 = { add_manpower = temp1 }
		}
		if = {
			limit = { owns_state = 187 } #Aegean Islands
			set_temp_variable = { temp1 = 187.state_population_k }
			multiply_temp_variable = { temp1 = 300 }
			add_to_variable = { TUR.popmove = temp1 }
			multiply_temp_variable = { temp1 = -1 }
			187 = { add_manpower = temp1 }
		}
		if = {
			limit = { owns_state = 182 } #Crete
			set_temp_variable = { temp1 = 182.state_population_k }
			multiply_temp_variable = { temp1 = 200 }
			add_to_variable = { TUR.popmove = temp1 }
			multiply_temp_variable = { temp1 = -1 }
			182 = { add_manpower = temp1 }
		}

		#Turkish side
		TUR = {
			if = {
				limit = { owns_state = 773 } #Constantinople
				773 = { add_manpower = -40000 }
				add_to_variable = { ROOT.popmove = 40000 }
			}
			if = {
				limit = { owns_state = 341 } #Adrianople
				set_temp_variable = { temp1 = 341.state_population_k }
				multiply_temp_variable = { temp1 = 350 }
				add_to_variable = { ROOT.popmove = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				341 = { add_manpower = temp1 }
			}
			if = {
				limit = { owns_state = 340 } #Bursa
				set_temp_variable = { temp1 = 340.state_population_k }
				multiply_temp_variable = { temp1 = 230 }
				add_to_variable = { ROOT.popmove = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				340 = { add_manpower = temp1 }
			}
			if = {
				limit = { owns_state = 339 } #Smyrna
				set_temp_variable = { temp1 = 339.state_population_k }
				multiply_temp_variable = { temp1 = 230 }
				add_to_variable = { ROOT.popmove = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				339 = { add_manpower = temp1 }
			}
			if = {
				limit = { owns_state = 356 } #Sinop
				set_temp_variable = { temp1 = 356.state_population_k }
				multiply_temp_variable = { temp1 = 130 }
				add_to_variable = { ROOT.popmove = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				356 = { add_manpower = temp1 }
			}
			if = {
				limit = { owns_state = 355 } #Samsun
				set_temp_variable = { temp1 = 355.state_population_k }
				multiply_temp_variable = { temp1 = 130 }
				add_to_variable = { ROOT.popmove = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				355 = { add_manpower = temp1 }
			}
			if = {
				limit = { owns_state = 187 } #Aegean
				set_temp_variable = { temp1 = 187.state_population_k }
				multiply_temp_variable = { temp1 = 400 }
				add_to_variable = { ROOT.popmove = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				187 = { add_manpower = temp1 }
			}
			if = {
				limit = { owns_state = 182 } #Crete
				set_temp_variable = { temp1 = 182.state_population_k }
				multiply_temp_variable = { temp1 = 400 }
				add_to_variable = { ROOT.popmove = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				182 = { add_manpower = temp1 }
			}
			if = {
				limit = { owns_state = 184 } #Komotini
				set_temp_variable = { temp1 = 184.state_population_k }
				multiply_temp_variable = { temp1 = 400 }
				add_to_variable = { ROOT.popmove = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				184 = { add_manpower = temp1 }
			}
		}

		round_variable = ROOT.popmove
		round_variable = TUR.popmove

		# Now fire follow-up events
		TUR = {
			country_event = gre.210
		}
		country_event = gre.211
	}
}

# Turkish part of population exchange
country_event = {
	id = gre.210
	title = gre.210.t
	desc = gre.210.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.210 option gre.210.a"
		name = gre.210.a
		add_stability = -0.10
		custom_effect_tooltip = GRE_total_pops_turkarrive
		custom_effect_tooltip = GRE_total_pops_turkleave
		if = {
			limit = { has_country_flag = GRE_no_surrender_claims }
			clr_country_flag = GRE_no_surrender_claims
		}
		else = {
			every_owned_state = {
				limit = { is_claimed_by = FROM }
				remove_claim_by = FROM
			}
		}

		hidden_effect = {
			country_event = { id = gre.212 days = 365 }
			set_temp_variable = { leftover = ROOT.popmove }
			if = {
				limit = { owns_state = 341 } #Adrianople
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.20 }
				341 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			if = {
				limit = { owns_state = 340 } #Bursa
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.35 }
				340 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			if = {
				limit = { owns_state = 339 } #Smyrna
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.25 }
				339 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			if = {
				limit = { owns_state = 773 } #Constantinople
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.08 }
				773 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			capital_scope = { add_manpower = leftover }
		}
	}
}

# Greek part of population exchange
country_event = {
	id = gre.211
	title = gre.210.t
	desc = gre.211.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.211 option gre.210.a"
		name = gre.210.a
		add_stability = -0.15
		custom_effect_tooltip = GRE_total_pops_greekarrive
		custom_effect_tooltip = GRE_total_pops_greekleave
		if = {
			limit = {
				has_country_flag = GRE_no_surrender_claims
			}
			clr_country_flag = GRE_no_surrender_claims
			else = {
				every_owned_state = {
					limit = {
						is_claimed_by = TUR
					}
					remove_claim_by = TUR
				}
			}
		}

		hidden_effect = {
			country_event = { id = gre.212 days = 365 }
			set_temp_variable = { leftover = ROOT.popmove }
			if = {
				limit = { owns_state = 184 } #Komotini
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.20 }
				184 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			if = {
				limit = { owns_state = 769 } #Serres
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.12 }
				769 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			if = {
				limit = { owns_state = 989 } #Salonika
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.10 }
				989 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			if = {
				limit = { owns_state = 187 } #Aegean Islands
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.03 }
				187 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			if = {
				limit = { owns_state = 182 } #Crete
				set_temp_variable = { temp1 = ROOT.popmove }
				multiply_temp_variable = { temp1 = 0.03 }
				182 = { add_manpower = temp1 }
				multiply_temp_variable = { temp1 = -1 }
				add_to_temp_variable = { leftover = temp1 }
			}
			capital_scope = { add_manpower = leftover }
		}
	}
}

# Stability restored
country_event = {
	id = gre.212
	title = gre.212.t
	desc = gre.212.d
	picture = GFX_report_event_GRE_exchange

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.212 option gre.212.a"
		name = gre.212.a
		add_stability = 0.10
		add_political_power = 100
	}
}

# Greece sends diplomatic mission to Balkans country (fired by focus)
country_event = {
	id = gre.213
	title = gre.213.t
	desc = gre.213.d
	picture = GFX_report_event_GRE_athens

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.213 option gre.213.a"
		name = gre.213.a #Yes, let's work more closely with the Greeks
		ai_chance = {
			base = 80
			modifier = {
				factor = 0.5
				FROM = { any_owned_state = { is_claim_or_core_of_ROOT = yes } }
			}
		}
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_diplomatic_mission
		}
		effect_tooltip = {
			if = {
				limit = { NOT = { is_in_faction_with = FROM } }
				diplomatic_relation = {
					country = FROM
					relation = non_aggression_pact
				}
			}
		}
		FROM = { country_event = { id = gre.214 days = 3 } }
	}
	option = {
		log = "[GetLogInfo]: event gre.213 option gre.213.b"
		name = gre.213.b #No, there's no need for this
		ai_chance = {
			base = 20
			modifier = {
				factor = 4
				FROM = { any_owned_state = { is_claim_or_core_of_ROOT = yes } }
			}
		}
		FROM = { country_event = { id = gre.215 days = 3 } }
	}
}

# The Balkans country agrees
country_event = {
	id = gre.214
	title = gre.214.t
	desc = gre.214.d
	picture = GFX_report_event_generic_diplomacy3

	is_triggered_only = yes

	trigger = {
		country_exists = FROM
		NOT = { has_war_with = FROM }
	}

	option = {
		log = "[GetLogInfo]: event gre.214 option gre.214.a"
		name = gre.214.a
		add_political_power = 50
		reverse_add_opinion_modifier = {
			target = FROM
			modifier = GRE_diplomatic_mission
		}
		if = {
			limit = { NOT = { is_in_faction_with = FROM } }
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		modify_country_flag = { flag = gre_balkans_coop value = 1 }
	}
}

# The Balkans country refuses
country_event = {
	id = gre.215
	title = gre.215.t
	desc = gre.215.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		country_exists = FROM
		NOT = { has_war_with = FROM }
	}

	option = {
		log = "[GetLogInfo]: event gre.215 option gre.215.a"
		name = gre.215.a
		add_political_power = -25
	}
}

# Greater stability from Balkans cooperation
country_event = {
	id = gre.216
	title = gre.216.t
	desc = gre.216.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = { flag = gre_balkans_coop value > 1 }
		is_subject = no
	}

	mean_time_to_happen = {
		months = 1
	}

	option = {
		log = "[GetLogInfo]: event gre.216 option gre.216.a"
		name = gre.216.a
		add_stability = 0.05
		add_political_power = 50
	}
}

# Greater investment from Balkans cooperation
country_event = {
	id = gre.217
	title = gre.216.t
	desc = gre.216.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		has_country_flag = { flag = gre_balkans_coop value > 3 }
		is_subject = no
		any_core_state = {
			is_owned_and_controlled_by = ROOT
			free_building_slots = { building = industrial_complex size > 0 include_locked = yes }
		}
	}

	mean_time_to_happen = {
		months = 3
	}

	option = {
		log = "[GetLogInfo]: event gre.217 option gre.216.a"
		name = gre.216.a
		add_one_random_civilian_factory = yes
	}
}

### EXPANSIONISM EVENTS

# Faction leader warned of Megali (fired by focus)
country_event = {
	id = gre.250
	title = gre.250.t
	picture = GFX_report_event_GRE_athens

	desc = {
		text = gre.250.d
		trigger = {
			FROM = { NOT = { has_country_flag = GRE_chose_megali } }
		}
	}
	desc = {
		text = gre.250.d.full
		trigger = {
			FROM = { has_country_flag = GRE_chose_megali }
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.250 option gre.250.a"
		name = gre.250.a #We support them, no matter what
		ai_chance = {
			base = 100
			modifier = {
				factor = 0
				OR = {
					GRE_allied_country_is_target_of_greek_claim = yes
					GRE_status_quo_factions_country_is_target_of_greek_claim = yes
				}
			}
		}
		FROM = {
			country_event = gre.251
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.250 option gre.250.b"
		name = gre.250.b #This is unacceptable - they either desist, or they go
		ai_chance = {
			base = 0
			modifier = {
				add = 100
				OR = {
					GRE_allied_country_is_target_of_greek_claim = yes
					GRE_status_quo_factions_country_is_target_of_greek_claim = yes
				}
			}
		}
		FROM = {
			add_opinion_modifier = { target = ROOT modifier = KR_outraged }
			country_event = gre.252
		}
	}
}

# Faction leader supports Greece
country_event = {
	id = gre.251
	title = gre.251.t
	desc = gre.251.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		is_in_faction_with = FROM
		FROM = { is_faction_leader = yes }
	}

	option = {
		log = "[GetLogInfo]: event gre.251 option gre.251.a"
		name = gre.251.a
		set_country_flag = GRE_may_start_megali
		unlock_decision_tooltip = GRE_megali_war
	}
}

# Faction leader won't support Greece
country_event = {
	id = gre.252
	title = gre.252.t
	desc = gre.252.d
	picture = GFX_report_event_generic_diplomacy4

	is_triggered_only = yes

	trigger = {
		is_in_faction_with = FROM
		FROM = { is_faction_leader = yes }
	}

	option = {
		log = "[GetLogInfo]: event gre.252 option gre.252.a"
		name = gre.252.a #Then Megali dies here
		ai_chance = { base = 0 }
		clr_country_flag = GRE_chose_megali
		add_political_power = 100
		add_stability = 0.05
		every_state = {
			limit = {
				is_claimed_by = ROOT
				NOT = { is_owned_by = ROOT }
				OR = {
					state = 766 #Northern Epirus
					state = 164 #Dodecanese Islands
					state = 183 #Cyprus
					state = 187 #Aegean Islands
					state = 184 #Komotini
					state = 341 #Adrianople
					state = 773 #Constantinople
					state = 340 #Bursa
					state = 339 #Smyrna
				}
			}
			remove_claim_by = ROOT
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.252 option gre.252.b"
		name = gre.252.b #Then we are on our own
		leave_faction = yes
		FROM = { country_event = gre.253 }
		if = {
			limit = { tag = ENT }
			set_global_flag = GRE_kicked_from_ENT
		}
		else_if = {
			limit = { tag = INT }
			set_global_flag = GRE_kicked_from_INT
		}
		else = {
			if = {
				limit = {
					is_in_faction_with = AUS
					AUS = {
						is_faction_leader = no
						has_country_flag = AUS_intervened_in_weltkrieg
					}
				}
				AUS = { set_country_flag = GRE_kicked_greece_out_of_faction }
			}
			FROM = { set_country_flag = GRE_kicked_greece_out_of_faction }
		}
		set_country_flag = GRE_may_start_megali
		unlock_decision_tooltip = GRE_megali_war
	}
}

# Greece withdrew from faction
country_event = {
	id = gre.253
	title = gre.253.t
	picture = GFX_report_event_GRE_athens

	desc = {
		text = gre.253.d.allies
		trigger = {
			any_allied_country = {
				any_owned_state = {
					OR = {
						is_core_of = FROM
						is_claimed_by = FROM
					}
				}
			}
		}
	}
	desc = {
		text = gre.253.d.noallies
		trigger = {
			NOT = {
				any_allied_country = {
					any_owned_state = {
						OR = {
							is_core_of = FROM
							is_claimed_by = FROM
						}
					}
				}
			}
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.253 option gre.253.a"
		name = gre.253.a
		add_political_power = -25
	}
}

# Greece offers peace to get claims (fired by decision)
country_event = {
	id = gre.254
	title = gre.254.t
	desc = gre.254.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.254 option gre.254.a"
		name = gre.254.a #We must make peace while we can
		if = {
			limit = {
				tag = TUR
				FROM = { has_country_flag = GRE_chose_megali }
			}
			add_political_power = -200
			add_stability = -0.20
		}
		else = {
			add_political_power = -100
			add_stability = -0.10
		}

		every_state = {
			limit = {
				OR = {
					is_owned_by = ROOT
					owner = { is_subject_of = ROOT }
					AND = {
						ROOT = { is_faction_leader = yes }
						owner = { is_in_faction_with = ROOT }
					}
				}
				OR = {
					is_core_of = FROM
					is_claimed_by = FROM
					state = 183 #Cyprus
					state = 164 #Dodecanese Islands
					AND = {
						state = 1089 #Kardzhali
						is_owned_by = TUR
					}
					any_of = {
						array = FROM.subjects
						OR = {
							is_core_of = var:v
							is_claimed_by = var:v
						}
					}
					AND = {
						FROM = { is_faction_leader = yes }
						any_of = {
							array = FROM.faction_members
							OR = {
								is_core_of = var:v
								is_claimed_by = var:v
							}
						}
					}
				}
			}
			FROM = { transfer_state = PREV }
		}
		FROM = { white_peace_with_ROOT = yes }
		event_target:peace_country = {
			set_truce = { target = FROM days = 730 }
			diplomatic_relation = {
				country = FROM
				relation = non_aggression_pact
			}
		}
		remove_from_array = { FROM.GRE_megali_enemies = event_target:peace_country }
	}
	option = {
		log = "[GetLogInfo]: event gre.254 option gre.254.b"
		name = gre.254.b #No - they will have to fight us to the last man
		ai_chance = { base = 0 }
		event_target:peace_country = { set_country_flag = { flag = GRE_megali_refused_peace days = 365 value = 1 } }
		add_stability = -0.05
		add_war_support = -0.1
		FROM = { country_event = gre.255 }
	}
}

# They refuse to make peace
country_event = {
	id = gre.255
	title = gre.255.t
	desc = gre.255.d
	picture = GFX_report_event_GRE_army

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.255 option gre.255.a"
		name = gre.255.a
		add_war_support = 0.10
		remove_from_array = { GRE_megali_enemies = event_target:peace_country }
	}
}

# Move the capital to Constantinople?
country_event = {
	id = gre.256
	title = gre.256.t
	desc = gre.256.d
	picture = GFX_report_event_GRE_athens

	fire_only_once = yes

	trigger = {
		original_tag = GRE
		773 = { is_owned_and_controlled_by = ROOT } #Constantinople
		has_war = no
	}

	mean_time_to_happen = {
		days = 7
	}

	option = {
		log = "[GetLogInfo]: event gre.256 option gre.256.a"
		name = gre.256.a #Yes, this is the proper capital of our nation
		add_political_power = 50
		add_stability = -0.03
		set_capital = { state = 773 remember_old_capital = no }
	}
	option = {
		log = "[GetLogInfo]: event gre.256 option gre.256.b"
		name = gre.256.b #No, we remain in Athens as always
		ai_chance = { base = 0 }
		add_stability = 0.05
	}
}

# Greece considers extent of claims
country_event = {
	id = gre.261
	title = gre.261.t
	picture = GFX_report_event_GRE_army

	desc = {
		text = gre.261.d.faction
		trigger = {
			is_in_faction = yes
			is_faction_leader = no
		}
	}
	desc = {
		text = gre.261.d.nofaction
		trigger = {
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event gre.261 option gre.261.a"
		name = gre.261.a #We will keep our claims to traditional territory
		trigger = {
			OR = {
				NOT = { owns_state = 766 } #Northern Epirus
				NOT = { owns_state = 164 } #Dodecanese Islands
				NOT = { owns_state = 183 } #Cyprus
				NOT = { owns_state = 187 } #Aegean Islands
				NOT = { owns_state = 184 } #Komotini
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = GRE_expansionism option = GRE_EXPANSIONISM_MEGALI_BIG }
			}
		}
		add_political_power = -100
		add_stability = -0.05
		every_other_country = {
			limit = {
				any_core_state = {
					OR = {
						state = 766 #Northern Epirus
						state = 164 #Dodecanese Islands
						state = 183 #Cyprus
						state = 187 #Aegean Islands
						state = 184 #Komotini
					}
				}
			}
			add_opinion_modifier = { target = ROOT modifier = GRE_claimed_my_state }
		}
		every_state = {
			limit = {
				OR = {
					state = 766 #Northern Epirus
					state = 164 #Dodecanese Islands
					state = 183 #Cyprus
					state = 187 #Aegean Islands
					state = 184 #Komotini
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
			}
			faction_leader = { country_event = gre.250 }
		}
		else = {
			set_country_flag = GRE_may_start_megali
			unlock_decision_tooltip = GRE_megali_war
		}
	}
	option = {
		log = "[GetLogInfo]: event gre.261 option gre.261.b"
		name = gre.261.b #Resurrect the Megali Idea!
		trigger = {
			OR = {
				NOT = { owns_state = 339 } #Smyrna
				NOT = { owns_state = 340 } #Bursa
				NOT = { owns_state = 341 } #Adrianople
				NOT = { owns_state = 342 } #Mugla
				NOT = { owns_state = 773 } #Constantinople
			}
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 0
				has_game_rule = { rule = GRE_expansionism option = GRE_EXPANSIONISM_MEGALI_SMALL }
			}
		}
		add_political_power = -300
		add_stability = -0.15
		set_country_flag = GRE_chose_megali
		every_other_country = {
			limit = {
				any_core_state = {
					OR = {
						state = 164 #Dodecanese
						state = 183 #Cyprus
						state = 184 #Komotini
						state = 187 #Aegean Islands
						state = 339 #Smyrna
						state = 340 #Bursa
						state = 341 #Adrianople
						state = 342 #Mugla
						state = 766 #Northern Epirus
						state = 773 #Constantinople
					}
				}
			}
			add_opinion_modifier = { target = ROOT modifier = GRE_claimed_my_state }
		}
		every_state = {
			limit = {
				OR = {
					state = 164 #Dodecanese
					state = 183 #Cyprus
					state = 184 #Komotini
					state = 187 #Aegean Islands
					state = 339 #Smyrna
					state = 340 #Bursa
					state = 341 #Adrianople
					state = 342 #Mugla
					state = 766 #Northern Epirus
					state = 773 #Constantinople
				}
				is_claim_or_core_of_ROOT = no
			}
			add_claim_by = ROOT
		}
		if = {
			limit = {
				is_in_faction = yes
				is_faction_leader = no
			}
			faction_leader = { country_event = gre.250 }
		}
		else = {
			set_country_flag = GRE_may_start_megali
			unlock_decision_tooltip = GRE_megali_war
		}
	}
}

### News Events ###
# Greece: Metaxas takes over after Balkan War loss
news_event = {
	id = gre.500
	immediate = { log = "[GetLogInfo]: event gre.500" }
	title = gre.500.t
	desc = gre.500.d
	picture = GFX_news_event_GRE_metaxas

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.500.a
	}
}

# Greece: Syndicalists take over after Balkan War loss
news_event = {
	id = gre.501
	immediate = { log = "[GetLogInfo]: event gre.501" }
	title = gre.501.t
	desc = gre.501.d
	picture = GFX_news_event_GRE_aris

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.501.a
	}
}

# Greece: army takes over after Balkan War loss
news_event = {
	id = gre.502
	immediate = { log = "[GetLogInfo]: event gre.502" }
	title = gre.502.t
	desc = gre.502.d
	picture = GFX_news_event_GRE_papagos

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.502.a
	}
}

# Greece: radical socialists win elections
news_event = {
	id = gre.503
	immediate = { log = "[GetLogInfo]: event gre.503" }
	title = gre.503.t
	desc = gre.503.d
	picture = GFX_news_event_GRE_gavriilides

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.503.a
	}
}

# Greece: syndicalists win elections
news_event = {
	id = gre.504
	immediate = { log = "[GetLogInfo]: event gre.504" }
	title = gre.504.t
	desc = gre.504.d
	picture = GFX_news_event_GRE_zachariadis

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.504.a
	}
}

# Greece: Metaxas overthrows rigged republican vote
news_event = {
	id = gre.505
	immediate = { log = "[GetLogInfo]: event gre.505" }
	title = gre.505.t
	desc = gre.505.d
	picture = GFX_news_event_GRE_metaxas

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.505.a
	}
}

# Greece: syndicalists overthrow rigged republican vote
news_event = {
	id = gre.506
	immediate = { log = "[GetLogInfo]: event gre.506" }
	title = gre.506.t
	desc = gre.506.d
	picture = GFX_news_event_GRE_zachariadis

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.506.a
	}
}

# Greece: syndicalists win civil war
news_event = {
	id = gre.507
	immediate = { log = "[GetLogInfo]: event gre.507" }
	title = gre.507.t
	desc = gre.507.d
	picture = GFX_news_event_GRE_civilwar

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.507.a
	}
}

# Greece: Metaxas wins civil war
news_event = {
	id = gre.508
	immediate = { log = "[GetLogInfo]: event gre.508" }
	title = gre.508.t
	desc = gre.508.d
	picture = GFX_news_event_GRE_civilwar

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.508.a
	}
}

# Greece: republicans win referendum
news_event = {
	id = gre.509
	immediate = { log = "[GetLogInfo]: event gre.509" }
	title = gre.509.t
	desc = gre.509.d
	picture = GFX_news_event_GRE_parliament

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.509.a
	}
}

# Greece: Alexander crowned as king
news_event = {
	id = gre.510
	immediate = { log = "[GetLogInfo]: event gre.510" }
	title = gre.510.t
	desc = gre.510.d
	picture = GFX_news_event_GRE_celebrate

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.510.a
	}
}

# Greece: George crowned as king
news_event = {
	id = gre.511
	immediate = { log = "[GetLogInfo]: event gre.511" }
	title = gre.511.t
	desc = gre.511.d
	picture = GFX_news_event_GRE_celebrate

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.511.a
	}
}

# Greece: monarchy restored - Paul crowned as king
news_event = {
	id = gre.512
	immediate = { log = "[GetLogInfo]: event gre.512" }
	title = gre.512.t
	desc = gre.512.d
	picture = GFX_news_event_GRE_celebrate

	major = yes
	fire_for_sender = no
	is_triggered_only = yes

	trigger = {
		wants_world_news = yes
	}

	show_major = {
		OR = {
			regional_europe_news = yes
			is_neighbor_of = FROM
		}
	}

	option = {
		name = gre.512.a
	}
}
