###########################
# Lombardy Events
###########################

add_namespace = lombardy

### Ask for the Iron Crown of Lombardy
country_event = {
	id = lombardy.1
	title = lombardy.1.t
	picture = GFX_report_event_ITA_milan

	desc = {
		text = lombardy.1.d.aus
		trigger = { country_exists = AUS }
	}
	desc = {
		text = lombardy.1.d.sic
		trigger = {
			NOT = { country_exists = AUS }
			country_exists = SIC
		}
	}
	desc = {
		text = lombardy.1.d.vienna
		trigger = {
			NOT = { country_exists = AUS }
			NOT = { country_exists = SIC }
		}
	}

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.1 option lombardy.1.a"
		name = lombardy.1.a
		trigger = { country_exists = AUS }
		AUS = {
			country_event = lombardy.2
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.1 option lombardy.1.b"
		name = lombardy.1.b
		trigger = {
			NOT = { country_exists = AUS }
			country_exists = SIC
		}
		SIC = {
			country_event = lombardy.2
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.1 option lombardy.1.c"
		name = lombardy.1.c
		trigger = {
			NOT = { country_exists = AUS }
			NOT = { country_exists = SIC }
		}
		random_country = {
			limit = { owns_state = 4 }
			country_event = lombardy.2
		}
	}
}

### Lombardy asks for the Iron Crown
country_event = {
	id = lombardy.2
	title = lombardy.2.t
	desc = lombardy.2.d
	picture = GFX_report_event_ITA_milan

	is_triggered_only = yes

	#Return it
	option = {
		log = "[GetLogInfo]: event lombardy.2 option lombardy.2.a"
		name = lombardy.2.a
		ai_chance = {
			base = 90
			modifier = {
				factor = 0
				has_socialist_government = yes
			}
		}
		add_political_power = -10
		FROM = {
			country_event = { id = lombardy.3 days = 3 }
		}
		LOM = {
			add_opinion_modifier = {
				target = ROOT
				modifier = LOM_returned_crown
			}
		}
	}

	#Refuse!
	option = {
		log = "[GetLogInfo]: event lombardy.2 option lombardy.2.b"
		name = lombardy.2.b
		trigger = {
			LOM = {
				is_ally_of_ROOT = no
			}
		}
		ai_chance = { base = 10 }
		FROM = {
			country_event = { id = lombardy.4 days = 3 }
		}
		LOM = {
			add_opinion_modifier = {
				target = ROOT
				modifier = LOM_refused_crown
			}
		}
	}
}

### The Crown is returned!
country_event = {
	id = lombardy.3
	title = lombardy.3.t
	desc = lombardy.3.d
	picture = GFX_report_event_ITA_milan

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.3 option lombardy.3.a"
		name = lombardy.3.a
		set_country_flag = LOM_has_crown
	}
}

### The Crown is refused...
country_event = {
	id = lombardy.4
	title = lombardy.4.t
	desc = lombardy.4.d
	picture = GFX_report_event_ITA_milan

	is_triggered_only = yes
	option = {
		log = "[GetLogInfo]: event lombardy.4 option lombardy.4.a"
		name = lombardy.4.a
		add_political_power = -50
	}
}

### Coronation of the King
country_event = {
	id = lombardy.5
	title = lombardy.5.t
	desc = lombardy.5.d
	picture = GFX_report_event_ITA_milan

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.5 option lombardy.5.a"
		name = lombardy.5.a
		custom_effect_tooltip = LOM_DUKE_CROWNED
		add_stability = 0.05
		add_political_power = 50
		LOM_create_adriano_visconti = yes
	}
}

### Hire Military Advisors
country_event = {
	id = lombardy.6
	title = lombardy.6.t
	desc = lombardy.6.d

	is_triggered_only = yes

	option = { # Prussian advisors are the best
		log = "[GetLogInfo]: event lombardy.6 option lombardy.6.a"
		name = lombardy.6.a
		trigger = {
			GER = { is_faction_leader = yes }
			NOT = { has_war_with = GER }
		}
		ai_chance = {
			base = 50
			modifier = {
				factor = 2
				is_ally_with = GER
			}
		}
		add_ideas = LOM_Prussian_drill
		add_opinion_modifier = {
			target = GER
			modifier = LOM_prussian_instructors
		}
		GER = { country_event = lombardy.7 }
	}
	option = { # Italian advisors are popular
		log = "[GetLogInfo]: event lombardy.6 option lombardy.6.b"
		name = lombardy.6.b
		ai_chance = { base = 50 }
		add_political_power = 10
		add_ideas = LOM_Italian_drill
	}
}

country_event = {
	id = lombardy.7
	title = lombardy.7.t
	desc = lombardy.7.d

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.7 option lombardy.7.a"
		name = lombardy.7.a
		effect_tooltip = {
			FROM = {
				add_opinion_modifier = {
					target = ROOT
					modifier = LOM_prussian_instructors
				}
			}
		}
	}
}

### Purchase Small Arms
country_event = {
	id = lombardy.8
	title = lombardy.8.t
	desc = lombardy.8.d

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.8 option lombardy.8.a"
		name = lombardy.8.a
		send_equipment = {
			target = LOM
			type = infantry_equipment
			amount = 900
		}
		hidden_effect = {
			FROM = {
				country_event = { id = lombardy.9 days = 2 }
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.8 option lombardy.8.b"
		name = lombardy.8.b
		effect_tooltip = {
			FROM = {
				add_opinion_modifier = {
					target = FROM
					modifier = LOM_equipment_refused
				}
			}
		}
		hidden_effect = {
			FROM = {
				country_event = { id = lombardy.10 days = 2 }
			}
		}
	}
}

country_event = {
	id = lombardy.9
	title = lombardy.9.t
	desc = lombardy.9.d

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.9 option lombardy.9.a"
		name = lombardy.9.a
		effect_tooltip = {
			FROM = {
				send_equipment = {
					target = LOM
					type = infantry_equipment
					amount = 900
				}
			}
		}
	}
}

country_event = {
	id = lombardy.10
	title = lombardy.10.t
	desc = lombardy.10.d

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.10 option lombardy.10.a"
		name = lombardy.10.a
		add_opinion_modifier = {
			target = FROM
			modifier = LOM_equipment_refused
		}
	}
}

### Purchase Artillery
country_event = {
	id = lombardy.11
	title = lombardy.11.t
	desc = lombardy.11.d

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.11 option lombardy.11.a"
		name = lombardy.11.a
		send_equipment = {
			target = LOM
			type = artillery_equipment_1
			amount = 40
		}
		hidden_effect = {
			FROM = {
				country_event = { id = lombardy.12 days = 2 }
			}
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.11 option lombardy.11.b"
		name = lombardy.11.b
		effect_tooltip = {
			FROM = {
				add_opinion_modifier = {
					target = FROM
					modifier = LOM_artillery_refused
				}
			}
		}
		hidden_effect = {
			FROM = {
				country_event = { id = lombardy.13 days = 2 }
			}
		}
	}
}

country_event = {
	id = lombardy.12
	title = lombardy.12.t
	desc = lombardy.12.d

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.12 option lombardy.12.a"
		name = lombardy.12.a
		effect_tooltip = {
			FROM = {
				send_equipment = {
					target = LOM
					type = infantry_equipment
					amount = 900
				}
			}
		}
	}
}

country_event = {
	id = lombardy.13
	title = lombardy.13.t
	desc = lombardy.13.d

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.13 option lombardy.13.a"
		name = lombardy.13.a
		add_opinion_modifier = {
			target = FROM
			modifier = LOM_artillery_refused
		}
	}
}

# National Elections
country_event = {
	id = lombardy.15
	title = lombardy.15.t
	desc = lombardy.15.d
	picture = GFX_report_event_election_vote

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.15 option lombardy.15.a"
		name = lombardy.15.a #Partito Liberale Democratico (SocLib)
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = LOM_path option = LOM_PATH_MARLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCCON }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCDEM }
					has_game_rule = { rule = LOM_path option = LOM_PATH_NATPOP }
				}
			}
			modifier = {
				factor = 2
				has_government = social_liberal
			}
			modifier = {
				factor = 1.5
				NOT = {
					has_government = authoritarian_democrat
					has_country_flag = LOM_constitutional_monarchy
					has_country_flag = LOM_natpops_banned
				}
			}
		}
		add_popularity = { ideology = social_liberal popularity = 0.2 }
		set_politics = {
			ruling_party = social_liberal
			elections_allowed = yes
			election_frequency = 48
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.15 option lombardy.15.b"
		name = lombardy.15.b #Partito Liberale Lombardo (MarkLib)
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCCON }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCDEM }
					has_game_rule = { rule = LOM_path option = LOM_PATH_NATPOP }
				}
			}
			modifier = {
				factor = 2
				has_government = market_liberal
			}
		}
		add_popularity = { ideology = market_liberal popularity = 0.2 }
		set_politics = {
			ruling_party = market_liberal
			elections_allowed = yes
			election_frequency = 48
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.15 option lombardy.15.c"
		name = lombardy.15.c #Partito Popolare Lombardo (SocCon)
		ai_chance = {
			base = 30
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_MARLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCDEM }
					has_game_rule = { rule = LOM_path option = LOM_PATH_NATPOP }
				}
			}
			modifier = {
				factor = 2
				has_government = social_conservative
			}
			modifier = {
				factor = 1.5
				OR = {
					has_country_flag = LOM_constitutional_monarchy
					has_country_flag = LOM_natpops_banned
				}
			}
		}
		add_popularity = { ideology = social_conservative popularity = 0.2 }
		set_politics = {
			ruling_party = social_conservative
			elections_allowed = yes
			election_frequency = 48
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.15 option lombardy.15.e"
		name = lombardy.15.e #Lega Longobarda (NatPop)
		trigger = {
			NOT = {
				has_government = authoritarian_democrat
				has_country_flag = LOM_constitutional_monarchy
				has_country_flag = LOM_natpops_banned
			}
		}
		add_popularity = { ideology = national_populist popularity = 0.2 }
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_MARLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCCON }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCDEM }
				}
			}
			modifier = {
				factor = 6
				has_government = national_populist
			}
			modifier = {
				factor = 2
				has_completed_focus = LOM_golden_ambrosia
			}
		}
		set_politics = {
			ruling_party = national_populist
			elections_allowed = yes
			election_frequency = 48
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.15 option lombardy.15.f"
		name = lombardy.15.f #Lega Democratica Riformista (SocDem)
		trigger = { has_country_flag = LOM_natpops_banned }
		ai_chance = {
			base = 10
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_MARLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCCON }
					has_game_rule = { rule = LOM_path option = LOM_PATH_NATPOP }
				}
			}
			modifier = {
				factor = 3
				has_government = social_democrat
			}
		}
		add_popularity = { ideology = social_democrat popularity = 0.2 }
		set_politics = {
			ruling_party = social_democrat
			elections_allowed = yes
			election_frequency = 48
		}
	}
}

# Question of Radicals (fired from focus)
country_event = {
	id = lombardy.20
	title = lombardy.20.t
	desc = lombardy.20.d
	picture = GFX_report_event_SRI_arrests

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.20 option lombardy.20.a"
		name = lombardy.20.a #There is no place for radicals in this republic
		ai_chance = {
			factor = 1
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = LOM_path option = LOM_PATH_NATPOP }
					has_game_rule = { rule = LOM_forpol option = LOM_FORPOL_BPL }
				}
			}
		}
		custom_effect_tooltip = LOM_natpops_will_be_banned
		set_country_flag = LOM_natpops_banned
		add_popularity = { ideology = social_conservative popularity = 0.05 }
		add_popularity = { ideology = national_populist popularity = -0.05 }
		add_popularity = { ideology = syndicalist popularity = -0.05 }
		add_political_power = 50
		add_stability = -0.05
	}
	option = {
		log = "[GetLogInfo]: event lombardy.20 option lombardy.20.b"
		name = lombardy.20.b #We stand for freedom above all else
		ai_chance = { factor = 1 }
		add_popularity = { ideology = social_liberal popularity = 0.05 }
		add_popularity = { ideology = national_populist popularity = 0.05 }
		add_popularity = { ideology = syndicalist popularity = 0.05 }
		add_political_power = -50
		add_stability = 0.05
	}
}

# Lombardia's Future (for duchy)
country_event = {
	id = lombardy.21
	title = lombardy.21.t
	desc = lombardy.21.d
	picture = GFX_report_event_ITA_milan

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.21 option lombardy.21.a"
		name = lombardy.21.a #Republicanism cannot be trusted
		ai_chance = {
			base = 60
			modifier = {
				factor = 2
				has_idea = ITA_austrian_influence
			}
		}
		add_stability = 0.05
		add_popularity = { ideology = national_populist popularity = 0.05 }
	}
	option = {
		log = "[GetLogInfo]: event lombardy.21 option lombardy.21.b"
		name = lombardy.21.b #He must step down, for the good of the people
		ai_chance = { base = 30 }
		add_stability = 0.10
		add_popularity = { ideology = social_conservative popularity = 0.20 }
		set_politics = {
			ruling_party = social_conservative
			elections_allowed = no
		}
	}
}

# Lombardia's Future (for republic)
country_event = {
	id = lombardy.22
	title = lombardy.22.t
	desc = lombardy.22.d
	picture = GFX_report_event_ITA_milan

	is_triggered_only = yes

	option = {
		log = "[GetLogInfo]: event lombardy.22 option lombardy.22.a"
		name = lombardy.22.a #We must turn to the Count for help
		ai_chance = {
			base = 35
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_MARLIB }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCCON }
					has_game_rule = { rule = LOM_path option = LOM_PATH_SOCDEM }
					has_game_rule = { rule = LOM_path option = LOM_PATH_NATPOP }
				}
			}
			modifier = {
				factor = 2
				has_idea = ITA_austrian_influence
			}
		}
		add_stability = 0.10
		add_popularity = { ideology = national_populist popularity = 0.05 }
		add_popularity = { ideology = authoritarian_democrat popularity = 0.10 }
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = no
		}
	}
	option = {
		log = "[GetLogInfo]: event lombardy.22 option lombardy.22.b"
		name = lombardy.22.b #No, we cannot turn back to the monarchy
		ai_chance = {
			base = 65
			modifier = {
				factor = 0
				OR = {
					has_game_rule = { rule = LOM_path option = LOM_PATH_CONMON }
					has_game_rule = { rule = LOM_path option = LOM_PATH_ABSMON }
				}
			}
			modifier = {
				factor = 0.5
				has_idea = ITA_austrian_influence
			}
		}
		add_stability = 0.05
		set_temp_variable = { ideology_change_var = 0.05 }
		change_ruling_party_popularity = yes
	}
}

