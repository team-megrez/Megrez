RUS_setup_civil_war = {
	log = "KR_Event_Logging;RCW STARTS;[GetDateText]"
	set_capital = { state = 653 }
	add_named_threat = {
		threat = 6
		name = RUS_civil_war_threat
	}
	hidden_effect = {
		every_owned_state = {
			limit = {
				OR = {
					region = 132 #Western Russia
					region = 133 #Central Russia
					region = 135 #Kuban
					region = 137 #Caspian Lowlands
					state = 250 #Simbirsk
					state = 256 #Cheboksary
					state = 880 #Latgale
				}
				NOT = { state = 216 } #Petrozavodsk
				NOT = { state = 251 } #Samara
				NOT = { state = 264 } #Tikhvin
				NOT = { state = 652 } #Orenburg
			}
			add_core_of = SOV
			save_current_factory_count = yes
			transfer_state_to = SOV
			restore_previous_factory_count = yes
		}
		delete_unit_template_and_units = { division_template = "Motostrelkovaya Diviziya" }
		delete_unit_template_and_units = { division_template = "Tankovaya Diviziya" }
		delete_unit_template_and_units = { division_template = "Gornostrelkovaya Diviziya" }
		transfer_units_fraction = {
			target = SOV
			size = 0.5
			navy_ratio = 0
			keep_unit_leaders_trigger = { always = yes }
		}
		SOV = {
			set_cosmetic_tag = SOV_civil_war
			set_major = yes
			set_war_support = 0.9
			transfer_technology_without_doctrines = yes
			transfer_navy = { target = RUS }
			add_ideas = SOV_chaotic_revolution
			unit_limit_calculation_effect = yes
			add_state_claim = 329 #Tuva
			every_owned_state = {
				remove_core_of = RUS
				add_claim_by = RUS
				teleport_armies = {
					limit = { tag = RUS }
					to_state_array = owned_controlled_states
				}
			}
		}
		RUS_mikhail_yangel = { set_nationality = SOV }
		RUS_igor_kurchatov = { set_nationality = SOV }
		219 = { #Moscow
			create_unit = {
				division = "division_template = \"Tankovaya Diviziya\" start_experience_factor = 0.3"
				owner = SOV
				prioritize_location = 6380
				count = 3
			}
			create_unit = {
				division = "division_template = \"Motostrelkovaya Diviziya\" start_experience_factor = 0.3"
				owner = SOV
				prioritize_location = 6380
			}
		}
		217 = { #Tsarityn
			create_unit = {
				division = "division_template = \"Gornostrelkovaya Diviziya\" start_experience_factor = 0.3"
				owner = SOV
				prioritize_location = 6380
				count = 4
			}
		}
		every_core_state = { add_core_of = SOV }
		set_major = yes

		country_event = { id = rusd.123 days = 60 random_days = 30 }
		news_event = { id = russianews.7 days = 1 }
		TRM = { country_event = { id = tram.80 days = 2 random_days = 6 } }
		INT = { country_event = { id = fopcoup.44 days = 3 random_days = 3 } }
		FOP = { country_event = { id = fopcoup.44 days = 3 random_days = 3 } }
		ENG = { country_event = { id = russia.1920 days = 2 random_hours = 24 } }
		country_lock_all_division_template = no
	}
	declare_war_on = {
		target = SOV
		type = civil_war
	}
	hidden_effect = {
		add_civil_war_target = SOV
		if = {
			limit = { is_ai = yes }
			SOV = {
				add_political_power = 150
				add_equipment_to_stockpile = {
					type = infantry_equipment
					amount = 20000
				}
				add_equipment_to_stockpile = {
					type = support_equipment
					amount = 500
				}
				add_equipment_to_stockpile = {
					type = artillery_equipment
					amount = 500
				}
			}
		}
	}
}

RUS_add_stability = {
	if = {
		limit = {
			has_stability > 0.1
		}
		add_stability = 0.05
	}
	else_if = {
		limit = {
			has_stability > -0.1
		}
		add_stability = 0.1
	}
	else_if = {
		limit = {
			has_stability > -0.3
		}
		add_stability = 0.15
	}
	else_if = {
		limit = {
			has_stability > -0.5
		}
		add_stability = 0.2
	}
	else = {
		add_stability = 0.25
	}
}

RUS_setup_tsar_kirill = {
	if = {
		limit = { NOT = { has_cosmetic_tag = RUS_empire } }
		set_cosmetic_tag = RUS_empire
	}
	if = {
		limit = { event_target:original_russia = { RUS_kirill_romanov = { is_dead = no } } }
		event_target:original_russia = {
			RUS_kirill_romanov = {
				character_becomes_leader_of_ruling_party_effect_tooltip = yes
				hidden_effect = {
					set_nationality = PREV.PREV
					set_character_name = RUS_kirill_romanov_regnal
					remove_all_country_leader_roles = yes
					add_country_leader_role = {
						country_leader = {
							desc = RUS_kirill_romanov_con_leader_desc
							ideology = social_democrat_subtype
						}
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = {
							desc = RUS_kirill_romanov_con_leader_desc
							ideology = social_liberal_subtype
						}
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = {
							desc = RUS_kirill_romanov_con_leader_desc
							ideology = market_liberal_subtype
						}
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = {
							desc = RUS_kirill_romanov_con_leader_desc
							ideology = social_conservative_subtype
						}
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = {
							desc = RUS_kirill_romanov_con_leader_desc
							ideology = authoritarian_democrat_subtype
						}
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = {
							desc = RUS_kirill_romanov_con_leader_desc
							ideology = paternal_autocrat_subtype
						}
						promote_leader = yes
					}
				}
			}
		}
		log = "KR_Event_Logging;RUS POLITICAL PATH - Kirill Romanov (Tsar);[GetDateText]"
	}
	else = {
		RUS_setup_tsar_vladimir = yes
	}
}

RUS_setup_tsar_vladimir = {
	if = {
		limit = { NOT = { has_cosmetic_tag = RUS_empire } }
		set_cosmetic_tag = RUS_empire
	}
	event_target:original_russia = {
		RUS_vladimir_romanov = {
			character_becomes_leader_of_ruling_party_effect_tooltip = yes
			hidden_effect = {
				set_nationality = PREV.PREV
				set_character_name = RUS_vladimir_romanov_regnal
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = {
						desc = RUS_vladimir_romanov_abs_leader_desc
						ideology = social_democrat_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_vladimir_romanov_abs_leader_desc
						ideology = social_liberal_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_vladimir_romanov_abs_leader_desc
						ideology = market_liberal_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_vladimir_romanov_abs_leader_desc
						ideology = social_conservative_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_vladimir_romanov_abs_leader_desc
						ideology = authoritarian_democrat_subtype
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_vladimir_romanov_abs_leader_desc
						ideology = paternal_autocrat_subtype
					}
					promote_leader = yes
				}
			}
		}
	}
}

RUS_setup_tsar_dmitriy = {
	if = {
		limit = { NOT = { has_cosmetic_tag = RUS_empire } }
		set_cosmetic_tag = RUS_empire
	}
	event_target:original_russia = {
		RUS_dmitry_romanov = {
			effect_tooltip = {
				meta_effect = {
					text = {
						add_country_leader_role = {
							country_leader = {
								ideology = [IDEOLOGY]
								traits = { RUS_autocratic_charmer }
							}
							promote_leader = yes
						}
					}
					IDEOLOGY = "[PREV.GetRulingIdeologySubtype]"
				}
			}
			hidden_effect = {
				set_nationality = PREV.PREV
				set_character_flag = RUS_tsar
				set_character_name = RUS_dmitry_romanov_regnal
				set_character_flag = is_monarch
				set_portraits = {
					civilian = { large = "gfx/leaders/RUS/Portrait_RUS_Dmitri_Romanov_Tsar.png" }
				}
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = {
						desc = RUS_dmitry_romanov_regnal_leader_desc
						ideology = social_democrat_subtype
						traits = { RUS_autocratic_charmer }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_dmitry_romanov_regnal_leader_desc
						ideology = social_liberal_subtype
						traits = { RUS_autocratic_charmer }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_dmitry_romanov_regnal_leader_desc
						ideology = market_liberal_subtype
						traits = { RUS_autocratic_charmer }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_dmitry_romanov_regnal_leader_desc
						ideology = social_conservative_subtype
						traits = { RUS_autocratic_charmer }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_dmitry_romanov_regnal_leader_desc
						ideology = authoritarian_democrat_subtype
						traits = { RUS_autocratic_charmer }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_dmitry_romanov_regnal_leader_desc
						ideology = paternal_autocrat_subtype
						traits = { RUS_autocratic_charmer }
					}
					promote_leader = yes
				}
			}
		}
	}
}

RUS_setup_tsar_wrangel = {
	if = {
		limit = { NOT = { has_cosmetic_tag = RUS_empire } }
		set_cosmetic_tag = RUS_empire
	}
	event_target:original_russia = {
		RUS_pyotr_wrangel = {
			effect_tooltip = {
				meta_effect = {
					text = {
						add_country_leader_role = {
							country_leader = {
								ideology = [IDEOLOGY]
								traits = { RUS_black_baron }
							}
							promote_leader = yes
						}
					}
					IDEOLOGY = "[PREV.GetRulingIdeologySubtype]"
				}
			}
			hidden_effect = {
				set_nationality = PREV.PREV
				set_character_flag = RUS_tsar
				set_character_name = RUS_pyotr_wrangel_regnal
				set_character_flag = is_monarch
				set_portraits = {
					civilian = { large = "gfx/leaders/RUS/Portrait_RUS_Pyotr_Wrangel_Tsar.png" }
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_regnal_leader_desc
						ideology = social_democrat_subtype
						traits = { RUS_black_baron }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_regnal_leader_desc
						ideology = social_liberal_subtype
						traits = { RUS_black_baron }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_regnal_leader_desc
						ideology = market_liberal_subtype
						traits = { RUS_black_baron }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						desc = RUS_pyotr_wrangel_regnal_leader_desc
						ideology = social_conservative_subtype
						traits = { RUS_black_baron }
					}
					promote_leader = yes
				}
				if = {
					limit = { has_ideology = authoritarian_democrat_subtype }
					promote_character = authoritarian_democrat_subtype
				}
				else = {
					add_country_leader_role = {
						country_leader = {
							desc = RUS_pyotr_wrangel_regnal_leader_desc
							ideology = authoritarian_democrat_subtype
							traits = { RUS_black_baron }
						}
						promote_leader = yes
					}
				}
				if = {
					limit = { has_ideology = paternal_autocrat_subtype }
					promote_character = paternal_autocrat_subtype
				}
				else = {
					add_country_leader_role = {
						country_leader = {
							desc = RUS_pyotr_wrangel_regnal_leader_desc
							ideology = paternal_autocrat_subtype
							traits = { RUS_black_baron }
						}
						promote_leader = yes
					}
				}
			}
		}
		log = "KR_Event_Logging;RUS POLITICAL PATH - Wrangel (Tsar);[GetDateText]"
	}
}

RUS_remove_monarchy = {
	if = {
		limit = { has_cosmetic_tag = RUS_empire }
		drop_cosmetic_tag = yes
	}
	if = {
		limit = {
			has_character = RUS_pyotr_wrangel
			RUS_pyotr_wrangel = { has_character_flag = RUS_tsar }
		}
		RUS_pyotr_wrangel = {
			clr_character_flag = RUS_tsar
			clr_character_flag = is_monarch
			set_character_name = RUS_pyotr_wrangel
			set_portraits = {
				civilian = { large = "gfx/leaders/RUS/Portrait_RUS_Pyotr_Wrangel.png" }
			}
			hidden_effect = { remove_all_country_leader_roles = yes }
			retire = yes
		}
	}
	if = {
		limit = {
			has_character = RUS_dmitry_romanov
			RUS_dmitry_romanov = { has_character_flag = RUS_tsar }
		}
		RUS_dmitry_romanov = {
			clr_character_flag = RUS_tsar
			clr_character_flag = is_monarch
			set_character_name = RUS_dmitry_romanov
			set_portraits = {
				civilian = { large = "gfx/leaders/RUS/Portrait_RUS_Dmitri_Romanov.png" }
			}
			hidden_effect = { remove_all_country_leader_roles = yes }
			retire = yes
		}
	}
	if = {
		limit = { has_character = RUS_kirill_romanov }
		RUS_kirill_romanov = {
			set_character_name = RUS_kirill_romanov
			hidden_effect = { remove_all_country_leader_roles = yes }
			retire = yes
		}
	}
	if = {
		limit = { has_character = RUS_vladimir_romanov }
		RUS_vladimir_romanov = {
			set_character_name = RUS_vladimir_romanov
			hidden_effect = { remove_all_country_leader_roles = yes }
			retire = yes
		}
	}
}

RUS_set_zemstvo_result_social = {
	set_temp_variable_to_random = RUS_random
	hidden_effect = {
		random_list = {
			seed = RUS_random
			33 = { set_country_flag = RUS_zemstvo_hospital } #stability
			33 = { set_country_flag = RUS_zemstvo_schools } #pp
			33 = { set_country_flag = RUS_zemstvo_housing } #war support
		}
		random = {
			chance = 10
			set_country_flag = RUS_zemstvo_failure
			random_list = {
				50 = { set_country_flag = RUS_zemstvo_failure_1 }
				50 = { set_country_flag = RUS_zemstvo_failure_2 }
			}
		}
	}
}

RUS_set_zemstvo_result_industry = {
	set_temp_variable_to_random = RUS_random
	hidden_effect = {
		random_list = {
			seed = RUS_random
			20 = { set_country_flag = RUS_zemstvo_civilian_industry } #civilian factories
			20 = {
				modifier = {
					factor = 0
					NOT = { has_completed_focus = RUS_War_Preparations_Programme }
				}
				set_country_flag = RUS_zemstvo_military_industry #military factories
			}
			20 = { set_country_flag = RUS_zemstvo_infrastructure } #infrastructure
			20 = { set_country_flag = RUS_zemstvo_agriculture } #building slots
			15 = {
				modifier = {
					factor = 0
					NOT = { has_idea = RUS_large_zemstvo_investment }
				}
				set_country_flag = RUS_zemstvo_synthetics  #refinery
			}
		}
		random = {
			chance = 10
			set_country_flag = RUS_zemstvo_failure
			random_list = {
				33 = { set_country_flag = RUS_zemstvo_failure_1 }
				33 = { set_country_flag = RUS_zemstvo_failure_2 }
				33 = { set_country_flag = RUS_zemstvo_failure_3 }
			}
		}
	}
}

RUS_set_zemstvo_result_research = {
	set_temp_variable_to_random = RUS_random
	hidden_effect = {
		random_list = {
			seed = RUS_random
			30 = { set_country_flag = RUS_zemstvo_industry_research }
			20 = { set_country_flag = RUS_zemstvo_industry_research_bonus }
			30 = { set_country_flag = RUS_zemstvo_military_research }
			20 = { set_country_flag = RUS_zemstvo_military_research_bonus }
		}
		random = {
			chance = 10
			set_country_flag = RUS_zemstvo_failure
		}
	}
}

#choosing number of states affected
RUS_pick_zemstvo_states = {
	random_owned_controlled_state = {
		limit = {
			RUS_choose_zemstvo_group = yes
			RUS_has_free_building_slots = yes
		}
		save_event_target_as = RUS_zemstvo_state_1
	}
	if = {
		limit = {
			OR = {
				has_idea = RUS_increased_zemstvo_investment
				has_idea = RUS_large_zemstvo_investment
			}
		}
		random_owned_controlled_state = {
			limit = {
				RUS_choose_zemstvo_group = yes
				RUS_has_free_building_slots = yes
			}
			save_event_target_as = RUS_zemstvo_state_2
		}
	}
	if = {
		limit = { has_idea = RUS_large_zemstvo_investment }
		random_owned_controlled_state = {
			limit = {
				RUS_choose_zemstvo_group = yes
				RUS_has_free_building_slots = yes
			}
			save_event_target_as = RUS_zemstvo_state_3
		}
	}
}

RUS_zemstvo_events = {
	if = {
		limit = {
			NOT = { has_completed_focus = RUS_National_Investment_Bank }
		}
		RUS_zemstvo_focus_events = yes
	}
	else = {
		country_event = rusd.57
	}
}

RUS_zemstvo_focus_events = {
	if = {
		limit = {
			OR = {
				has_completed_focus = RUS_Local_Development
				has_completed_focus = RUS_War_Preparations_Programme
				has_completed_focus = RUS_Zemstvo_Research_Initiatives
			}
		}
		country_event = rusd.58
	}
	else = {
		RUS_set_zemstvo_result_social = yes
	}
}

RUS_calculate_zemstva_variables = {
	set_temp_variable = { RUS_zemstvo_base_value = 25 }
	if = {
		limit = { has_idea = RUS_increased_zemstvo_investment }
		add_to_temp_variable = { RUS_zemstvo_base_value = 25 }
	}
	if = {
		limit = { has_idea = RUS_large_zemstvo_investment }
		add_to_temp_variable = { RUS_zemstvo_base_value = 50 }
	}
}

RUS_clear_zemstvo_data = {
	clr_country_flag = RUS_funding_zemstva

	clr_country_flag = RUS_zemstvo_failure
	clr_country_flag = RUS_zemstvo_failure_1
	clr_country_flag = RUS_zemstvo_failure_2
	clr_country_flag = RUS_zemstvo_failure_3

	#locations
	clr_country_flag = RUS_northern_zemstva
	clr_country_flag = RUS_southern_zemstva
	clr_country_flag = RUS_eastern_zemstva
	clr_country_flag = RUS_ural_zemstva

	#bureaucracy
	clr_country_flag = RUS_zemstvo_schools
	clr_country_flag = RUS_zemstvo_hospital
	clr_country_flag = RUS_zemstvo_housing

	#industry
	clr_country_flag = RUS_zemstvo_civilian_industry
	clr_country_flag = RUS_zemstvo_military_industry
	clr_country_flag = RUS_zemstvo_infrastructure
	clr_country_flag = RUS_zemstvo_agriculture
	clr_country_flag = RUS_zemstvo_synthetics

	#research
	clr_country_flag = RUS_zemstvo_industry_research
	clr_country_flag = RUS_zemstvo_industry_research_bonus
	clr_country_flag = RUS_zemstvo_military_research
	clr_country_flag = RUS_zemstvo_military_research_bonus

	#remove ideas
	if = {
		limit = { has_idea = RUS_increased_zemstvo_investment }
		remove_ideas = RUS_increased_zemstvo_investment
	}
	else_if = {
		limit = { has_idea = RUS_large_zemstvo_investment }
		remove_ideas = RUS_large_zemstvo_investment
	}

	#unlock the decisions
	clr_country_flag = RUS_funding_zemstva
}

RUS_zemstvo_add_civilian_factory = {
	add_extra_state_shared_building_slots = 1
	add_building_construction = {
		type = industrial_complex
		level = 1
		instant_build = yes
	}
}
RUS_zemstvo_add_military_factory = {
	add_extra_state_shared_building_slots = 1
	add_building_construction = {
		type = arms_factory
		level = 1
		instant_build = yes
	}
}
RUS_zemstvo_add_infrastructure = {
	add_building_construction = {
		type = infrastructure
		level = 1
		instant_build = yes
	}
}

RUS_reduce_black_monday = {
	if = {
		limit = { has_idea = RUS_economic_depression_1 }
		hidden_effect = {
			country_event = { id = rusd.121 days = 25 random_days = 25 }
		}
	}
	else_if = {
		limit = { has_idea = RUS_economic_depression_2 }
		swap_ideas = {
			remove_idea = RUS_economic_depression_2
			add_idea = RUS_economic_depression_3
		}
	}
	else_if = {
		limit = { has_idea = RUS_economic_depression_3 }
		swap_ideas = {
			remove_idea = RUS_economic_depression_3
			add_idea = RUS_economic_depression_4
		}
	}
	else_if = {
		limit = { has_idea = RUS_economic_depression_4 }
		swap_ideas = {
			remove_idea = RUS_economic_depression_4
			add_idea = RUS_economic_depression_5
		}
	}
	else_if = {
		limit = { has_idea = RUS_economic_depression_5 }
		remove_ideas = RUS_economic_depression_5
	}
}

SOV_reduce_civil_war_devastation = {
	if = {
		limit = { has_idea = SOV_aftermath_of_the_civil_war_5 }
		remove_ideas = SOV_aftermath_of_the_civil_war_5
	}
	else_if = {
		limit = { has_idea = SOV_aftermath_of_the_civil_war_4 }
		swap_ideas = {
			remove_idea = SOV_aftermath_of_the_civil_war_4
			add_idea = SOV_aftermath_of_the_civil_war_5
		}
	}
	else_if = {
		limit = { has_idea = SOV_aftermath_of_the_civil_war_3 }
		swap_ideas = {
			remove_idea = SOV_aftermath_of_the_civil_war_3
			add_idea = SOV_aftermath_of_the_civil_war_4
		}
	}
	else_if = {
		limit = { has_idea = SOV_aftermath_of_the_civil_war_2 }
		swap_ideas = {
			remove_idea = SOV_aftermath_of_the_civil_war_2
			add_idea = SOV_aftermath_of_the_civil_war_3
		}
	}
	else_if = {
		limit = { has_idea = SOV_aftermath_of_the_civil_war_1 }
		swap_ideas = {
			remove_idea = SOV_aftermath_of_the_civil_war_1
			add_idea = SOV_aftermath_of_the_civil_war_2
		}
	}
}

TRM_replace_dream_idea = {
	if = {
		limit = { has_idea = TRM_dream_1 }
		remove_ideas = TRM_dream_1
	}
	else_if = {
		limit = { has_idea = TRM_dream_2 }
		remove_ideas = TRM_dream_2
	}
	else_if = {
		limit = { has_idea = TRM_dream_3 }
		swap_ideas = {
			remove_idea = TRM_dream_3
			add_idea = TRM_legacy_of_transamur_1
		}
	}
	else_if = {
		limit = { has_idea = TRM_dream_4 }
		swap_ideas = {
			remove_idea = TRM_dream_4
			add_idea = TRM_legacy_of_transamur_2
		}
	}
	else_if = {
		limit = { has_idea = TRM_dream_5 }
		swap_ideas = {
			remove_idea = TRM_dream_5
			add_idea = TRM_legacy_of_transamur_3
		}
	}
}

TRM_submits_to_japan = {
	if = {
		limit = { has_cosmetic_tag = TRM_RUS }
		set_cosmetic_tag = SIB
	}
	TRM_replace_dream_idea = yes
	hidden_effect = {
		unlock_national_focus = TRM_Aftermath_Of_The_Coup
		if = {
			limit = {
				OR = {
					has_completed_focus = TRM_All_Power_To_The_Admiral
					has_completed_focus = TRM_New_Leadership
					has_completed_focus = TRM_Victory_For_Democracy
				}
			}
			unlock_national_focus = TRM_Vladivostok_Under_Japan
		}
		set_politics = {
			ruling_party = authoritarian_democrat
			elections_allowed = no
		}
		every_state = {
			limit = {
				OR = {
					is_claim_or_core_of_PREV = yes
					has_variable = ambition_area_@PREV
				}
				NOT = {
					is_owned_by = PREV
					state = 408 #Vladivostok
					state = 409 #Khabarovsk
				}
			}
			remove_core_of = PREV
			remove_claim_by = PREV
			clear_variable = ambition_area_@PREV
		}
	}
}

TRM_rebels_against_japan = {
	diplomatic_relation = {
		country = TRM
		relation = guarantee
		active = no
	}
	hidden_effect = {
		TRM = {
			add_state_claim = 537 #Sakhalin
			add_state_claim = 555 #Kurils
			remove_ideas = {
				TRM_economic_ties_to_japan_0
				TRM_economic_ties_to_japan_1
				TRM_economic_ties_to_japan_2
				TRM_economic_ties_to_japan_3
				TRM_economic_ties_to_japan_4
				TRM_economic_ties_to_japan_5
				TRM_economic_ties_to_japan_6
				TRM_economic_ties_to_japan_7
				TRM_economic_ties_to_japan_8
				TRM_economic_ties_to_japan_9
				TRM_economic_ties_to_japan_10
				hino_automobile
				nakajima_factory_vladivostok
			}
			remove_from_tech_sharing_group = japan_research
		}
	}
}

RUS_puppet_setup = {
	var:tag_to_release = {
		if = {
			limit = { tag = RUS }
			if = {
				limit = {
					ROOT = { is_germany_or_splinter_tag = yes }
					NOT = { has_country_leader = { character = RUS_pavel_bermondt_avalov } }
				}
				meta_effect = {
					text = {
						add_country_leader_role = {
							character = RUS_pavel_bermondt_avalov
							country_leader = {
								desc = RUS_pavel_bermondt_avalov_leader_desc
								ideology = [OVERLORD_IDEOLOGY]
							}
							promote_leader = yes
						}
					}
					OVERLORD_IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
				}
				set_politics = {
					ruling_party = var:current_party_ideology_group
					elections_allowed = no
				}
			}
			if = {
				limit = {
					OR = {
						has_completed_focus = RUS_Restore_The_Monarchy
						has_completed_focus = RUS_A_Firm_Hand
					}
				}
				unlock_national_focus = RUS_The_Republic_Survives
			}
			if = {
				limit = {
					219 = { #Moscow
						is_owned_and_controlled_by = PREV
						is_capital = no
					}
				}
				set_capital = { state = 219 remember_old_capital = no }
			}
			RUS_arseny_golovko = { set_nationality = PREV }
			RUS_neon_antonov = { set_nationality = PREV }
			RUS_filipp_ivanov = { set_nationality = PREV }
			RUS_gordey_levchenko = { set_nationality = PREV }
			RUS_aleksandr_nemits = { set_nationality = PREV }
			RUS_aleksandr_novikov = { set_nationality = PREV }
			RUS_aleksandr_samoylo = { set_nationality = PREV }
			RUS_mikhail_yangel = { set_nationality = PREV }
			RUS_igor_kurchatov = { set_nationality = PREV }
		}
		else_if = {
			limit = { tag = SOV }
			if = {
				limit = { NOT = { has_completed_focus = SOV_Rebuild_The_Country } }
				add_ideas = SOV_aftermath_of_the_civil_war_1
			}
			RUS_karl_radek = {
				set_nationality = PREV
				promote_character = yes
			}
			RUS_aleksandra_kollontai = {
				set_nationality = PREV
				promote_character = yes
			}
			RUS_aleksandr_shlyapnikov = {
				set_nationality = PREV
				promote_character = yes
			}
			RUS_nikolay_bukharin = {
				set_nationality = PREV
				promote_character = yes
			}
			RUS_aleksey_rykov = {
				set_nationality = PREV
				promote_character = yes
			}
			RUS_arseny_golovko = { set_nationality = PREV }
			RUS_neon_antonov = { set_nationality = PREV }
			RUS_filipp_ivanov = { set_nationality = PREV }
			RUS_gordey_levchenko = { set_nationality = PREV }
			RUS = {
				RUS_aleksandr_nemits = { set_nationality = PREV.PREV }
				RUS_aleksandr_novikov = { set_nationality = PREV.PREV }
				RUS_aleksandr_samoylo = { set_nationality = PREV.PREV }
				RUS_mikhail_yangel = { set_nationality = PREV.PREV }
				RUS_igor_kurchatov = { set_nationality = PREV.PREV }
			}
			INT = { country_event = { id = fopcoup.44 days = 3 random_days = 3 } }
			FOP = { country_event = { id = fopcoup.44 days = 3 random_days = 3 } }
			ENG = { country_event = { id = russia.1920 days = 2 random_hours = 24 } }
		}
		else_if = {
			limit = { tag = TRM }
			remove_ideas = {
				TRM_dream_1
				TRM_dream_2
			}
			if = {
				limit = { has_idea = TRM_dream_3 }
				swap_ideas = {
					remove_idea = TRM_dream_3
					add_idea = TRM_legacy_of_transamur_1
				}
			}
			else_if = {
				limit = { has_idea = TRM_dream_4 }
				swap_ideas = {
					remove_idea = TRM_dream_4
					add_idea = TRM_legacy_of_transamur_2
				}
			}
			else_if = {
				limit = { has_idea = TRM_dream_5 }
				swap_ideas = {
					remove_idea = TRM_dream_5
					add_idea = TRM_legacy_of_transamur_3
				}
			}
			RUS_vladimir_tolstov = { remove_all_country_leader_roles = yes }
			if = {
				limit = { ROOT = { tag = JAP } }
				RUS_oi_shigemoto = { promote_character = yes }
			}
			else_if = {
				limit = { has_cosmetic_tag = TRM_GU }
				meta_effect = {
					text = {
						RUS_vladimir_tolstov = {
							add_country_leader_role = {
								country_leader = { ideology = [IDEOLOGY] }
								promote_leader = yes
							}
						}
					}
					IDEOLOGY = "[?ROOT.current_party_ideology_group.GetTokenKey]_subtype"
				}
			}
			else = {
				RUS_grigory_semyonov = { promote_character = yes }
			}
		}
	}
}

remove_all_russian_cores = {
	every_state = {
		limit = {
			OR = {
				is_core_of = RUS
				is_claimed_by = RUS
				is_core_of = SOV
				is_claimed_by = SOV
				is_core_of = TRM
				is_claimed_by = TRM
			}
		}
		if = {
			limit = { NOT = { country_exists = RUS } }
			remove_core_of = RUS
			remove_claim_by = RUS
		}
		if = {
			limit = { NOT = { country_exists = SOV } }
			remove_core_of = SOV
			remove_claim_by = SOV
		}
		if = {
			limit = { NOT = { country_exists = TRM } }
			remove_core_of = TRM
			remove_claim_by = TRM
		}
		if = {
			limit = { NOT = { country_exists = SIB } }
			remove_core_of = SIB
			remove_claim_by = SIB
		}
		for_each_scope_loop = {
			array = RUS.RUS_starting_states_array
			add_core_of = var:tag_to_release
		}
	}
}

RUS_cossack_ataman_effect = {
	division_template = {
		name = "Kazachya Kavaleryskaya Diviziya"
		division_names_group = RUS_CAV_01
		template_counter = 05

		regiments = {
			cavalry = { x = 0 y = 0 }
			cavalry = { x = 0 y = 1 }
			cavalry = { x = 1 y = 0 }
			cavalry = { x = 1 y = 1 }
			mot_artillery_brigade = { x = 2 y = 0 }
			light_armor = { x = 3 y = 0 }
		}
		support = {
			engineer = { x = 0 y = 0 }
			artillery = { x = 0 y = 1 }
			recon = { x = 0 y = 2 }
		}
	}
	capital_scope = {
		create_unit = {
			division = "division_template = \"Kazachya Kavaleryskaya Diviziya\" start_experience_factor = 0.8 start_equipment_factor = 1.0"
			owner = ROOT
			count = 5
		}
	}
	deactivate_advisor = RUS_gerasim_vdovenko
	RUS_gerasim_vdovenko = { remove_political_advisor_role = yes }
	add_advisor_role = {
		character = RUS_gerasim_vdovenko
		advisor = {
			slot = political_advisor
			idea_token = RUS_gerasim_vdovenko
			traits = { RUS_cossack_ataman_spawned }
		}
		activate = yes
	}
}

RUS_starting_plane_variants = {
	if = {
		limit = { has_dlc_bba = yes }
		create_equipment_variant = {
			name = "I-15"
			type = small_plane_airframe_0
			modules = {
				fixed_main_weapon_slot = light_mg_4x
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
			obsolete = yes
		}
		create_equipment_variant = {
			name = "I-16"
			type = small_plane_airframe_1
			modules = {
				fixed_main_weapon_slot = light_mg_2x
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
		}
		create_equipment_variant = {
			name = "DB-3"
			type = medium_plane_airframe_0
			modules = {
				fixed_main_weapon_slot = medium_bomb_bay
				fixed_auxiliary_weapon_slot_1 = medium_bomb_bay
				engine_type_slot = engine_2_2x
				special_type_slot_1 = lmg_defense_turret
			}
		}
		create_equipment_variant = {
			name = "TB-3"
			type = large_plane_airframe_0
			modules = {
				fixed_main_weapon_slot = large_bomb_bay
				fixed_auxiliary_weapon_slot_1 = empty
				engine_type_slot = engine_1_4x
				special_type_slot_1 = lmg_defense_turret_2x
			}
		}
		create_equipment_variant = {
			name = "ANT-40"
			type = medium_plane_airframe_1
			modules = {
				fixed_main_weapon_slot = medium_bomb_bay
				fixed_auxiliary_weapon_slot_1 = medium_bomb_bay
				engine_type_slot = engine_2_2x
				special_type_slot_1 = lmg_defense_turret_2x
			}
		}
	}
}

RUS_starting_tank_variants = {
	### Variants ###
	if = {
		limit = { has_dlc_nsb = yes }
		create_equipment_variant = {
			name = "T-27"
			type = light_tank_chassis_0
			parent_version = 0
			modules = {
				main_armament_slot = tank_heavy_machine_gun
				turret_type_slot = tank_light_fixed_superstructure_turret
				suspension_type_slot = tank_bogie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
			}
			upgrades = {
				tank_nsb_engine_upgrade = 1
				tank_nsb_armor_upgrade = 1
			}
			obsolete = yes
		}
		create_equipment_variant = {
			name = "T-26TU mod. 1933"
			type = light_tank_chassis_1
			parent_version = 0
			modules = {
				main_armament_slot = tank_small_cannon_2
				turret_type_slot = tank_light_two_man_tank_turret
				suspension_type_slot = tank_bogie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
				special_type_slot_1 = tank_radio_1
			}
			upgrades = {
				tank_nsb_engine_upgrade = 2
				tank_nsb_armor_upgrade = 2
			}
		}
		create_equipment_variant = {
			name = "BT-5"
			type = light_tank_chassis_2
			parent_version = 0
			modules = {
				main_armament_slot = tank_small_cannon_2
				turret_type_slot = tank_light_one_man_tank_turret
				suspension_type_slot = tank_christie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
				special_type_slot_1 = tank_radio_1
			}
			upgrades = {
				tank_nsb_engine_upgrade = 8
				tank_nsb_armor_upgrade = 1
			}
		}
		create_equipment_variant = {
			name = "BT-7"
			type = light_tank_chassis_2
			parent_version = 0
			modules = {
				main_armament_slot = tank_small_cannon_2
				turret_type_slot = tank_light_two_man_tank_turret
				suspension_type_slot = tank_christie_suspension
				armor_type_slot = tank_welded_armor
				engine_type_slot = tank_gasoline_engine
			}
			upgrades = {
				tank_nsb_engine_upgrade = 10
				tank_nsb_armor_upgrade = 2
			}
		}
		create_equipment_variant = {
			name = "T-28"
			type = medium_tank_chassis_0
			parent_version = 0
			modules = {
				main_armament_slot = tank_close_support_gun
				turret_type_slot = tank_medium_three_man_tank_turret
				suspension_type_slot = tank_bogie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
				special_type_slot_1 = tank_radio_1
				special_type_slot_2 = secondary_turret_hmg
				special_type_slot_3 = secondary_turret_hmg
			}
			upgrades = {
				tank_nsb_armor_upgrade = 3
				tank_nsb_engine_upgrade = 10
			}
		}
		create_equipment_variant = {
			name = "T-35"
			type = heavy_tank_chassis_0
			parent_version = 0
			modules = {
				main_armament_slot = tank_close_support_gun
				turret_type_slot = tank_medium_three_man_tank_turret
				suspension_type_slot = tank_bogie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
				special_type_slot_1 = tank_radio_1
				special_type_slot_2 = secondary_turret_hmg
				special_type_slot_3 = secondary_turret_hmg
				special_type_slot_4 = secondary_turret_small_cannon
			}
			upgrades = {
				tank_nsb_armor_upgrade = 3
				tank_nsb_engine_upgrade = 10
			}
		}
	}
}

RUS_starting_naval_variants = {
	### Submarines ###
	create_equipment_variant = {
		name = "Series I"
		type = ship_hull_submarine_1
		name_group = RUS_ANIMALS_NAVY
		parent_version = 0
		modules = {
			fixed_ship_torpedo_slot = ship_torpedo_sub_1
			fixed_ship_engine_slot = sub_ship_engine_1
			rear_1_custom_slot = ship_torpedo_sub_1
		}
		obsolete = yes
	}
	create_equipment_variant = {
		name = "Series II"
		type = ship_hull_submarine_2
		name_group = RUS_ANIMALS_NAVY
		parent_version = 0
		modules = {
			fixed_ship_torpedo_slot = ship_torpedo_sub_1
			fixed_ship_engine_slot = sub_ship_engine_1
			rear_1_custom_slot = ship_mine_layer_sub
		}
	}
	create_equipment_variant = {
		name = "Series V"
		type = ship_hull_submarine_1
		name_group = RUS_ANIMALS_NAVY
		parent_version = 0
		modules = {
			fixed_ship_torpedo_slot = ship_torpedo_sub_2
			fixed_ship_engine_slot = sub_ship_engine_1
			rear_1_custom_slot = empty
		}
		obsolete = yes
	}
	create_equipment_variant = {
		name = "Series IX"
		type = ship_hull_submarine_2
		name_group = RUS_ANIMALS_NAVY
		parent_version = 0
		modules = {
			fixed_ship_torpedo_slot = ship_torpedo_sub_2
			fixed_ship_engine_slot = sub_ship_engine_2
			rear_1_custom_slot = empty
		}
		obsolete = yes
	}
	create_equipment_variant = {
		name = "Series X"
		type = ship_hull_submarine_2
		name_group = RUS_ANIMALS_NAVY
		parent_version = 0
		modules = {
			fixed_ship_torpedo_slot = ship_torpedo_sub_2
			fixed_ship_engine_slot = sub_ship_engine_2
			rear_1_custom_slot = ship_torpedo_sub_2
		}
	}

	### Destroyers ###
	create_equipment_variant = {
		name = "Orfey Class" #WW1 destroyers
		type = ship_hull_light_1
		name_group = RUS_ADJECTIVES_NAVY
		parent_version = 0
		modules = {
			fixed_ship_battery_slot = ship_light_battery_1
			fixed_ship_anti_air_slot = empty
			fixed_ship_fire_control_system_slot = ship_fire_control_system_0
			fixed_ship_radar_slot = empty
			fixed_ship_engine_slot = light_ship_engine_1
			fixed_ship_torpedo_slot = ship_torpedo_1
			mid_1_custom_slot = ship_torpedo_1
			rear_1_custom_slot = empty
		}
		obsolete = yes
	}
	create_equipment_variant = {
		name = "Petrograd Class" #equivalent to OTL Leningrad
		type = ship_hull_light_2
		name_group = RUS_CITIES_NAVY
		parent_version = 0
		modules = {
			fixed_ship_battery_slot = ship_light_battery_2
			fixed_ship_anti_air_slot = ship_anti_air_1
			fixed_ship_fire_control_system_slot = ship_fire_control_system_0
			fixed_ship_radar_slot = empty
			fixed_ship_engine_slot = light_ship_engine_2
			fixed_ship_torpedo_slot = ship_torpedo_1
			mid_1_custom_slot = empty
			rear_1_custom_slot = ship_depth_charge_1
		}
	}

	### Light Cruisers ###
	create_equipment_variant = {
		name = "Svetlana Class" #WW1 cruisers
		type = ship_hull_cruiser_1
		name_group = RUS_NAMES_NAVY
		parent_version = 0
		modules = {
			fixed_ship_battery_slot = ship_light_medium_battery_1
			fixed_ship_anti_air_slot = ship_anti_air_1
			fixed_ship_fire_control_system_slot = ship_fire_control_system_0
			fixed_ship_radar_slot = empty
			fixed_ship_engine_slot = cruiser_ship_engine_1
			mid_1_custom_slot = ship_light_medium_battery_1
			mid_2_custom_slot = ship_torpedo_1
			rear_1_custom_slot = ship_mine_layer_1
		}
	}

	### Heavy Cruisers ###
	create_equipment_variant = {
		name = "Okhotnik Class"
		type = ship_hull_cruiser_1
		name_group = RUS_SHIPS_NAVY
		parent_version = 0
		modules = {
			fixed_ship_battery_slot = ship_medium_battery_1
			fixed_ship_anti_air_slot = ship_anti_air_1
			fixed_ship_fire_control_system_slot = ship_fire_control_system_0
			fixed_ship_radar_slot = empty
			fixed_ship_engine_slot = cruiser_ship_engine_2
			fixed_ship_armor_slot = ship_armor_cruiser_1
			mid_1_custom_slot = ship_airplane_launcher_1
			mid_2_custom_slot = ship_anti_air_1
			rear_1_custom_slot = ship_medium_battery_1
		}
	}

	### Battleships ###
	create_equipment_variant = {
		name = "Gangut Class" #WW1 battleships
		type = ship_hull_heavy_1
		name_group = RUS_BATTLES_NAVY
		parent_version = 0
		modules = {
			fixed_ship_battery_slot = ship_heavy_battery_1
			fixed_ship_anti_air_slot = ship_anti_air_1
			fixed_ship_fire_control_system_slot = ship_fire_control_system_0
			fixed_ship_radar_slot = empty
			fixed_ship_engine_slot = heavy_ship_engine_1
			fixed_ship_secondaries_slot = ship_secondaries_1
			fixed_ship_armor_slot = ship_armor_bb_1
			front_1_custom_slot = ship_heavy_battery_1
			mid_1_custom_slot = empty
			mid_2_custom_slot = empty
			rear_1_custom_slot = empty
		}
	}
}

SOV_move_exiled_leaders = {
	SOV = {
		RUS_mikhail_tukhachevsky = { set_nationality = PREV.PREV }
		RUS_aleksandr_yegorov = { set_nationality = PREV.PREV }
		RUS_georgy_zhukov = { set_nationality = PREV.PREV }
		RUS_iosib_dzugashvili = {
			if = {
				limit = { is_dead = no }
				set_nationality = PREV.PREV
			}
		}
	}
}

RUS_moscow_accord_threat = {
	add_named_threat = {
		threat = 10
		name = RUS_moscow_accord_threat
	}
}

RUS_create_puppet_boris_romanov = {
	event_target:original_russia = {
		RUS_boris_romanov = {
			character_becomes_leader_of_ruling_party_effect_tooltip = yes
			hidden_effect = {
				set_nationality = PREV.PREV
				set_character_name = RUS_boris_romanov_regnal
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = { ideology = social_democrat_subtype }
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = { ideology = social_liberal_subtype }
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = { ideology = market_liberal_subtype }
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = { ideology = social_conservative_subtype }
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = { ideology = authoritarian_democrat_subtype }
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = { ideology = paternal_autocrat_subtype }
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = { ideology = national_populist_subtype }
					promote_leader = yes
				}
			}
		}
	}
}

RUS_enable_integration = {
	ROOT = { #needed due to PREV shenanigans in history file
		EST = { enable_coring_at_eighty_compliance = yes }
		LAT = { enable_coring_at_eighty_compliance = yes }
		LIT = { enable_coring_at_eighty_compliance = yes }
		WHR = { enable_coring_at_eighty_compliance = yes }
		UKR = { enable_coring_at_eighty_compliance = yes }
		ALO = { enable_coring_at_eighty_compliance = yes }
		TRK = { enable_coring_at_eighty_compliance = yes }
		BUK = { enable_coring_at_eighty_compliance = yes }
		KHI = { enable_coring_at_eighty_compliance = yes }
		GEO = { enable_coring_at_eighty_compliance = yes }
		AZR = { enable_coring_at_eighty_compliance = yes }
		ARM = { enable_coring_at_eighty_compliance = yes }

		73 = { enable_state_integration_80_compliance = yes } #Transcarpathia
		78 = { enable_state_integration_80_compliance = yes } #Bessarabia
		80 = { enable_state_integration_80_compliance = yes } #Cernauti
		89 = { enable_state_integration_80_compliance = yes } #Stanislawow
		91 = { enable_state_integration_80_compliance = yes } #Lwow
		97 = { enable_state_integration_80_compliance = yes } #Bialystok
		146 = { enable_state_integration_80_compliance = yes } #Vyborg
		188 = { enable_state_integration_80_compliance = yes } #Memel
		329 = { enable_state_integration_80_compliance = yes } #Tuva
		418 = { enable_state_integration_80_compliance = yes } #Ashkhabad
		537 = { enable_state_integration_80_compliance = yes } #Sakhalin
		555 = { enable_state_integration_80_compliance = yes } #Kuril Islands
		585 = { enable_state_integration_80_compliance = yes } #Batumi
		1000 = { enable_state_integration_80_compliance = yes } #Kars
		1088 = { enable_state_integration_80_compliance = yes } #Chelm
	}
}
