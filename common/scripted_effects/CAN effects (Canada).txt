CAN_transfer_iedc_leadership = {
	clr_country_flag = CAN_refused_iedc
	random_country = {
		limit = { has_idea = CAN_iedc_main }
		remove_ideas = CAN_iedc_main
	}
	add_ideas = CAN_iedc_main
}

CAN_remove_from_iedc = {
	if = {
		limit = { has_country_flag = CAN_joined_iedc }
		custom_effect_tooltip = CAN_leave_the_iedc
		clr_country_flag = CAN_joined_iedc
		remove_from_array = { global.iedc_members = THIS }
		CAN_remove_from_iedc_effect = yes
	}
}

CAN_remove_from_iedc_effect = {
	clear_variable = iedc_contribution
	if = {
		limit = { has_idea = CAN_iedc_econ1 }
		remove_ideas = CAN_iedc_econ1
	}
	if = {
		limit = { has_idea = CAN_iedc_econ2 }
		remove_ideas = CAN_iedc_econ2
	}
	if = {
		limit = { has_idea = CAN_iedc_econ3 }
		remove_ideas = CAN_iedc_econ3
	}
	if = {
		limit = { has_idea = CAN_iedc_naval1 }
		remove_ideas = CAN_iedc_naval1
	}
	if = {
		limit = { has_idea = CAN_iedc_naval2 }
		remove_ideas = CAN_iedc_naval2
	}
	if = {
		limit = { has_idea = CAN_iedc_naval3 }
		remove_ideas = CAN_iedc_naval3
	}
	if = {
		limit = { has_idea = CAN_iedc_const1 }
		remove_ideas = CAN_iedc_const1
	}
	if = {
		limit = { has_idea = CAN_iedc_const2 }
		remove_ideas = CAN_iedc_const2
	}
	if = {
		limit = { has_idea = CAN_iedc_const3 }
		remove_ideas = CAN_iedc_const3
	}
	if = {
		limit = { check_variable = { iedc_civ_factories > 0 } }
		custom_effect_tooltip = CAN_remove_iedc_civ
		hidden_effect = {
			set_variable = { tempvar1 = 0 }
			subtract_from_variable = { var = tempvar1 value = iedc_civ_factories }
			add_offsite_building = { type = industrial_complex level = tempvar1 }
			clear_variable = tempvar1
		}
	}
	if = {
		limit = { check_variable = { iedc_mil_factories > 0 } }
		custom_effect_tooltip = CAN_remove_iedc_mil
		hidden_effect = {
			set_variable = { tempvar2 = 0 }
			subtract_from_variable = { var = tempvar2 value = iedc_mil_factories }
			add_offsite_building = { type = arms_factory level = tempvar2 }
			clear_variable = tempvar2
		}
	}
	if = {
		limit = { check_variable = { iedc_nav_factories > 0 } }
		custom_effect_tooltip = CAN_remove_iedc_nav
		hidden_effect = {
			set_variable = { tempvar3 = 0 }
			subtract_from_variable = { var = tempvar3 value = iedc_nav_factories }
			add_offsite_building = { type = dockyard level = tempvar3 }
			clear_variable = tempvar3
		}
	}
	hidden_effect = {
		clear_variable = iedc_civ_factories
		clear_variable = iedc_mil_factories
		clear_variable = iedc_nav_factories
		random_country = {
			limit = { has_idea = CAN_iedc_main }
			remove_opinion_modifier = { target = ROOT modifier = CAN_iedc_member }
		}
	}
}

CAN_find_entente_leader = {
	if = {
		limit = {
			NOT = { tag = GBR }
			GBR = {
				is_in_faction_with = ROOT
				is_subject = no
				surrender_progress < 0.40
			}
		}
		GBR = { save_event_target_as = entente_transfer_to }
	}
	else_if = {
		limit = {
			NOT = { tag = CAN }
			CAN = {
				is_in_faction_with = ROOT
				is_subject = no
				surrender_progress < 0.40
			}
		}
		CAN = { save_event_target_as = entente_transfer_to }
	}
	else_if = {
		limit = {
			NOT = { original_tag = NFA }
			NFA = {
				is_in_faction_with = ROOT
				is_subject = no
				surrender_progress < 0.40
			}
		}
		NFA = { save_event_target_as = entente_transfer_to }
	}
	else_if = {
		limit = {
			any_allied_country = {
				is_subject = no
				is_actual_major = yes
				surrender_progress < 0.40
				NOT = {
					tag = AST
					tag = NZL
					tag = GEX
				}
			}
		}
		random_other_country = {
			limit = {
				is_in_faction_with = ROOT
				is_subject = no
				is_actual_major = yes
				surrender_progress < 0.40
				NOT = {
					tag = AST
					tag = NZL
					tag = GEX
				}
			}
			save_event_target_as = entente_transfer_to
		}
	}
	else = {
		save_event_target_as = entente_collapses
	}
}

CAN_transfer_entente_leader = {
	event_target:entente_transfer_to = {
		set_faction_leader = yes
		save_global_event_target_as = KR_entente_leader
		if = {
			limit = { tag = CAN }
			if = {
				limit = { has_idea = CAN_all_hands_on_deck_idea }
				swap_ideas = {
					remove_idea = CAN_all_hands_on_deck_idea
					add_idea = CAN_darkest_hour
				}
			}
			else_if = {
				limit = { has_idea = has_scripted_peace }
				swap_ideas = {
					remove_idea = has_scripted_peace
					add_idea = CAN_darkest_hour
				}
			}
			else_if = {
				limit = {
					surrender_progress > 0.05
					NOT = {
						has_idea = CAN_rally_the_country
						has_idea = CAN_darkest_hour
					}
				}
				add_ideas = CAN_darkest_hour
			}
		}
	}
	if = {
		limit = { has_global_flag = CAN_iedc_created }
		event_target:entente_transfer_to = {
			CAN_transfer_iedc_leadership = yes
		}
	}
}

CAN_entente_collapses = {
	hidden_effect = {
		# release puppets
		every_subject_country = {
			ROOT = {
				set_autonomy = {
					target = PREV
					autonomy_state = autonomy_free
				}
			}
		}
		# inform Entente members
		every_other_country = {
			limit = {
				has_country_flag = KR_was_in_entente
				NOT = { is_in_faction_with = ROOT }
			}
			clr_country_flag = KR_was_in_entente
		}
		every_other_country = {
			limit = { is_in_faction_with = ROOT }
			set_country_flag = KR_was_in_entente
			country_event = entente.257
			# Portugal collapses if exiled
			if = {
				limit = { tag = POR }
				country_event = { id = portugal_exile.14 days = 7 }
			}
		}
		# peace out the Entente
		every_country = {
			limit = {
				has_war = yes
				is_valid_peace_target = yes
				NOT = { has_country_flag = KR_was_in_entente }
				any_enemy_country = { has_country_flag = KR_was_in_entente }
			}
			country_event = { id = entente.258 hours = 3 }
		}
		# disband ISAC if created
		if = {
			limit = { has_global_flag = CAN_isac_created }
			remove_from_tech_sharing_group = entente_research
			clr_global_flag = CAN_isac_created
		}
		# disband IEDC if created
		if = {
			limit = { has_global_flag = CAN_iedc_created }
			random_country = {
				limit = { has_idea = CAN_iedc_main }
				remove_ideas = CAN_iedc_main
			}
			CAN_remove_from_iedc = yes
			clr_global_flag = CAN_iedc_created
		}
		# remove NFA's claims and cores, if it's dead
		if = {
			limit = { NOT = { country_exists = NFA } }
			every_state = {
				limit = {
					OR = {
						is_core_of = NFA
						is_claimed_by = NFA
					}
				}
				remove_core_of = NFA
				remove_claim_by = NFA
			}
		}
		add_named_threat = {
			threat = 15
			name = CAN_entente_collapse_threat
		}
	}
	dismantle_faction = yes
	GBR = { save_global_event_target_as = KR_entente_leader }
}

CAN_transfer_king_base = {
	set_country_flag = KR_british_king_base
	clr_country_flag = CAN_king_toured
	clr_global_flag = CAN_king_on_tour
	clr_global_flag = CAN_king_busy
	set_global_flag = { flag = CAN_king_busy days = 30 value = 1 }
	clr_country_flag = CAN_visit_cancel
	set_variable = { king_popularity = event_target:KR_king_base.king_popularity }
	event_target:KR_king_base = {
		if = {
			limit = { check_variable = { king_civ_factories > 0 } }
			custom_effect_tooltip = CAN_remove_king_civ
			hidden_effect = {
				set_variable = { tempvar1 = 0 }
				subtract_from_variable = { var = tempvar1 value = king_civ_factories }
				add_offsite_building = { type = industrial_complex level = tempvar1 }
				clear_variable = tempvar1
			}
		}
		if = {
			limit = { check_variable = { king_mil_factories > 0 } }
			custom_effect_tooltip = CAN_remove_king_mil
			hidden_effect = {
				set_variable = { tempvar2 = 0 }
				subtract_from_variable = { var = tempvar2 value = king_mil_factories }
				add_offsite_building = { type = arms_factory level = tempvar2 }
				clear_variable = tempvar2
			}
		}
	}
	set_variable = { king_civ_factories = 0 }
	set_variable = { king_mil_factories = 0 }
	if = {
		limit = { NOT = { tag = GBR } }
		set_variable = { king_influence = 1 }
	}
	if = {
		limit = {
			tag = GBR
			check_variable = { king_popularity < 5 }
		}
		add_to_variable = { king_popularity = 1 }
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_home_isles }
		}
		set_country_flag = CAN_speech_home_isles
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_war_eng }
		}
		set_country_flag = CAN_speech_war_eng
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_war_ger }
		}
		set_country_flag = CAN_speech_war_ger
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_war_acw }
		}
		set_country_flag = CAN_speech_war_acw
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_france_taken }
		}
		set_country_flag = CAN_speech_france_taken
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_france_mainland }
		}
		set_country_flag = CAN_speech_france_mainland
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_india_united }
		}
		set_country_flag = CAN_speech_india_united
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_italy_united }
		}
		set_country_flag = CAN_speech_italy_united
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_india_defeated }
		}
		set_country_flag = CAN_speech_india_defeated
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_aus_syndicalist }
		}
		set_country_flag = CAN_speech_aus_syndicalist
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_wif_syndicalist }
		}
		set_country_flag = CAN_speech_wif_syndicalist
	}
	if = {
		limit = {
			event_target:KR_king_base = { has_country_flag = CAN_speech_acw_begins }
		}
		set_country_flag = CAN_speech_acw_begins
	}
	event_target:KR_king_base = {
		set_country_flag = CAN_visit_cancel
		clr_country_flag = KR_british_king_base
		clr_country_flag = CAN_speech_home_isles
		clr_country_flag = CAN_speech_war_eng
		clr_country_flag = CAN_speech_war_ger
		clr_country_flag = CAN_speech_war_acw
		clr_country_flag = CAN_speech_france_taken
		clr_country_flag = CAN_speech_france_mainland
		clr_country_flag = CAN_speech_india_united
		clr_country_flag = CAN_speech_italy_united
		clr_country_flag = CAN_speech_india_defeated
		clr_country_flag = CAN_speech_aus_syndicalist
		clr_country_flag = CAN_speech_wif_syndicalist
		clr_country_flag = CAN_speech_acw_begins
		clr_country_flag = CAN_suppressed_exiles
		clr_country_flag = CAN_supported_government
		clr_country_flag = CAN_exile_inc_influence
		clr_country_flag = CAN_exile_inc_industry
		clr_country_flag = CAN_exile_inc_popularity
		if = {
			limit = { tag = CAN }
			set_variable = { CAN_was_king_popularity = king_popularity }
		}
		clear_variable = king_popularity
		clear_variable = king_influence
		clear_variable = CAN_visit_stability
		clear_variable = CAN_visit_war_support
		clear_variable = CAN_visit_mobilisation
		clear_variable = CAN_visit_morale
		clear_variable = king_civ_factories
		clear_variable = king_mil_factories
		clear_variable = CAN_exile_building
		clear_variable = CAN_exile_factory
		clear_variable = CAN_exile_power
		clear_variable = CAN_exile_stability
	}
	save_global_event_target_as = KR_king_base
	CAN_calc_royal_visit_effects = yes
	if = {
		limit = { NOT = { tag = GBR } }
		CAN_calc_exile_influence_effects = yes
	}
	if = {
		limit = {
			NOT = {
				has_idea = CAN_rally_the_country
				has_idea = CAN_all_hands_on_deck_idea
				has_idea = CAN_darkest_hour
				has_idea = has_scripted_peace
			}
			has_war = yes
			any_owned_state = {
				is_core_of = PREV
				NOT = { is_controlled_by = PREV }
			}
		}
		add_ideas = CAN_rally_the_country
	}
	if = {
		limit = { has_idea = CAN_all_hands_on_deck_idea }
		swap_ideas = {
			remove_idea = CAN_all_hands_on_deck_idea
			add_idea = CAN_rally_the_country
		}
	}
	else_if = {
		limit = { has_idea = CAN_darkest_hour }
		swap_ideas = {
			remove_idea = CAN_darkest_hour
			add_idea = CAN_rally_the_country
		}
	}
	else_if = {
		limit = { has_idea = has_scripted_peace }
		swap_ideas = {
			remove_idea = has_scripted_peace
			add_idea = CAN_rally_the_country
		}
	}
	hidden_effect = {
		country_event = { id = entente.50 days = 90 random_days = 60 } #restart random royal events
	}
}

CAN_add_ws_based_on_popularity_cw = {
	if = {
		limit = {
			check_variable = { event_target:king_home.king_popularity > 4 }
		}
		add_war_support = 0.10
	}
	else_if = {
		limit = {
			check_variable = { event_target:king_home.king_popularity > 3 }
			check_variable = { event_target:king_home.king_popularity < 5 }
		}
		add_war_support = 0.075
	}
	else_if = {
		limit = {
			check_variable = { event_target:king_home.king_popularity > 2 }
			check_variable = { event_target:king_home.king_popularity < 4 }
		}
		add_war_support = 0.05
	}
	else_if = {
		limit = {
			check_variable = { event_target:king_home.king_popularity > 1 }
			check_variable = { event_target:king_home.king_popularity < 3 }
		}
		add_war_support = 0.035
	}
	else = {
		add_war_support = 0.025
	}
}

CAN_add_ws_based_on_popularity = {
	if = {
		limit = {
			check_variable = { event_target:king_home.king_popularity > 5 }
		}
		add_war_support = 0.10
	}
	else_if = {
		limit = {
			check_variable = { event_target:king_home.king_popularity > 4 }
			check_variable = { event_target:king_home.king_popularity < 6 }
		}
		add_war_support = 0.075
	}
	else_if = {
		limit = {
			check_variable = { event_target:king_home.king_popularity > 3 }
			check_variable = { event_target:king_home.king_popularity < 5 }
		}
		add_war_support = 0.05
	}
	else_if = {
		limit = {
			check_variable = { event_target:king_home.king_popularity > 2 }
			check_variable = { event_target:king_home.king_popularity < 4 }
		}
		add_war_support = 0.035
	}
	else = {
		add_war_support = 0.025
	}
}

CAN_calc_royal_visit_effects = {
	hidden_effect = {
		event_target:KR_king_base = {
			if = {
				limit = {
					check_variable = { king_popularity > 4 }
				}
				set_variable = { CAN_visit_stability = 0.05 }
				set_variable = { CAN_visit_war_support = 0.20 }
				set_variable = { CAN_visit_mobilisation = 0.20 }
				set_variable = { CAN_visit_morale = 0.20 }
			}
			else_if = {
				limit = {
					check_variable = { king_popularity > 3 }
					check_variable = { king_popularity < 5 }
				}
				set_variable = { CAN_visit_stability = 0.04 }
				set_variable = { CAN_visit_war_support = 0.15 }
				set_variable = { CAN_visit_mobilisation = 0.15 }
				set_variable = { CAN_visit_morale = 0.15 }
			}
			else_if = {
				limit = {
					check_variable = { king_popularity > 2 }
					check_variable = { king_popularity < 4 }
				}
				set_variable = { CAN_visit_stability = 0.03 }
				set_variable = { CAN_visit_war_support = 0.10 }
				set_variable = { CAN_visit_mobilisation = 0.10 }
				set_variable = { CAN_visit_morale = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { king_popularity > 1 }
					check_variable = { king_popularity < 3 }
				}
				set_variable = { CAN_visit_stability = 0.02 }
				set_variable = { CAN_visit_war_support = 0.075 }
				set_variable = { CAN_visit_mobilisation = 0.075 }
				set_variable = { CAN_visit_morale = 0.075 }
			}
			else = {
				set_variable = { CAN_visit_stability = 0.01 }
				set_variable = { CAN_visit_war_support = 0.05 }
				set_variable = { CAN_visit_mobilisation = 0.05 }
				set_variable = { CAN_visit_morale = 0.05 }
			}
			force_update_dynamic_modifier = yes
		}
	}
}

CAN_calc_exile_influence_effects = {
	hidden_effect = {
		event_target:KR_king_base = {
			if = {
				limit = {
					check_variable = { king_influence > 4 }
				}
				set_variable = { CAN_exile_building = 0.25 }
				set_variable = { CAN_exile_factory = 0.25 }
				set_variable = { CAN_exile_power = 0.25 }
				set_variable = { CAN_exile_stability = 0.10 }
			}
			else_if = {
				limit = {
					check_variable = { king_influence > 3 }
					check_variable = { king_influence < 5 }
				}
				set_variable = { CAN_exile_building = 0.20 }
				set_variable = { CAN_exile_factory = 0.20 }
				set_variable = { CAN_exile_power = 0.20 }
				set_variable = { CAN_exile_stability = 0.08 }
			}
			else_if = {
				limit = {
					check_variable = { king_influence > 2 }
					check_variable = { king_influence < 4 }
				}
				set_variable = { CAN_exile_building = 0.15 }
				set_variable = { CAN_exile_factory = 0.15 }
				set_variable = { CAN_exile_power = 0.15 }
				set_variable = { CAN_exile_stability = 0.06 }
			}
			else_if = {
				limit = {
					check_variable = { king_influence > 1 }
					check_variable = { king_influence < 3 }
				}
				set_variable = { CAN_exile_building = 0.10 }
				set_variable = { CAN_exile_factory = 0.10 }
				set_variable = { CAN_exile_power = 0.10 }
				set_variable = { CAN_exile_stability = 0.04 }
			}
			else = {
				set_variable = { CAN_exile_building = 0.05 }
				set_variable = { CAN_exile_factory = 0.05 }
				set_variable = { CAN_exile_power = 0.05 }
				set_variable = { CAN_exile_stability = 0.02 }
			}
			force_update_dynamic_modifier = yes
		}
	}
}

CAN_improve_depression_idea = {
	if = {
		limit = { has_idea = CAN_great_depression_1 }
		swap_ideas = {
			remove_idea = CAN_great_depression_1
			add_idea = CAN_great_depression_2
		}
	}
	else_if = {
		limit = { has_idea = CAN_great_depression_2 }
		swap_ideas = {
			remove_idea = CAN_great_depression_2
			add_idea = CAN_great_depression_3
		}
	}
	else_if = {
		limit = { has_idea = CAN_great_depression_3 }
		remove_ideas = CAN_great_depression_3
	}
}

CAN_improve_french_tensions_idea = {
	if = {
		limit = { has_idea = CAN_anglo_french_tensions_1 }
		swap_ideas = {
			remove_idea = CAN_anglo_french_tensions_1
			add_idea = CAN_anglo_french_tensions_2
		}
	}
	else_if = {
		limit = { has_idea = CAN_anglo_french_tensions_2 }
		swap_ideas = {
			remove_idea = CAN_anglo_french_tensions_2
			add_idea = CAN_anglo_french_tensions_3
		}
	}
	else_if = {
		limit = { has_idea = CAN_anglo_french_tensions_3 }
		remove_ideas = CAN_anglo_french_tensions_3
	}
}

CAN_reduce_french_resistance = {
	hidden_effect = {
		if = {
			limit = { has_dynamic_modifier = { modifier = CAN_french_resistance_3 } }
			remove_dynamic_modifier = { modifier = CAN_french_resistance_3 }
			add_dynamic_modifier = { modifier = CAN_french_resistance_2 }
		}
		else_if = {
			limit = { has_dynamic_modifier = { modifier = CAN_french_resistance_2 } }
			remove_dynamic_modifier = { modifier = CAN_french_resistance_2 }
			add_dynamic_modifier = { modifier = CAN_french_resistance_1 }
		}
		else_if = {
			limit = { has_dynamic_modifier = { modifier = CAN_french_resistance_1 } }
			remove_dynamic_modifier = { modifier = CAN_french_resistance_1 }
		}
	}
}

CAN_create_uk_cores = {
	ENG = {
		every_core_state = {
			add_core_of = GBR
			remove_claim_by = CAN
		}
	}
	every_state = {
		limit = {
			OR = {
				is_core_of = GBR
				is_british_colonial_claim = yes
				state = 118 #Gibraltar
				state = 753 #Suez Canal
				state = 299 #Falkland Islands
				state = 720 #South Georgia Islands
				state = 116 #Malta
				state = 183 #Cyprus
			}
		}
		clear_variable = ambition_area_CAN
	}
}

CAN_release_uk = {
	GBR = {
		every_core_state = {
			limit = { is_owned_by_ROOT_or_subject = yes }
			transfer_state_to = GBR
			restore_previous_factory_count = yes
		}
	}
	every_owned_state = {
		limit = {
			OR = {
				region = 4 #Ireland
				region = 45 #Norwegian Sea
				region = 161 #Iceland
			}
			is_claim_or_core_of_ROOT = no
		}
		save_current_factory_count = yes
		transfer_state_to = GBR
		restore_previous_factory_count = yes
	}
}

CAN_create_monarchy = {
	if = {
		limit = { ENT_king_edward_viii = yes }
		GBR_create_edward = yes
	}
	else_if = {
		limit = { ENT_king_albert_i = yes }
		GBR_create_albert = yes
	}
	else_if = {
		limit = { ENT_king_henry_ix = yes }
		GBR_create_henry = yes
	}
	else_if = {
		limit = { ENT_king_george_vi = yes }
		GBR_create_george = yes
	}
	else = { #this should never happen... but just in case
		var:GBR.GBR_british_king = { clr_character_flag = GBR_british_king }

		GBR = {
			GBR_george_frederick_windsor = {
				set_nationality = PREV.PREV
				set_character_flag = GBR_british_king
				set_variable = { GBR.GBR_british_king = THIS }
				character_becomes_leader_of_ruling_party_effect_tooltip = yes
				hidden_effect = {
					remove_all_country_leader_roles = yes
					if = {
						limit = { PREV = { tag = GBR } }
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_GBR
								ideology = social_democrat_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_GBR
								ideology = social_liberal_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_GBR
								ideology = market_liberal_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_GBR
								ideology = social_conservative_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_GBR
								ideology = authoritarian_democrat_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_GBR
								ideology = paternal_autocrat_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_GBR
								ideology = national_populist_subtype
							}
							promote_leader = yes
						}
					}
					else = {
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_exiled
								ideology = social_democrat_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_exiled
								ideology = social_liberal_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_exiled
								ideology = market_liberal_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_exiled
								ideology = social_conservative_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_exiled
								ideology = authoritarian_democrat_subtype
							}
							promote_leader = yes
						}
						add_country_leader_role = {
							country_leader = {
								desc = GBR_george_frederick_windsor_leader_desc_king_exiled
								ideology = paternal_autocrat_subtype
							}
							promote_leader = yes
						}
					}
				}
			}
		}
	}

	# move the princes too if they're not country leaders elsewhere (usually AST)
	GBR = {
		GBR_george_frederick_windsor = {
			if = {
				limit = {
					is_country_leader = no
					is_dead = no
				}
				set_nationality = PREV.PREV
				if = {
					limit = {
						owner = { tag = GBR }
						has_trait = GBR_british_exile_trait
					}
					remove_unit_leader_trait = GBR_british_exile_trait
				}
			}
		}
		GBR_edward_windsor = {
			if = {
				limit = {
					is_country_leader = no
					is_dead = no
				}
				set_nationality = PREV.PREV
				if = {
					limit = {
						owner = { tag = GBR }
						has_trait = GBR_british_exile_trait
					}
					remove_unit_leader_trait = GBR_british_exile_trait
				}
			}
		}
		GBR_albert_windsor = {
			if = {
				limit = {
					is_country_leader = no
					is_dead = no
				}
				set_nationality = PREV.PREV
				if = {
					limit = {
						owner = { tag = GBR }
						has_trait = GBR_british_exile_trait
					}
					remove_unit_leader_trait = GBR_british_exile_trait
				}
			}
		}
		GBR_henry_windsor = {
			if = {
				limit = {
					is_country_leader = no
					is_dead = no
				}
				set_nationality = PREV.PREV
				if = {
					limit = {
						owner = { tag = GBR }
						has_trait = GBR_british_exile_trait
					}
					remove_unit_leader_trait = GBR_british_exile_trait
				}
			}
		}
		GBR_george_windsor = {
			if = {
				limit = {
					is_country_leader = no
					is_dead = no
				}
				set_nationality = PREV.PREV
				if = {
					limit = {
						owner = { tag = GBR }
						has_trait = GBR_british_exile_trait
					}
					remove_unit_leader_trait = GBR_british_exile_trait
				}
			}
		}
	}
}

CAN_create_republic = {
	if = {
		limit = { has_cosmetic_tag = CAN_entente }
		set_cosmetic_tag = CAN
	}
	if = {
		limit = { CAN_major_james_coldwell = { can_be_country_leader = yes } }
		CAN_major_james_coldwell = { promote_character = yes }
	}
	else = {
		CAN_james_shaver_woodsworth = { promote_character = yes }
	}
	CAN_louis_st_laurent = { promote_character = yes }
	if = {
		limit = { has_character = CAN_william_lyon_mackenzie_king }
		CAN_william_lyon_mackenzie_king = { promote_character = yes }
	}
	else = {
		CAN_charles_gavan_power = { promote_character = yes }
	}
	if = {
		limit = { CAN_john_bracken = { can_be_country_leader = yes } }
		CAN_john_bracken = { promote_character = yes }
	}
	else_if = {
		limit = { CAN_robert_manion = { can_be_country_leader = yes } }
		CAN_robert_manion = { promote_character = yes }
	}
	else = {
		CAN_richard_bedford_bennett = { promote_character = yes }
	}
	if = {
		limit = {
			OR = {
				is_subject = yes
				country_exists = GBR
			}
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = CAN_social_credit_party_long
			name = CAN_social_credit_party
		}
		CAN_john_horne_blackmore = { promote_character = yes }
	}
	else = {
		CAN_arthur_meighen = { promote_character = yes }
	}
	CAN_harry_crerar = { promote_character = yes }

	if = {
		limit = {
			has_character = GBR_albert_windsor
			GBR_albert_windsor = { can_be_country_leader = yes }
		}
		custom_effect_tooltip = tooltip_white_line
		GBR_albert_windsor = {
			set_character_name = GBR_albert_windsor
			set_nationality = GBR
		}
	}
	else_if = {
		limit = {
			has_character = GBR_louis_mountbatten
			GBR_louis_mountbatten = { can_be_country_leader = yes }
		}
		custom_effect_tooltip = tooltip_white_line
		GBR_louis_mountbatten = { set_nationality = GBR }
	}
	else_if = {
		limit = {
			has_character = GBR_john_vereker
			GBR_john_vereker = { can_be_country_leader = yes }
		}
		custom_effect_tooltip = tooltip_white_line
		GBR_john_vereker = { set_nationality = GBR }
	}
}

CAN_king_becomes_unpopular = {
	var:GBR.GBR_british_king = {
		if = {
			limit = { has_trait = GBR_popular_figurehead }
			effect_tooltip = { remove_trait = { trait = GBR_popular_figurehead } }
			hidden_effect = {
				set_character_flag = GBR_remove_popular_figurehead
				remove_trait = { trait = GBR_popular_figurehead ideology = social_democrat_subtype }
				remove_trait = { trait = GBR_popular_figurehead ideology = social_liberal_subtype }
				remove_trait = { trait = GBR_popular_figurehead ideology = market_liberal_subtype }
				remove_trait = { trait = GBR_popular_figurehead ideology = social_conservative_subtype }
				remove_trait = { trait = GBR_popular_figurehead ideology = authoritarian_democrat_subtype }
				remove_trait = { trait = GBR_popular_figurehead ideology = paternal_autocrat_subtype }
			}
		}
		else_if = {
			limit = { has_trait = GBR_returning_king }
			effect_tooltip = { remove_trait = { trait = GBR_returning_king } }
			hidden_effect = {
				clr_character_flag = GBR_has_returning_king
				remove_trait = { trait = GBR_returning_king ideology = social_democrat_subtype }
				remove_trait = { trait = GBR_returning_king ideology = social_liberal_subtype }
				remove_trait = { trait = GBR_returning_king ideology = market_liberal_subtype }
				remove_trait = { trait = GBR_returning_king ideology = social_conservative_subtype }
				remove_trait = { trait = GBR_returning_king ideology = authoritarian_democrat_subtype }
				remove_trait = { trait = GBR_returning_king ideology = paternal_autocrat_subtype }
			}
		}
		else = {
			effect_tooltip = { add_trait = { trait = GBR_unpopular_monarch } }
			hidden_effect = {
				set_character_flag = GBR_has_unpopular_monarch
				add_trait = { trait = GBR_unpopular_monarch ideology = social_democrat_subtype }
				add_trait = { trait = GBR_unpopular_monarch ideology = social_liberal_subtype }
				add_trait = { trait = GBR_unpopular_monarch ideology = market_liberal_subtype }
				add_trait = { trait = GBR_unpopular_monarch ideology = social_conservative_subtype }
				add_trait = { trait = GBR_unpopular_monarch ideology = authoritarian_democrat_subtype }
				add_trait = { trait = GBR_unpopular_monarch ideology = paternal_autocrat_subtype }
			}
		}
	}
}

CAN_add_returning_king = {
	var:GBR.GBR_british_king = {
		if = {
			limit = { has_trait = GBR_popular_figurehead }
			set_character_flag = GBR_remove_popular_figurehead
			remove_trait = { trait = GBR_popular_figurehead ideology = social_democrat_subtype }
			remove_trait = { trait = GBR_popular_figurehead ideology = social_liberal_subtype }
			remove_trait = { trait = GBR_popular_figurehead ideology = market_liberal_subtype }
			remove_trait = { trait = GBR_popular_figurehead ideology = social_conservative_subtype }
			remove_trait = { trait = GBR_popular_figurehead ideology = authoritarian_democrat_subtype }
			remove_trait = { trait = GBR_popular_figurehead ideology = paternal_autocrat_subtype }
		}
		else_if = {
			limit = { has_trait = GBR_unpopular_monarch }
			clr_character_flag = GBR_has_unpopular_monarch
			remove_trait = { trait = GBR_unpopular_monarch ideology = social_democrat_subtype }
			remove_trait = { trait = GBR_unpopular_monarch ideology = social_liberal_subtype }
			remove_trait = { trait = GBR_unpopular_monarch ideology = market_liberal_subtype }
			remove_trait = { trait = GBR_unpopular_monarch ideology = social_conservative_subtype }
			remove_trait = { trait = GBR_unpopular_monarch ideology = authoritarian_democrat_subtype }
			remove_trait = { trait = GBR_unpopular_monarch ideology = paternal_autocrat_subtype }
		}
		set_character_flag = GBR_has_returning_king
		add_trait = { trait = GBR_returning_king ideology = social_democrat_subtype }
		add_trait = { trait = GBR_returning_king ideology = social_liberal_subtype }
		add_trait = { trait = GBR_returning_king ideology = market_liberal_subtype }
		add_trait = { trait = GBR_returning_king ideology = social_conservative_subtype }
		add_trait = { trait = GBR_returning_king ideology = authoritarian_democrat_subtype }
		add_trait = { trait = GBR_returning_king ideology = paternal_autocrat_subtype }
	}
}

CAN_add_major_james_coldwell_sic = {
	effect_tooltip = {
		if = {
			limit = {
				CAN_is_dominion = yes
				has_character = CAN_major_james_coldwell
				CAN_major_james_coldwell = { is_second_in_command = no }
			}
			activate_advisor = CAN_major_james_coldwell_sic
		}
	}
}

CAN_add_mackenzie_king_sic = {
	effect_tooltip = {
		if = {
			limit = {
				CAN_is_dominion = yes
				has_character = CAN_william_lyon_mackenzie_king
				CAN_william_lyon_mackenzie_king = { is_second_in_command = no }
			}
			activate_advisor = CAN_william_lyon_mackenzie_king_sic
		}
	}
}

CAN_add_louis_st_laurent_sic = {
	effect_tooltip = {
		if = {
			limit = {
				CAN_is_dominion = yes
				has_character = CAN_louis_st_laurent
				CAN_louis_st_laurent = { is_second_in_command = no }
			}
			activate_advisor = CAN_louis_st_laurent_sic
		}
	}
}

CAN_add_conservative_second_in_command = {
	effect_tooltip = {
		if = {
			limit = { CAN_is_dominion = yes }
			if = {
				limit = {
					has_character = CAN_richard_bedford_bennett
					CAN_richard_bedford_bennett = { is_second_in_command = no }
				}
				activate_advisor = CAN_richard_bedford_bennett_sic
			}
			else_if = {
				limit = {
					has_character = CAN_robert_manion
					CAN_robert_manion = { is_second_in_command = no }
				}
				activate_advisor = CAN_robert_manion_sic
			}
			if = {
				limit = {
					has_character = CAN_john_bracken
					CAN_john_bracken = { is_second_in_command = no }
				}
				activate_advisor = CAN_john_bracken_sic
			}
		}
	}
}

CAN_add_arthur_meighen_sic = {
	effect_tooltip = {
		if = {
			limit = {
				CAN_is_dominion = yes
				has_character = CAN_arthur_meighen
				CAN_arthur_meighen = { is_second_in_command = no }
			}
			activate_advisor = CAN_arthur_meighen_sic
		}
	}
}

CAN_add_correct_second_in_command = {
	if = {
		limit = { CAN_is_dominion = no }
		activate_advisor = CAN_canadian_parliament_sic
	}
	else = {
		if = {
			limit = {
				has_government = social_democrat
				CAN_major_james_coldwell = { has_advisor_role = second_in_command }
			}
			activate_advisor = CAN_major_james_coldwell_sic
		}
		else_if = {
			limit = {
				has_government = social_liberal
				CAN_louis_st_laurent = { has_advisor_role = second_in_command }
			}
			activate_advisor = CAN_louis_st_laurent_sic
		}
		else_if = {
			limit = {
				has_government = market_liberal
				CAN_william_lyon_mackenzie_king = { has_advisor_role = second_in_command }
			}
			activate_advisor = CAN_william_lyon_mackenzie_king_sic
		}
		else_if = {
			limit = { has_government = social_conservative }
			if = {
				limit = {
					CAN_john_bracken = { can_be_country_leader = yes }
					CAN_john_bracken = { has_advisor_role = second_in_command }
				}
				activate_advisor = CAN_john_bracken_sic
			}
			else_if = {
				limit = {
					CAN_robert_manion = { can_be_country_leader = yes }
					CAN_robert_manion = { has_advisor_role = second_in_command }
				}
				activate_advisor = CAN_robert_manion_sic
			}
			else_if = {
				limit = {
					CAN_richard_bedford_bennett = { has_advisor_role = second_in_command }
				}
				activate_advisor = CAN_richard_bedford_bennett_sic
			}
			else = {
				activate_advisor = CAN_canadian_parliament_sic
			}
		}
		else_if = {
			limit = {
				has_government = authoritarian_democrat
				CAN_arthur_meighen = { has_advisor_role = second_in_command }
			}
			activate_advisor = CAN_arthur_meighen_sic
		}
		else = {
			activate_advisor = CAN_canadian_parliament_sic
		}
	}
}

CAN_convert_british_pm_slots = {
	set_global_flag = GBR_british_pm_slot_changed
	if = {
		limit = { GBR_austen_chamberlain = { is_political_advisor = yes } }
		hidden_effect = { deactivate_advisor = GBR_austen_chamberlain_political_advisor }
		activate_advisor = GBR_austen_chamberlain_second_in_command
	}
	else_if = {
		limit = { GBR_anthony_eden = { is_political_advisor = yes } }
		hidden_effect = { deactivate_advisor = GBR_anthony_eden_political_advisor }
		activate_advisor = GBR_anthony_eden_second_in_command
	}
	else_if = {
		limit = { GBR_robert_gascoyne_cecil = { is_political_advisor = yes } }
		hidden_effect = { deactivate_advisor = GBR_robert_gascoyne_cecil_political_advisor }
		activate_advisor = GBR_robert_gascoyne_cecil_second_in_command
	}
	else_if = {
		limit = { GBR_robert_vansittart = { is_political_advisor = yes } }
		hidden_effect = { deactivate_advisor = GBR_robert_vansittart_political_advisor }
		activate_advisor = GBR_robert_vansittart_second_in_command
	}
	else_if = {
		limit = { GBR_henry_page_croft = { is_political_advisor = yes } }
		hidden_effect = { deactivate_advisor = GBR_henry_page_croft_political_advisor }
		activate_advisor = GBR_henry_page_croft_second_in_command
	}
}

CAN_revert_british_pm_slots = {
	set_global_flag = GBR_british_pm_slot_changed
	if = {
		limit = { GBR_austen_chamberlain = { is_second_in_command = yes } }
		hidden_effect = { CAN_add_correct_second_in_command = yes }
		activate_advisor = GBR_austen_chamberlain_political_advisor
	}
	else_if = {
		limit = { GBR_anthony_eden = { is_second_in_command = yes } }
		hidden_effect = { CAN_add_correct_second_in_command = yes }
		activate_advisor = GBR_anthony_eden_political_advisor
	}
	else_if = {
		limit = { GBR_robert_gascoyne_cecil = { is_second_in_command = yes } }
		hidden_effect = { CAN_add_correct_second_in_command = yes }
		activate_advisor = GBR_robert_gascoyne_cecil_political_advisor
	}
	else_if = {
		limit = { GBR_robert_vansittart = { is_second_in_command = yes } }
		hidden_effect = { CAN_add_correct_second_in_command = yes }
		activate_advisor = GBR_robert_vansittart_political_advisor
	}
	else_if = {
		limit = { GBR_henry_page_croft = { is_second_in_command = yes } }
		hidden_effect = { CAN_add_correct_second_in_command = yes }
		activate_advisor = GBR_henry_page_croft_political_advisor
	}
}

CAN_setup_uk_government = {
	CAN = {
		every_character = {
			limit = { has_character_flag = GBR_character }
			set_nationality = GBR
		}
	}
	CAN_convert_british_pm_slots = yes
	CAN_add_british_pm = yes
}

CAN_add_british_pm = {
	hidden_effect = { CAN_remove_current_british_pm = yes }
	if = {
		limit = { GBR = { GBR_henry_page_croft = { is_character = var:GBR.GBR_prime_minister } } }
		set_global_flag = GBR_cons_leader_croft
		clr_global_flag = GBR_cons_leader_cecil
		clr_global_flag = GBR_cons_leader_eden
		if = {
			limit = { has_global_flag = GBR_british_pm_slot_changed }
			activate_advisor = GBR_henry_page_croft_second_in_command
		}
		else = {
			activate_advisor = GBR_henry_page_croft_political_advisor
		}
	}
	else_if = {
		limit = { GBR = { GBR_robert_gascoyne_cecil = { is_character = var:GBR.GBR_prime_minister } } }
		clr_global_flag = GBR_cons_leader_croft
		set_global_flag = GBR_cons_leader_cecil
		clr_global_flag = GBR_cons_leader_eden
		if = {
			limit = { has_global_flag = GBR_british_pm_slot_changed }
			activate_advisor = GBR_robert_gascoyne_cecil_second_in_command
		}
		else = {
			activate_advisor = GBR_robert_gascoyne_cecil_political_advisor
		}
	}
	else_if = {
		limit = { GBR = { GBR_anthony_eden = { is_character = var:GBR.GBR_prime_minister } } }
		clr_global_flag = GBR_cons_leader_croft
		clr_global_flag = GBR_cons_leader_cecil
		set_global_flag = GBR_cons_leader_eden
		if = {
			limit = { has_global_flag = GBR_british_pm_slot_changed }
			activate_advisor = GBR_anthony_eden_second_in_command
		}
		else = {
			activate_advisor = GBR_anthony_eden_political_advisor
		}
	}
	else_if = {
		limit = { GBR = { GBR_robert_vansittart = { is_character = var:GBR.GBR_prime_minister } } }
		clr_global_flag = GBR_cons_leader_croft
		clr_global_flag = GBR_cons_leader_cecil
		clr_global_flag = GBR_cons_leader_eden
		if = {
			limit = { has_global_flag = GBR_british_pm_slot_changed }
			activate_advisor = GBR_robert_vansittart_second_in_command
		}
		else = {
			activate_advisor = GBR_robert_vansittart_political_advisor
		}
	}
	else = {
		if = {
			limit = { has_global_flag = GBR_british_pm_slot_changed }
			activate_advisor = GBR_austen_chamberlain_second_in_command
		}
		else = {
			activate_advisor = GBR_austen_chamberlain_political_advisor
		}
	}
}

CAN_remove_current_british_pm = {
	hidden_effect = { remove_ideas_with_trait = GBR_british_pm_in_exile }
}

CAN_activate_resources_decisions = {		# Used for american tags in annex canada event
	if = {
		limit = { 276 = { NOT = { has_state_flag = CAN_coal_mines_developed } } }
		activate_targeted_decision = { target = 276 decision = CAN_develop_ontario_coal_mines }
	}
	if = {
		limit = { 470 = { NOT = { has_state_flag = CAN_oil_wells_developed } } }
		activate_targeted_decision = { target = 470 decision = CAN_develop_alberta_oil_wells }
	}
	if = {
		limit = { 682 = { NOT = { has_state_flag = CAN_aluminium_mines_developed } } }
		activate_targeted_decision = { target = 682 decision = CAN_develop_ontario_aluminium_mines }
	}
	if = {
		limit = { 470 = { NOT = { has_state_flag = CAN_oil_wells_developed2 } } }
		activate_targeted_decision = { target = 470 decision = CAN_develop_alberta_oil_wells2 }
	}
	if = {
		limit = { 469 = { NOT = { has_state_flag = CAN_oil_wells_developed } } }
		activate_targeted_decision = { target = 469 decision = CAN_develop_sask_oil_wells }
	}
	if = {
		limit = { 471 = { NOT = { has_state_flag = CAN_oil_wells_developed } } }
		activate_targeted_decision = { target = 471 decision = CAN_develop_yukon_oil_wells }
	}
	if = {
		limit = { 332 = { NOT = { has_state_flag = CAN_tungsten_mines_developed } } }
		activate_targeted_decision = { target = 332 decision = CAN_develop_quebec_tungsten_mines }
	}
	if = {
		limit = { 465 = { NOT = { has_state_flag = CAN_tungsten_mines_developed } } }
		activate_targeted_decision = { target = 465 decision = CAN_develop_newbrun_tungsten_mines }
	}
	if = {
		limit = { 332 = { NOT = { has_state_flag = CAN_iron_mines_developed } } }
		activate_targeted_decision = { target = 332 decision = CAN_develop_labrador_iron_mines }
	}
	if = {
		limit = { 466 = { NOT = { has_state_flag = CAN_aluminium_mines_developed } } }
		activate_targeted_decision = { target = 466 decision = CAN_develop_quebec_aluminium_mines }
	}
	if = {
		limit = { 682 = { NOT = { has_state_flag = CAN_chromium_mines_developed } } }
		activate_targeted_decision = { target = 682 decision = CAN_develop_ontario_chromium_mines }
	}
	if = {
		limit = { 332 = { NOT = { has_state_flag = CAN_chromium_mines_developed } } }
		activate_targeted_decision = { target = 332 decision = CAN_develop_quebec_chromium_mines }
	}
}

CAN_setup_NEE_suppression_decisions = {
	activate_targeted_decision = { target = 357 decision = CAN_put_down_rebellion }
	activate_targeted_decision = { target = 934 decision = CAN_put_down_rebellion }
	activate_targeted_decision = { target = 933 decision = CAN_put_down_rebellion }
	activate_targeted_decision = { target = 932 decision = CAN_put_down_rebellion }
	activate_targeted_decision = { target = 935 decision = CAN_put_down_rebellion }
	activate_targeted_decision = { target = 931 decision = CAN_put_down_rebellion }
	activate_targeted_decision = { target = 796 decision = CAN_put_down_rebellion }
	activate_targeted_decision = { target = 930 decision = CAN_put_down_rebellion }
}

CAN_teardown_NEE_suppression_decisions = {
	remove_targeted_decision = { target = 357 decision = CAN_put_down_rebellion }
	remove_targeted_decision = { target = 934 decision = CAN_put_down_rebellion }
	remove_targeted_decision = { target = 933 decision = CAN_put_down_rebellion }
	remove_targeted_decision = { target = 932 decision = CAN_put_down_rebellion }
	remove_targeted_decision = { target = 935 decision = CAN_put_down_rebellion }
	remove_targeted_decision = { target = 931 decision = CAN_put_down_rebellion }
	remove_targeted_decision = { target = 796 decision = CAN_put_down_rebellion }
	remove_targeted_decision = { target = 930 decision = CAN_put_down_rebellion }
}

entente_add_reclamation_wars_threat = {
	if = {
		limit = { NOT = { has_global_flag = entente_reclamation_wars_threat } }
		set_global_flag = entente_reclamation_wars_threat
		ENT = {
			add_named_threat = {
				threat = 15
				name = reclamation_wars_threat
			}
		}
	}
}

CAN_add_starting_variants = {
	if = {
		limit = { has_dlc_nsb = yes }
		create_equipment_variant = {
			name = "A4 'Reliant' Mk. I"
			type = light_tank_chassis_1
			parent_version = 0
			modules = {
				main_armament_slot = tank_small_cannon
				turret_type_slot = tank_light_one_man_tank_turret
				suspension_type_slot = tank_christie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
			}
			upgrades = {
				tank_nsb_engine_upgrade = 2
				tank_nsb_armor_upgrade = 1
			}
			obsolete = yes #used for oob
		}
		create_equipment_variant = {
			name = "A4 'Reliant' Mk. II"
			type = light_tank_chassis_1
			parent_version = 1
			modules = {
				main_armament_slot = tank_small_cannon
				turret_type_slot = tank_light_two_man_tank_turret
				suspension_type_slot = tank_christie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
				special_type_slot_1 = tank_radio_1
				special_type_slot_2 = smoke_launchers
			}
			upgrades = {
				tank_nsb_engine_upgrade = 2
				tank_nsb_armor_upgrade = 1
			}
		}
		create_equipment_variant = {
			name = "A6 'Timberwolf'"
			type = medium_tank_chassis_0
			parent_version = 0
			modules = {
				main_armament_slot = tank_small_cannon
				turret_type_slot = tank_medium_three_man_tank_turret
				suspension_type_slot = tank_bogie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
				special_type_slot_1 = tank_radio_1
			}
			upgrades = {
				tank_nsb_armor_upgrade = 1
				tank_nsb_engine_upgrade = 2
			}
		}
		create_equipment_variant = {
			name = "Vickers 6 ton A"
			type = light_tank_chassis_1
			parent_version = 2
			modules = {
				main_armament_slot = tank_heavy_machine_gun
				turret_type_slot = tank_light_one_man_tank_turret
				suspension_type_slot = tank_bogie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
				special_type_slot_1 = secondary_turret_hmg
			}
			upgrades = {
				tank_nsb_armor_upgrade = 3
				tank_nsb_engine_upgrade = 2
			}
			icon = "gfx/interface/equipmentdesigner/tanks/designer/ENG/ENG_light_BAB_camo.dds"
			obsolete = yes #export only
		}
		create_equipment_variant = {
			name = "Vickers 6 ton B"
			type = light_tank_chassis_1
			parent_version = 3
			modules = {
				main_armament_slot = tank_small_cannon
				turret_type_slot = tank_light_two_man_tank_turret
				suspension_type_slot = tank_bogie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
			}
			upgrades = {
				tank_nsb_armor_upgrade = 3
				tank_nsb_engine_upgrade = 2
			}
			icon = "gfx/interface/equipmentdesigner/tanks/designer/ENG/ENG_light_BAB_camo.dds"
			obsolete = yes #export only
		}
		create_equipment_variant = {
			name = "Vickers A1 'Independent'"
			type = heavy_tank_chassis_1
			parent_version = 0
			modules = {
				main_armament_slot = tank_close_support_gun
				turret_type_slot = tank_medium_two_man_tank_turret
				suspension_type_slot = tank_bogie_suspension
				armor_type_slot = tank_riveted_armor
				engine_type_slot = tank_gasoline_engine
				special_type_slot_1 = tank_radio_1
				special_type_slot_2 = additional_machine_guns
			}
		}
	}

	if = {
		limit = { has_dlc_bba = yes }
		create_equipment_variant = {
			name = "Gloster Gladiator"
			type = small_plane_airframe_0
			modules = {
				fixed_main_weapon_slot = light_mg_4x
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
		}
		create_equipment_variant = {
			name = "Gloster Gladiator"
			type = cv_small_plane_airframe_0
			modules = {
				fixed_main_weapon_slot = light_mg_2x
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
		}
		create_equipment_variant = {
			name = "Fairey Battle"
			type = small_plane_cas_airframe_0
			modules = {
				fixed_main_weapon_slot = bomb_locks
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
		}
		create_equipment_variant = {
			name = "Fairey Swordfish"
			type = small_plane_naval_bomber_airframe_0
			modules = {
				fixed_main_weapon_slot = torpedo_mounting
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
		}
		create_equipment_variant = {
			name = "Fairey Swordfish"
			type = cv_small_plane_naval_bomber_airframe_0
			modules = {
				fixed_main_weapon_slot = torpedo_mounting
				engine_type_slot = engine_1_1x
				special_type_slot_1 = empty
			}
		}
		create_equipment_variant = {
			name = "Fairey Hendon"
			type = medium_plane_airframe_0
			modules = {
				fixed_main_weapon_slot = medium_bomb_bay
				engine_type_slot = engine_1_2x
				special_type_slot_1 = empty
			}
			obsolete = yes
		}
		create_equipment_variant = {
			name = "Bristol Blenheim"
			type = medium_plane_airframe_1
			modules = {
				fixed_main_weapon_slot = medium_bomb_bay
				engine_type_slot = engine_2_2x
				special_type_slot_1 = lmg_defense_turret
			}
		}
	}
}
