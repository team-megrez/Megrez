increase_UFC_profit = {
	hidden_effect = {
		remove_ideas = {
			UFC_Profit_1_idea
			UFC_Profit_2_idea
			UFC_Profit_3
			UFC_Profit_4
			UFC_Profit_5
			UFC_Profit_6
			UFC_Profit_7
			UFC_Profit_8
			UFC_Profit_9
			UFC_Profit_10
			UFC_Profit_11
			UFC_Profit_12
			UFC_Profit_13
			UFC_Profit_14
			UFC_Profit_15
			UFC_Profit_16
		}
		if = {
			limit = { check_variable = { cos_profit_factor = 1 } }
			add_ideas = UFC_Profit_1_idea
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 2 } }
			add_ideas = UFC_Profit_2_idea
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 3 } }
			add_ideas = UFC_Profit_3
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 4 } }
			add_ideas = UFC_Profit_4
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 5 } }
			add_ideas = UFC_Profit_5
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 6 } }
			add_ideas = UFC_Profit_6
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 7 } }
			add_ideas = UFC_Profit_7
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 8 } }
			add_ideas = UFC_Profit_8
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 9 } }
			add_ideas = UFC_Profit_9
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 10 } }
			add_ideas = UFC_Profit_10
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 11 } }
			add_ideas = UFC_Profit_11
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 12 } }
			add_ideas = UFC_Profit_12
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 13 } }
			add_ideas = UFC_Profit_13
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 14 } }
			add_ideas = UFC_Profit_14
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 15 } }
			add_ideas = UFC_Profit_15
		}
		else_if = {
			limit = { check_variable = { cos_profit_factor = 16 } }
			add_ideas = UFC_Profit_16
		}
	}
}

COS_enable_legion_del_caribe_decisions = {
	if = {
		limit = {
			country_exists = CEN
			CEN = { has_elected_government = no }
		}
		activate_targeted_decision = { decision = COS_Legion_del_Caribe_Attack target = CEN }
		CEN = {
			every_owned_state = {
				limit = { region = 34 } #Central America
				add_to_array = { COS.COS_supply_rebels_array = THIS }
				ROOT = { activate_targeted_decision = { decision = COS_Supply_Rebels target = PREV } }
			}
		}
	}
}

COS_disable_legion_del_caribe_decisions = {
	hidden_effect = {
		if = {
			limit = {
				OR = {
					NOT = { country_exists = CEN }
					CEN = { has_elected_government = yes }
				}
			}
			remove_targeted_decision = { decision = COS_Legion_del_Caribe_Attack target = CEN }
			COS_clear_legion_del_caribe_rebel_decisions = yes
		}
	}
}

COS_clear_legion_del_caribe_rebel_decisions = {
	hidden_effect = {
		for_each_scope_loop = {
			array = COS.COS_supply_rebels_array
			clr_state_flag = COS_supplied_rebels
			PREV = { remove_targeted_decision = { decision = COS_Supply_Rebels target = PREV } }
		}
		clear_array = COS.COS_supply_rebels_array
	}
}

COS_create_democratic_rebels_divisions = {
	log = "[GetDateText]: [Root.GetName]: Create divisions COS_create_democratic_rebels_divisions"
	### Delete templates - no cheating
	if = {
		limit = { has_template = "Brigada de Milicia" }
		delete_unit_template_and_units = { division_template = "Brigada de Milicia" disband = yes }
	}
	### Create templates
	division_template = {
		name = "Brigada de Milicia"
		division_names_group = SPAN_INF_01
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
		}
		template_counter = 68
	}
	### Create divisions
	319 = {
		create_unit = {
			division = "division_template = \"Brigada de Milicia\" start_experience_factor = 0.05"
			owner = ROOT
			prioritize_location = 4598
			allow_spawning_on_enemy_provs = yes
		}
	}
}

COS_create_volunteer_divisions_against_CEN = {
	log = "[GetDateText]: [Root.GetName]: Create divisions COS_create_volunteer_divisions_against_CEN"
	### Delete templates - no cheating
	if = {
		limit = { has_template = "Brigada de Voluntarios" }
		delete_unit_template_and_units = { division_template = "Brigada de Voluntarios" disband = yes }
	}
	### Create templates
	division_template = {
		name = "Brigada de Voluntarios"
		division_names_group = SPAN_INF_01
		regiments = {
			infantry = { x = 0 y = 0 }
			infantry = { x = 0 y = 1 }
			infantry = { x = 0 y = 2 }
		}
	}

	### Create divisions
	random_owned_controlled_state = {
		limit = { valid_state_for_spawning_friendly_unit = yes }
		create_unit = {
			division = "division_template = \"Brigada de Voluntarios\" start_experience_factor = 0.05"
			owner = ROOT
		}
		create_unit = {
			division = "division_template = \"Brigada de Voluntarios\" start_experience_factor = 0.05"
			owner = ROOT
		}
		create_unit = {
			division = "division_template = \"Brigada de Voluntarios\" start_experience_factor = 0.05"
			owner = ROOT
		}
	}
}

COS_create_GER_garrison_divisions = {
	log = "[GetDateText]: [Root.GetName]: Create divisions COS_create_GER_garrison_divisions"
	### Delete templates - no cheating
	if = {
		limit = { has_template = "Costa Rica Marine-Division" }
		delete_unit_template_and_units = { division_template = "Costa Rica Marine-Division" disband = yes }
	}
	### Create templates
	division_template = {
		name = "Costa Rica Marine-Division"
		division_names_group = SPAN_MAR_01
		regiments = {
			marine = { x = 0 y = 0 }
			marine = { x = 0 y = 1 }
			marine = { x = 0 y = 2 }
		}
		support = {
			artillery = { x = 0 y = 0 }
		}
		priority = 2
	}
	### Create divisions
	random_owned_controlled_state = {
		limit = { valid_state_for_spawning_friendly_unit = yes }
		prioritize = { 316 }
		create_unit = {
			division = "division_template = \"Costa Rica Marine-Division\" start_experience_factor = 0.5"
			owner = ROOT
			prioritize_location = 12878
		}
	}
}
