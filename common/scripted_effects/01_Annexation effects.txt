occupy_tiny_country = {
	add_political_power = -10
	add_stability = -0.01
	add_war_support = -0.01
	recheck_annexations = yes
}

occupy_small_country = {
	add_political_power = -25
	add_stability = -0.025
	add_war_support = -0.025
	recheck_annexations = yes
}

occupy_medium_country = {
	add_political_power = -50
	add_stability = -0.05
	add_war_support = -0.05
	recheck_annexations = yes
}

occupy_large_country = {
	add_political_power = -100
	add_stability = -0.1
	add_war_support = -0.1
	recheck_annexations = yes
}

occupy_huge_country = {
	add_political_power = -150
	add_stability = -0.15
	add_war_support = -0.15
	recheck_annexations = yes
}

occupy_massive_country = {
	add_political_power = -200
	add_stability = -0.2
	add_war_support = -0.2
	recheck_annexations = yes
}

# state scope
occupy_state = {
	set_state_flag = occupied_by_@PREV
	set_temp_variable = { occupied_by_@THIS = 1 }
	ROOT = { recheck_annexations = yes }
}

# state scope
transfer_and_occupy_state = {
	transfer_state_to = PREV
	set_state_flag = occupied_by_@PREV
	ROOT = { recheck_annexations = yes }
}

# state scope
occupy_state_annexation = {
	set_state_flag = occupied_by_@PREV
	set_state_flag = annexation_occupied_by_@PREV
	set_temp_variable = { occupied_by_@THIS = 1 }
	ROOT = { recheck_annexations = yes }
}

# state scope
transfer_and_occupy_state_annexation = {
	transfer_state_to = PREV
	set_state_flag = occupied_by_@PREV
	set_state_flag = annexation_occupied_by_@PREV
	ROOT = { recheck_annexations = yes }
}

# state scope
clear_occupy_state = {
	clr_state_flag = occupied_by_@PREV
	clr_state_flag = annexation_occupied_by_@PREV
	clear_variable = occupied_by_@THIS
	ROOT = { recheck_annexations = yes }
}

# state scope
state_given_notification_effect = {
	hidden_effect = {
		if = {
			limit = { owner = { is_ai = no } }
			save_event_target_as = granted_land
			state_event = { id = annex.2 trigger_for = owner }
		}
	}
}

# state scope
retain_state = {
	set_state_flag = { flag = retain_state_@ROOT days = 16 value = 1 }
	set_temp_variable = { retain_state_@THIS = 1 }
}

# state scope
clear_retain_state = {
	clr_state_flag = retain_state_@PREV
	clear_variable = retain_state_@THIS
}

# country scope
clear_retained_states = {
	hidden_effect = {
		every_state = {
			limit = { has_state_flag = retain_state_@PREV }
			clr_state_flag = retain_state_@PREV
		}
	}
}

# state scope
transfer_state_without_overriding_occupation = {
	if = {
		limit = { is_fully_controlled_by = owner }
		transfer_state_to = var:tag_to_release
	}
	else = {
		set_state_owner_to = var:tag_to_release
		set_state_province_controller = {
			controller = var:tag_to_release
			limit = { NOT = { has_war_with = ROOT } }
		}
	}
}

# state scope
temporarily_disable_country_annexation = {
	hidden_effect = {
		every_core_state = { set_state_flag = { flag = temporarily_disabled_annexation_@ROOT value = 1 days = 32 } }
		country_event = { id = annex.1 days = 32 }
	}
}

# state scope
temporarily_disable_annexation = {
	hidden_effect = {
		set_state_flag = { flag = temporarily_disabled_annexation_@ROOT value = 1 days = 32 }
		PREV = { country_event = { id = annex.1 days = 32 }}
	}
}

# state scope
save_as_offered_state = {
	temporarily_disable_annexation = yes
	add_to_array = { PREV.offered_states_array = THIS }
}

# state scope
transfer_state_and_add_core = {
	remove_claim_and_add_core_of_target = yes
	transfer_state_without_overriding_occupation = yes
	state_given_notification_effect = yes
	ROOT = { recheck_annexations = yes }
}

# state scope
transfer_state_and_add_claim = {
	add_claim_of_target = yes
	transfer_state_without_overriding_occupation = yes
	state_given_notification_effect = yes
	ROOT = { recheck_annexations = yes }
}

# state scope
transfer_state_and_add_claim_or_core = {
	if = {
		limit = { has_state_flag = was_core_of_@var:tag_to_release }
		transfer_state_and_add_core = yes
		clr_state_flag = was_core_of_@var:tag_to_release
	}
	else = {
		transfer_state_and_add_claim = yes
	}
}

# state scope
remove_claim_and_add_core_of_ROOT = {
	if = {
		limit = { is_claimed_by = ROOT }
		remove_claim_by = ROOT
	}
	if = {
		limit = { NOT = { is_core_of = ROOT } }
		add_core_of = ROOT
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
remove_claim_and_add_core_of_target = {
	if = {
		limit = { is_claimed_by = var:tag_to_release }
		remove_claim_by = var:tag_to_release
	}
	if = {
		limit = { NOT = { is_core_of = var:tag_to_release } }
		add_core_of = var:tag_to_release
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
remove_claim_and_core_of_target = {
	if = {
		limit = { is_core_of = var:tag_to_release }
		remove_core_of = var:tag_to_release
	}
	if = {
		limit = { is_claimed_by = var:tag_to_release }
		remove_claim_by = var:tag_to_release
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
add_claim_of_ROOT = {
	if = {
		limit = { is_claim_or_core_of_ROOT = no }
		add_claim_by = ROOT
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
add_claim_of_target = {
	if = {
		limit = {
			NOT = {
				is_claimed_by = var:tag_to_release
				is_core_of = var:tag_to_release
			}
		}
		add_claim_by = var:tag_to_release
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
transfer_if_owned = {
	if = {
		limit = { is_valid_annexation_state = yes }
		transfer_state_without_overriding_occupation = yes
		state_given_notification_effect = yes
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
add_claim_of_target_and_transfer_if_owned = {
	if = {
		limit = { is_claim_or_core_of_ROOT = no }
		add_claim_of_target = yes
	}
	if = {
		limit = { is_valid_annexation_state = yes }
		transfer_state_without_overriding_occupation = yes
		state_given_notification_effect = yes
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
add_core_of_target_and_transfer_if_owned = {
	if = {
		limit = { is_claim_or_core_of_ROOT = no }
		remove_claim_and_add_core_of_target = yes
	}
	if = {
		limit = { is_valid_annexation_state = yes }
		transfer_state_without_overriding_occupation = yes
		state_given_notification_effect = yes
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
add_core_and_transfer_if_owned_else_add_claim = {
	if = {
		limit = { is_valid_annexation_state = yes }
		remove_claim_and_add_core_of_target = yes
		transfer_state_without_overriding_occupation = yes
		state_given_notification_effect = yes
	}
	else_if = {
		limit = { is_claim_or_core_of_ROOT = no }
		add_claim_of_target = yes
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
add_core_if_owned_else_add_claim = {
	if = {
		limit = {
			OR = {
				is_owned_by = var:tag_to_release
				is_valid_annexation_state = yes
			}
		}
		remove_claim_and_add_core_of_target = yes
	}
	else_if = {
		limit = { is_claim_or_core_of_ROOT = no }
		add_claim_of_target = yes
	}
	ROOT = { recheck_annexations = yes }
}

# state scope
add_core_or_claim_of_target_and_transfer_if_owned = {
	if = {
		limit = { has_state_flag = was_core_of_@var:tag_to_release }
		clr_state_flag = was_core_of_@var:tag_to_release
		add_core_of_target_and_transfer_if_owned = yes
	}
	else_if = {
		limit = { is_claim_or_core_of_ROOT = no }
		add_claim_of_target_and_transfer_if_owned = yes
	}
}

# country scope = {
set_transfer_target_cores = {
	set_temp_variable = { transfer_target_@THIS = 1 }
}

# state scope = {
set_transfer_target_state = {
	set_temp_variable = { state_transfer_target_@THIS = 1 }
}

# global scope
remove_all_cores_and_claims_of_tags = {
	every_state = {
		for_each_loop = {
			array = core_removal_array
			remove_core_of = var:v
			remove_claim_by = var:v
		}
	}
}

# global scope
transfer_targeted_territory = {
	if = {
		limit = { has_war = yes }
		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
				OR = {
					has_variable = state_transfer_target_@THIS
					any_country_with_core = { has_variable = transfer_target_@THIS }
				}
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	else = {
		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
				OR = {
					has_variable = state_transfer_target_@THIS
					any_country_with_core = { has_variable = transfer_target_@THIS }
				}
			}
			transfer_state_to = var:tag_to_release
		}
	}
	clear_retained_states = yes
	recheck_annexations = yes
}

# global scope
transfer_targeted_territory_and_add_claims = {
	every_state = {
		limit = {
			OR = {
				has_variable = state_transfer_target_@THIS
				any_country_with_core = { has_variable = transfer_target_@THIS }
			}
			NOT = { is_core_of = var:tag_to_release }
			NOT = { is_claimed_by = var:tag_to_release }
		}
		add_claim_by = var:tag_to_release
	}
	if = {
		limit = { has_war = yes }
		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
				OR = {
					has_variable = state_transfer_target_@THIS
					any_country_with_core = { has_variable = transfer_target_@THIS }
				}
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	else = {
		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
				OR = {
					has_variable = state_transfer_target_@THIS
					any_country_with_core = { has_variable = transfer_target_@THIS }
				}
			}
			transfer_state_to = var:tag_to_release
		}
	}
	clear_retained_states = yes
	recheck_annexations = yes
}

# global scope
transfer_targeted_territory_and_add_cores = {
	every_state = {
		limit = {
			OR = {
				has_variable = state_transfer_target_@THIS
				any_country_with_core = { has_variable = transfer_target_@THIS }
			}
			NOT = { is_core_of = var:tag_to_release }
		}
		hidden_effect = { remove_claim_by = var:tag_to_release }
		add_core_of = var:tag_to_release
	}
	if = {
		limit = { has_war = yes }
		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
				OR = {
					has_variable = state_transfer_target_@THIS
					any_country_with_core = { has_variable = transfer_target_@THIS }
				}
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	else = {
		every_owned_state = {
			limit = {
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
				OR = {
					has_variable = state_transfer_target_@THIS
					any_country_with_core = { has_variable = transfer_target_@THIS }
				}
			}
			transfer_state_to = var:tag_to_release
		}
	}
	clear_retained_states = yes
	recheck_annexations = yes
}

# global scope
release_targeted_tag_from_core_regions = {
	transfer_targeted_territory = yes
	puppet_released_tag = yes
}

# global scope
release_targeted_tag_from_core_regions_and_add_cores = {
	transfer_targeted_territory_and_add_cores = yes
	puppet_released_tag = yes
}

# global scope
release_targeted_tag_with_claims = {
	if = {
		limit = { has_war = yes }
		every_owned_state = {
			limit = {
				OR = {
					is_core_of = var:tag_to_release
					is_claimed_by = var:tag_to_release
				}
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	else = {
		every_owned_state = {
			limit = {
				OR = {
					is_core_of = var:tag_to_release
					is_claimed_by = var:tag_to_release
				}
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
			}
			transfer_state_to = var:tag_to_release
		}
	}
	clear_retained_states = yes
	puppet_released_tag = yes
}

# global scope
release_targeted_tag = {
	if = {
		limit = { has_war = yes }
		every_owned_state = {
			limit = {
				is_core_of = var:tag_to_release
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	else = {
		every_owned_state = {
			limit = {
				is_core_of = var:tag_to_release
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
			}
			transfer_state_to = var:tag_to_release
		}
	}
	clear_retained_states = yes
	puppet_released_tag = yes
}

# global scope
release_targeted_tag_nocosmetic = {
	if = {
		limit = { has_war = yes }
		every_owned_state = {
			limit = {
				is_core_of = var:tag_to_release
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	else = {
		every_owned_state = {
			limit = {
				is_core_of = var:tag_to_release
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
				NOT = { has_state_flag = occupied_by_@PREV }
				NOT = { has_variable = occupied_by_@THIS }
			}
			transfer_state_to = var:tag_to_release
		}
	}
	clear_retained_states = yes
	puppet_released_tag_nocosmetic = yes
}

# global scope
puppet_released_tag = {
	puppet = var:tag_to_release
	var:tag_to_release = {
		drop_cosmetic_tag = yes
		mark_focus_tree_layout_dirty = yes
		hidden_effect = {
			transfer_technology_without_doctrines = yes
			remove_ideas = ready_to_surrender
			set_politics = {
				ruling_party = var:current_party_ideology_group
				elections_allowed = no
			}
		}
	}
	recheck_annexations = yes
}

# global scope
puppet_released_tag_nocosmetic = {
	puppet = var:tag_to_release
	var:tag_to_release = {
		mark_focus_tree_layout_dirty = yes
		hidden_effect = {
			transfer_technology_without_doctrines = yes
			remove_ideas = ready_to_surrender
			set_politics = {
				ruling_party = var:current_party_ideology_group
				elections_allowed = no
			}
		}
	}
	recheck_annexations = yes
}

### COUNTRY-SPECIFIC EFFECTS ###
release_spain = {
	effect_tooltip = {
		every_owned_state = {
			limit = {
				is_spain = yes
				is_claim_or_core_of_ROOT = no
				OR = {
					is_important_state = no
					ROOT = { is_actual_major = no }
				}
				OR = {
					NOT = { is_core_of = BAS }
					NOT = {
						BAS = { is_ally_of_ROOT = yes }
						has_variable = will_balkanise_spain
					}
				}
				OR = {
					NOT = { is_core_of = GLC }
					NOT = {
						GLC = { is_ally_of_ROOT = yes }
						has_variable = will_balkanise_spain
					}
				}
				OR = {
					NOT = { is_core_of = CAT }
					NOT = {
						CAT = { is_ally_of_ROOT = yes }
						has_variable = will_balkanise_spain
					}
				}
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	hidden_effect = {
		every_state = {
			limit = { is_spain = yes }
			remove_claim_by = SPK
			remove_claim_by = SPR
			remove_claim_by = SWF
			remove_core_of = SPK
			remove_core_of = SPR
			remove_core_of = SWF
			add_core_of = var:tag_to_release
			if = {
				limit = {
					is_owned_by = ROOT
					is_claim_or_core_of_ROOT = no
					OR = {
						is_important_state = no
						ROOT = { is_actual_major = no }
					}
					OR = {
						NOT = { is_core_of = BAS }
						NOT = {
							BAS = { is_ally_of_ROOT = yes }
							has_variable = will_balkanise_spain
						}
					}
					OR = {
						NOT = { is_core_of = GLC }
						NOT = {
							GLC = { is_ally_of_ROOT = yes }
							has_variable = will_balkanise_spain
						}
					}
					OR = {
						NOT = { is_core_of = CAT }
						NOT = {
							CAT = { is_ally_of_ROOT = yes }
							has_variable = will_balkanise_spain
						}
					}
				}
				transfer_state_without_overriding_occupation = yes
			}
		}
		var:tag_to_release = { set_capital = { state = 41 remember_old_capital = no } }
	}
	puppet_released_tag_nocosmetic = yes
}

release_chinese_government = {
	if = {
		limit = {
			tag = JAP
			has_variable = japan_keeps_coast
		}
		every_owned_state = {
			limit = {
				is_china_proper = yes
				if = {
					limit = { ROOT = { owns_state = 743 } }
					is_possible_legation_cities_state = no
				}
				is_claim_or_core_of_ROOT = no
				NOT = { has_variable = ambition_area_@ROOT }
			}
			if = {
				limit = { NOT = { is_core_of = var:tag_to_release } }
				add_claim_by = var:tag_to_release
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	else = {
		every_owned_state = {
			limit = {
				is_china_proper = yes
				if = {
					limit = { ROOT = { owns_state = 743 } }
					is_possible_legation_cities_state = no
				}
				is_claim_or_core_of_ROOT = no
			}
			if = {
				limit = { NOT = { is_core_of = var:tag_to_release } }
				add_claim_by = var:tag_to_release
			}
			transfer_state_to = var:tag_to_release
		}
	}
	hidden_effect = {
		if = {
			limit = {
				693 = { is_valid_annexation_state = yes } #Chamdo
				322 = { is_valid_annexation_state = no } #Tibet
				NOT = { has_country_flag = TIB_CONQ }
				NOT = { is_ally_with = TIB }
			}
			693 = { transfer_state_without_overriding_occupation = yes }
		}
	}
	puppet_released_tag = yes
	if = {
		limit = { var:tag_to_release = { tag = FNG } }
		set_autonomy = {
			target = var:tag_to_release
			autonomy_state = kr_special_autonomous_dependency
			end_wars = no
		}
	}
	if = {
		limit = { original_tag = JAP }
		clr_global_flag = JAP_defeated_by_china
		var:tag_to_release = {
			add_ideas = unequal_treaties_japan
		}
	}
}

release_chinese_government_in_manchuria = {
	if = {
		limit = {
			tag = JAP
			has_variable = japan_keeps_coast
		}
		every_owned_state = {
			limit = {
				is_manchuria = yes
				is_claim_or_core_of_ROOT = no
				NOT = { has_variable = ambition_area_@ROOT }
			}
			if = {
				limit = { NOT = { is_core_of = var:tag_to_release } }
				add_claim_by = var:tag_to_release
			}
			transfer_state_without_overriding_occupation = yes
		}
	}
	else = {
		every_owned_state = {
			limit = {
				is_manchuria = yes
				is_claim_or_core_of_ROOT = no
			}
			if = {
				limit = { NOT = { is_core_of = var:tag_to_release } }
				add_claim_by = var:tag_to_release
			}
			transfer_state_to = var:tag_to_release
		}
	}
	puppet_released_tag = yes
	if = {
		limit = { var:tag_to_release = { tag = FNG } }
		set_autonomy = {
			target = var:tag_to_release
			autonomy_state = kr_special_autonomous_dependency
			end_wars = no
		}
	}
	if = {
		limit = { original_tag = JAP }
		clr_global_flag = JAP_defeated_by_china
	}
}

### IMPORTANT: all checks here need to be exactly the same as the ones in the has_valid_chinese_ally scripted trigger!!!
determine_chinese_ally = {
	hidden_effect = {
		if = {
			limit = { any_subject_country = { china_is_potential_government = yes } }
			random_subject_country = {
				limit = { china_is_potential_government = yes }
				save_event_target_as = china_ally_target
			}
		}
		else_if = {
			limit = { any_allied_country = { china_is_potential_government = yes } }
			random_other_country = {
				limit = {
					is_in_faction_with = PREV
					china_is_potential_government = yes
				}
				save_event_target_as = china_ally_target
			}
		}
		else_if = {
			limit = {
				original_tag = JAP
				has_global_flag = JAP_defeated_by_china
				any_of_scopes = {
					array = global.china_tags_array
					china_is_potential_government = yes
					exists = yes
					is_subject = no
					NOT = { has_war_with = JAP }
				}
			}
			get_highest_scored_country_temp = { scorer = strongest_chinese_government }
			var:highest_scored_country = { save_event_target_as = japan_forced_return }
		}
		else_if = {
			limit = { has_socialist_government = yes }
			if = {
				limit = {
					CHI = {
						exists = yes
						china_annexation_valid_tag = yes
					}
				}
				CHI = { save_event_target_as = china_ally_target }
			}
			else = {
				CHI = { save_event_target_as = china_release_target }
			}
		}
		else_if = {
			limit = {
				OR = {
					tag = GER
					tag = GEA
					tag = GEX
				}
			}
			if = {
				limit = {
					QIE = {
						exists = yes
						NOT = {
							has_global_flag = QIE_manchu_restoration
							has_country_flag = wu_intervenes_proANQ
							has_country_flag = wu_no_intervene
						}
						china_annexation_valid_tag = yes
					}
				}
				QIE = { save_event_target_as = china_ally_target }
			}
			else_if = {
				limit = {
					LEP = {
						exists = yes
						china_annexation_valid_tag = yes
					}
				}
				LEP = { save_event_target_as = china_ally_target }
			}
			else_if = {
				limit = { NOT = { country_exists = LEP } }
				LEP = { save_event_target_as = china_release_target }
			}
		}
		else_if = {
			limit = { tag = JAP }
			if = {
				limit = {
					FNG = {
						exists = yes
						FNG_JAP_hostile = no
						china_annexation_valid_tag = yes
					}
				}
				FNG = { save_event_target_as = china_ally_target }
			}
			else_if = {
				limit = { NOT = { country_exists = FNG } }
				FNG = { save_event_target_as = china_release_target }
			}
		}
		else_if = {
			limit = { tag = RUS }
			if = {
				limit = {
					OR = {
						has_cosmetic_tag = RUS_empire
						has_country_leader = { character = RUS_pyotr_wrangel }
					}
				}
				if = {
					limit = {
						QIE = {
							exists = yes
							OR = {
								has_country_flag = wu_intervenes_proANQ
								has_global_flag = QIE_manchu_restoration
								has_country_flag = wu_no_intervene
							}
							china_annexation_valid_tag = yes
						}
					}
					QIE = { save_event_target_as = china_ally_target }
				}
				else_if = {
					limit = { NOT = { country_exists = QIE } }
					QIE = { save_event_target_as = china_release_target }
				}
			}
			else_if = {
				limit = { has_authoritarian_government = yes }
				if = {
					limit = {
						GXC = {
							exists = yes
							has_country_leader = { character = GXC_li_zongren }
							china_annexation_valid_tag = yes
						}
					}
					GXC = { save_event_target_as = china_ally_target }
				}
				else_if = {
					limit = { NOT = { country_exists = GXC } }
					GXC = { save_event_target_as = china_release_target }
				}
			}
			else = {
				if = {
					limit = {
						GXC = {
							exists = yes
							china_is_aligned_with_federalists = yes
							china_annexation_valid_tag = yes
						}
					}
					GXC = { save_event_target_as = china_ally_target }
				}
				else_if = {
					limit = { NOT = { country_exists = GXC } }
					GXC = { save_event_target_as = china_release_target }
				}
			}
		}
		else_if = {
			limit = { tag = INC }
			if = {
				limit = {
					has_government = social_democrat
				}
				if = {
					limit = {
						CHI = {
							exists = yes
							china_annexation_valid_tag = yes
						}
					}
					CHI = { save_event_target_as = china_ally_target }
				}
				else_if = {
					limit = { NOT = { country_exists = CHI } }
					CHI = { save_event_target_as = china_release_target }
				}
			}
			else_if = {
				limit = {
					OR = {
						has_government = authoritarian_democrat
						has_government = paternal_autocrat
					}
				}
				if = {
					limit = {
						GXC = {
							exists = yes
							has_country_leader = { character = GXC_li_zongren }
							china_annexation_valid_tag = yes
						}
					}
					GXC = { save_event_target_as = china_ally_target }
				}
				else_if = {
					limit = { NOT = { country_exists = GXC } }
					GXC = { save_event_target_as = china_release_target }
				}
			}
		}
		else_if = {
			limit = { has_authoritarian_government = yes }
			if = {
				limit = {
					QIE = {
						exists = yes
						NOT = { has_country_leader = { character = QIE_aisin_gioro_puyi } }
						china_annexation_valid_tag = yes
					}
				}
				QIE = { save_event_target_as = china_ally_target }
			}
			else_if = {
				limit = { NOT = { country_exists = QIE } }
				QIE = { save_event_target_as = china_release_target }
			}
		}
		else = {
			if = {
				limit = {
					GXC = {
						exists = yes
						china_is_aligned_with_federalists = yes
						china_annexation_valid_tag = yes
					}
				}
				GXC = { save_event_target_as = china_ally_target }
			}
			else_if = {
				limit = { NOT = { country_exists = GXC } }
				GXC = { save_event_target_as = china_release_target }
			}
		}
	}
}

transfer_sinai_if_annexation_unavailable = {
	if = {
		limit = {
			453 = { is_valid_annexation_state = yes } #Sinai
			EGY = { ROOT_can_grant_land = no }
			446 = { is_valid_annexation_state = no } #Cairo
		}
		var:tag_to_release = {
			add_state_claim = 453
			transfer_state = 453
		}
	}
}

release_canada = {
	if = {
		limit = { has_war = yes }
		every_owned_state = {
			limit = {
				CAN = { PREV = { is_core_of = PREV } }
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
			}
			if = {
				limit = { is_fully_controlled_by = owner }
				CAN = { transfer_state = PREV }
			}
			else = {
				CAN = { set_state_owner = PREV }
				set_state_province_controller = {
					controller = CAN
					limit = { NOT = { has_war_with = CAN } }
				}
			}
		}
	}
	else = {
		every_owned_state = {
			limit = {
				CAN = { PREV = { is_core_of = PREV } }
				is_claim_or_core_of_ROOT = no
				NOT = { has_state_flag = retain_state_@PREV }
				NOT = { has_variable = retain_state_@THIS }
			}
			CAN = { transfer_state = PREV }
		}
	}
	clear_retained_states = yes
	puppet = CAN
	CAN = {
		mark_focus_tree_layout_dirty = yes
		hidden_effect = {
			transfer_technology_without_doctrines = yes
			remove_ideas = ready_to_surrender
			set_politics = {
				ruling_party = var:current_party_ideology_group
				elections_allowed = no
			}
		}
	}
}
