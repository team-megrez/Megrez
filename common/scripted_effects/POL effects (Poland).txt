POL_percent_to_absolute = {
	if = {
		limit = {
			check_variable = { POL_influence_change > -1 } #== percent value
			check_variable = { POL_influence_change < 1 } #== percent value
		}
		multiply_temp_variable = { POL_influence_change = 100 }
	}
}

POL_add_royal_influence = {
	if = {
		limit = { is_monarchy = yes }
		POL_percent_to_absolute = yes

		custom_effect_tooltip = POL_add_royal_influence

		# lower limit = syndicalist influence * -1
		set_temp_variable = { POL_lower_limit = POL_royal_influence }
		multiply_temp_variable = { POL_lower_limit = -1 }

		# upper limit = republican + nationalist + syndicalist
		set_temp_variable = { POL_upper_limit = POL_rep_influence }
		add_to_temp_variable = { POL_upper_limit = POL_nat_influence }
		add_to_temp_variable = { POL_upper_limit = POL_soc_influence }

		# avoid values outside the allowed range
		clamp_temp_variable = {
			var = POL_influence_change
			min = POL_lower_limit
			max = POL_upper_limit
		}

		#calculate proportional reductions
		set_temp_variable = { POL_reduction_republican = POL_rep_influence }
		divide_temp_variable = { POL_reduction_republican = POL_upper_limit }
		multiply_temp_variable = { POL_reduction_republican = POL_influence_change }

		#calculate proportional reductions
		set_temp_variable = { POL_reduction_nationalist = POL_nat_influence }
		divide_temp_variable = { POL_reduction_nationalist = POL_upper_limit }
		multiply_temp_variable = { POL_reduction_nationalist = POL_influence_change }

		#calculate proportional reductions
		set_temp_variable = { POL_reduction_syndicalist = POL_soc_influence }
		divide_temp_variable = { POL_reduction_syndicalist = POL_upper_limit }
		multiply_temp_variable = { POL_reduction_syndicalist = POL_influence_change }

		#make sure the above values add up to POL_influence_change
		set_temp_variable = { POL_influence_calc = POL_influence_change }
		subtract_from_temp_variable = { POL_influence_calc = POL_reduction_republican }
		subtract_from_temp_variable = { POL_influence_calc = POL_reduction_nationalist }
		subtract_from_temp_variable = { POL_influence_calc = POL_reduction_syndicalist }
		add_to_temp_variable = { POL_reduction_nationalist = POL_influence_calc }

		#finally set the variables
		add_to_variable = { POL_royal_influence = POL_influence_change }
		subtract_from_variable = { POL_rep_influence = POL_reduction_republican }
		subtract_from_variable = { POL_nat_influence = POL_reduction_nationalist }
		subtract_from_variable = { POL_soc_influence = POL_reduction_syndicalist }

		### event checks
		POL_predict_election = yes
	}
}

POL_account_for_disabled_royal_influence = {
	if = {
		limit = { is_monarchy = no }
		#calculate the total non-royal influence
		set_temp_variable = { POL_non_royal_total = POL_soc_influence }
		set_temp_variable = { POL_non_royal_total = POL_rep_influence }
		set_temp_variable = { POL_non_royal_total = POL_nat_influence }

		#calculate proportional syndicalist increase
		set_temp_variable = { POL_royal_to_soc = POL_royal_influence }
		multiply_temp_variable = { POL_royal_to_soc = POL_soc_influence }
		divide_temp_variable = { POL_royal_to_soc = POL_non_royal_total }

		#calculate proportional republican increase
		set_temp_variable = { POL_royal_to_rep = POL_royal_influence }
		multiply_temp_variable = { POL_royal_to_rep = POL_rep_influence }
		divide_temp_variable = { POL_royal_to_rep = POL_non_royal_total }

		#calculate proportional nationalist increase
		set_temp_variable = { POL_royal_to_nat = POL_royal_influence }
		multiply_temp_variable = { POL_royal_to_nat = POL_nat_influence }
		divide_temp_variable = { POL_royal_to_nat = POL_non_royal_total }

		#make sure the above values add up to POL_royal_influence
		set_temp_variable = { POL_transfer_total = POL_royal_influence }
		subtract_from_temp_variable = { POL_transfer_total = POL_royal_to_soc }
		subtract_from_temp_variable = { POL_transfer_total = POL_royal_to_rep }
		subtract_from_temp_variable = { POL_transfer_total = POL_royal_to_nat }
		add_to_temp_variable = { POL_royal_to_rep = POL_transfer_total }

		#finally set the variables
		add_to_variable = { POL_soc_influence = POL_royal_to_soc }
		add_to_variable = { POL_rep_influence = POL_royal_to_rep }
		add_to_variable = { POL_nat_influence = POL_royal_to_nat }
		set_variable = { POL_royal_influence = 0 }
	}
}

POL_add_syndicalist_influence = {
	POL_percent_to_absolute = yes
	if = {
		limit = { check_variable = { POL_influence_change > 0 } }
		custom_effect_tooltip = POL_soc_tt
	}
	else_if = {
		limit = { check_variable = { POL_influence_change < 0 } }
		custom_effect_tooltip = POL_soc_reduce_tt
	}

	POL_account_for_disabled_royal_influence = yes

	# lower limit = syndicalist influence * -1
	set_temp_variable = { POL_lower_limit = POL_soc_influence }
	multiply_temp_variable = { POL_lower_limit = -1 }

	# upper limit = republican + nationalist + monarchy
	set_temp_variable = { POL_upper_limit = POL_rep_influence }
	add_to_temp_variable = { POL_upper_limit = POL_nat_influence }
	add_to_temp_variable = { POL_upper_limit = POL_royal_influence }

	# avoid values outside the allowed range
	clamp_temp_variable = {
		var = POL_influence_change
		min = POL_lower_limit
		max = POL_upper_limit
	}

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_republican = POL_rep_influence }
	divide_temp_variable = { POL_reduction_republican = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_republican = POL_influence_change }

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_nationalist = POL_nat_influence }
	divide_temp_variable = { POL_reduction_nationalist = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_nationalist = POL_influence_change }

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_royal = POL_royal_influence }
	divide_temp_variable = { POL_reduction_royal = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_royal = POL_influence_change }

	#make sure the above values add up to POL_influence_change
	set_temp_variable = { POL_influence_calc = POL_influence_change }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_republican }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_nationalist }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_royal }
	add_to_temp_variable = { POL_reduction_nationalist = POL_influence_calc }

	#finally set the variables
	add_to_variable = { POL_soc_influence = POL_influence_change }
	subtract_from_variable = { POL_rep_influence = POL_reduction_republican }
	subtract_from_variable = { POL_nat_influence = POL_reduction_nationalist }
	subtract_from_variable = { POL_royal_influence = POL_reduction_royal }

	### event checks
	POL_predict_election = yes
}

POL_add_republican_influence = {
	POL_percent_to_absolute = yes
	if = {
		limit = { check_variable = { POL_influence_change > 0 } }
		custom_effect_tooltip = POL_rep_tt
	}
	else_if = {
		limit = { check_variable = { POL_influence_change < 0 } }
		custom_effect_tooltip = POL_rep_reduce_tt
	}

	POL_account_for_disabled_royal_influence = yes

	# lower limit = republican influence * -1
	set_temp_variable = { POL_lower_limit = POL_rep_influence }
	multiply_temp_variable = { POL_lower_limit = -1 }

	# upper limit = syndicalist + nationalist + monarchy
	set_temp_variable = { POL_upper_limit = POL_soc_influence }
	add_to_temp_variable = { POL_upper_limit = POL_nat_influence }
	add_to_temp_variable = { POL_upper_limit = POL_royal_influence }

	# avoid values outside the allowed range
	clamp_temp_variable = {
		var = POL_influence_change
		min = POL_lower_limit
		max = POL_upper_limit
	}

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_syndicalist = POL_soc_influence }
	divide_temp_variable = { POL_reduction_syndicalist = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_syndicalist = POL_influence_change }

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_nationalist = POL_nat_influence }
	divide_temp_variable = { POL_reduction_nationalist = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_nationalist = POL_influence_change }

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_royal = POL_royal_influence }
	divide_temp_variable = { POL_reduction_royal = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_royal = POL_influence_change }

	#make sure the above values add up to POL_influence_change
	set_temp_variable = { POL_influence_calc = POL_influence_change }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_syndicalist }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_nationalist }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_royal }
	add_to_temp_variable = { POL_reduction_syndicalist = POL_influence_calc }

	#finally set the variables
	add_to_variable = { POL_rep_influence = POL_influence_change }
	subtract_from_variable = { POL_nat_influence = POL_reduction_nationalist }
	subtract_from_variable = { POL_soc_influence = POL_reduction_syndicalist }
	subtract_from_variable = { POL_royal_influence = POL_reduction_royal }

	### event checks
	POL_predict_election = yes
}

POL_add_nationalist_influence = {
	POL_percent_to_absolute = yes
	if = {
		limit = { check_variable = { POL_influence_change > 0 } }
		custom_effect_tooltip = POL_nat_tt
	}
	else_if = {
		limit = { check_variable = { POL_influence_change < 0 } }
		custom_effect_tooltip = POL_nat_reduce_tt
	}

	POL_account_for_disabled_royal_influence = yes

	# lower limit = nationalist influence * -1
	set_temp_variable = { POL_lower_limit = POL_nat_influence }
	multiply_temp_variable = { POL_lower_limit = -1 }

	# upper limit = syndicalist + republican + monarchy
	set_temp_variable = { POL_upper_limit = POL_soc_influence }
	add_to_temp_variable = { POL_upper_limit = POL_rep_influence }
	add_to_temp_variable = { POL_upper_limit = POL_royal_influence }

	# avoid values outside the allowed range
	clamp_temp_variable = {
		var = POL_influence_change
		min = POL_lower_limit
		max = POL_upper_limit
	}

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_syndicalist = POL_soc_influence }
	divide_temp_variable = { POL_reduction_syndicalist = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_syndicalist = POL_influence_change }

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_republican = POL_rep_influence }
	divide_temp_variable = { POL_reduction_republican = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_republican = POL_influence_change }

	#calculate proportional reductions
	set_temp_variable = { POL_reduction_royal = POL_royal_influence }
	divide_temp_variable = { POL_reduction_royal = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_royal = POL_influence_change }

	#make sure the above values add up to POL_influence_change
	set_temp_variable = { POL_influence_calc = POL_influence_change }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_syndicalist }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_republican }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_royal }
	add_to_temp_variable = { POL_reduction_republican = POL_influence_calc }

	#finally set the variables
	add_to_variable = { POL_nat_influence = POL_influence_change }
	subtract_from_variable = { POL_soc_influence = POL_reduction_syndicalist }
	subtract_from_variable = { POL_rep_influence = POL_reduction_republican }
	subtract_from_variable = { POL_royal_influence = POL_reduction_royal }

	### event checks
	POL_predict_election = yes
}

POL_predict_election = { #calculate the winner
	set_variable = { POL_circle_victory = POL_royal_influence }
	if = {
		limit = { NOT = { has_idea = POL_coalition_broken } }
		add_to_variable = { POL_circle_victory = POL_nat_influence }
	}
	set_variable = { POL_centrolew_victory = POL_rep_influence }
	add_to_variable = { POL_centrolew_victory = POL_soc_influence }
}

POL_add_austrian_influence = {
	POL_percent_to_absolute = yes
	custom_effect_tooltip = POL_add_POL_AUS_influence_tt
	hidden_effect = {
		if = {
			limit = { check_variable = { POL_influence_change > 0 } }
			add_popularity = { ideology = social_liberal popularity = 0.01 }
		}
	}
	set_temp_variable = { POL_lower_limit = POL_AUS_influence }
	multiply_temp_variable = { POL_lower_limit = -1 }

	set_temp_variable = { POL_upper_limit = POL_GER_influence }
	add_to_temp_variable = { POL_upper_limit = POL_influence }

	clamp_temp_variable = {
		var = POL_influence_change
		min = POL_lower_limit
		max = POL_upper_limit
	}

	set_temp_variable = { POL_reduction_GER = POL_GER_influence }
	divide_temp_variable = { POL_reduction_GER = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_GER = POL_influence_change }

	set_temp_variable = { POL_reduction_POL = POL_influence }
	divide_temp_variable = { POL_reduction_POL = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_POL = POL_influence_change }

	set_temp_variable = { POL_influence_calc = POL_influence_change }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_GER }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_POL }
	add_to_temp_variable = { POL_reduction_POL = POL_influence_calc }

	add_to_variable = { POL_AUS_influence = POL_influence_change }
	subtract_from_variable = { POL_GER_influence = POL_reduction_GER }
	subtract_from_variable = { POL_influence = POL_reduction_POL }

	POL = { POL_update_foreign_eco = yes }
}
POL_add_german_influence = {
	POL_percent_to_absolute = yes
	custom_effect_tooltip = POL_add_POL_GER_influence_tt
	hidden_effect = {
		if = { limit = { check_variable = { POL_influence_change > 0 } }
			add_popularity = { ideology = authoritarian_democrat popularity = 0.01 }
		}
	}
	set_temp_variable = { POL_lower_limit = POL_GER_influence }
	multiply_temp_variable = { POL_lower_limit = -1 }

	set_temp_variable = { POL_upper_limit = POL_AUS_influence }
	add_to_temp_variable = { POL_upper_limit = POL_influence }

	clamp_temp_variable = {
		var = POL_influence_change
		min = POL_lower_limit
		max = POL_upper_limit
	}

	set_temp_variable = { POL_reduction_AUS = POL_AUS_influence }
	divide_temp_variable = { POL_reduction_AUS = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_AUS = POL_influence_change }

	set_temp_variable = { POL_reduction_POL = POL_influence }
	divide_temp_variable = { POL_reduction_POL = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_POL = POL_influence_change }

	set_temp_variable = { POL_influence_calc = POL_influence_change }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_AUS }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_POL }
	add_to_temp_variable = { POL_reduction_POL = POL_influence_calc }

	add_to_variable = { POL_GER_influence = POL_influence_change }
	subtract_from_variable = { POL_AUS_influence = POL_reduction_AUS }
	subtract_from_variable = { POL_influence = POL_reduction_POL }

	POL = { POL_update_foreign_eco = yes }
}
POL_add_polish_influence = {
	POL_percent_to_absolute = yes
	custom_effect_tooltip = POL_add_POL_influence_tt

	set_temp_variable = { POL_lower_limit = POL_influence }
	multiply_temp_variable = { POL_lower_limit = -1 }

	set_temp_variable = { POL_upper_limit = POL_AUS_influence }
	add_to_temp_variable = { POL_upper_limit = POL_GER_influence }

	clamp_temp_variable = {
		var = POL_influence_change
		min = POL_lower_limit
		max = POL_upper_limit
	}

	set_temp_variable = { POL_reduction_AUS = POL_AUS_influence }
	divide_temp_variable = { POL_reduction_AUS = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_AUS = POL_influence_change }

	set_temp_variable = { POL_reduction_GER = POL_GER_influence }
	divide_temp_variable = { POL_reduction_GER = POL_upper_limit }
	multiply_temp_variable = { POL_reduction_GER = POL_influence_change }

	set_temp_variable = { POL_influence_calc = POL_influence_change }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_AUS }
	subtract_from_temp_variable = { POL_influence_calc = POL_reduction_GER }
	add_to_temp_variable = { POL_reduction_GER = POL_influence_calc }

	add_to_variable = { POL_influence = POL_influence_change }
	subtract_from_variable = { POL_AUS_influence = POL_reduction_AUS }
	subtract_from_variable = { POL_GER_influence = POL_reduction_GER }

	POL = { POL_update_foreign_eco = yes }
}
POL_reduce_polarisation = {
	if = {
		limit = { has_idea = POL_polarised_society_1 }
		swap_ideas = {
			remove_idea = POL_polarised_society_1
			add_idea = POL_polarised_society_2
		}
	}
	else_if = {
		limit = { has_idea = POL_polarised_society_2 }
		swap_ideas = {
			remove_idea = POL_polarised_society_2
			add_idea = POL_polarised_society_3
		}
	}
	else_if = {
		limit = { has_idea = POL_polarised_society_3 }
		swap_ideas = {
			remove_idea = POL_polarised_society_3
			add_idea = POL_polarised_society_4
		}
	}
	else_if = {
		limit = {
			has_idea = POL_polarised_society_4
			has_socialist_government = no #socialists cannot remvoe entirely, just like conservatives cannot remove Those Left Behind completely
		}
		remove_ideas = POL_polarised_society_4
	}
}

POL_enable_black_monday = {
	hidden_effect = {
		add_ideas = POL_black_monday
		add_dynamic_modifier = { modifier = POL_black_monday_modifier }
		set_variable = { POL_black_monday_consumer_goods = 0.25 }
		set_variable = { POL_black_monday_stability = -0.3 }
		set_variable = { POL_black_monday_construction_speed = -0.3 }
		set_variable = { POL_black_monday_factory_output = -0.3 }
		force_update_dynamic_modifier = yes
	}
	effect_tooltip = { add_ideas = POL_black_monday_dummy }
}

POL_reduce_black_monday = {
	custom_effect_tooltip = POL_modifies_black_monday
	if = {
		limit = { check_variable = { POL_black_monday_consumer_goods > 0.03 } }
		add_to_variable = {
			POL_black_monday_consumer_goods = -0.02
			tooltip = POL_black_monday_consumer_goods_tooltip
		}
	}
	if = {
		limit = { check_variable = { POL_black_monday_stability < -0.05 } }
		add_to_variable = {
			POL_black_monday_stability = 0.04
			tooltip = POL_black_monday_stability_tooltip
		}
	}
	if = {
		limit = { check_variable = { POL_black_monday_construction_speed < -0.05 } }
		add_to_variable = {
			POL_black_monday_construction_speed = 0.04
			tooltip = POL_black_monday_construction_speed_tooltip
		}
	}
	if = {
		limit = { check_variable = { POL_black_monday_factory_output < -0.05 } }
		add_to_variable = {
			POL_black_monday_factory_output = 0.04
			tooltip = POL_black_monday_factory_output_tooltip
		}
	}
	if = {
		limit = {
			check_variable = { POL_black_monday_stability < 0.06 }
			check_variable = { POL_black_monday_factory_output < 0.06 }
			check_variable = { POL_black_monday_consumer_goods < 0.05 }
		}
		remove_ideas = POL_black_monday
		hidden_effect = {
			remove_dynamic_modifier = { modifier = POL_black_monday_modifier }
		}
		clear_variable = POL_black_monday_consumer_goods
		clear_variable = POL_black_monday_stability
		clear_variable = POL_black_monday_construction_speed
		clear_variable = POL_black_monday_factory_output
	}
}

POL_add_ruling_influence = {
	if = {
		limit = { is_monarchy = yes }
		POL_add_royal_influence = yes
	}
	else_if = {
		limit = { has_left_democratic_government = yes }
		POL_add_republican_influence = yes
	}
	else_if = {
		limit = { POL_has_nationalist = yes }
		POL_add_nationalist_influence = yes
	}
}

POL_remove_foreign_eco_ideas = {
	hidden_effect = {
		remove_ideas = POL_german_control0
		remove_ideas = POL_german_control1
		remove_ideas = POL_german_control2
		remove_ideas = POL_german_control3
		remove_ideas = POL_german_control4
		remove_ideas = POL_austrian_assets0
		remove_ideas = POL_austrian_assets1
		remove_ideas = POL_austrian_assets2
		remove_ideas = POL_austrian_assets3
		remove_ideas = POL_austrian_assets4
	}
}
POL_update_foreign_eco = {
	hidden_effect = {
		if = {
			limit = { has_country_flag = POL_trade_finished }
			POL_remove_foreign_eco_ideas = yes
		}
		else = {
			POL_remove_foreign_eco_ideas = yes
			if = {
				limit = { check_variable = { POL_GER_influence > 69 } }
				add_ideas = POL_german_control4
			}
			else_if = {
				limit = { check_variable = { POL_GER_influence > 49 } }
				add_ideas = POL_german_control3
			}
			else_if = {
				limit = { check_variable = { POL_GER_influence > 29 } }
				add_ideas = POL_german_control2
			}
			else_if = {
				limit = { check_variable = { POL_GER_influence > 9 } }
				add_ideas = POL_german_control1
			}
			else = { add_ideas = POL_german_control0 }
			if = {
				limit = { check_variable = { POL_AUS_influence > 69 } }
				add_ideas = POL_austrian_assets4
			}
			else_if = {
				limit = { check_variable = { POL_AUS_influence > 49 } }
				add_ideas = POL_austrian_assets3
			}
			else_if = {
				limit = { check_variable = { POL_AUS_influence > 29 } }
				add_ideas = POL_austrian_assets2
			}
			else_if = {
				limit = { check_variable = { POL_AUS_influence > 9 } }
				add_ideas = POL_austrian_assets1
			}
			else = { add_ideas = POL_austrian_assets0 }
		}
	}
}
POL_rebuilding = {
	if = {
		limit = { has_idea = POL_uprising_crash2 }
		swap_ideas = {
			remove_idea = POL_uprising_crash2
			add_idea = POL_uprising_crash1
		}
	}
	else_if = {
		limit = { has_idea = POL_uprising_crash1 }
		swap_ideas = {
			remove_idea = POL_uprising_crash1
			add_idea = POL_recovering_eco1
		}
	}
	else_if = {
		limit = { has_idea = POL_uprising_crash4 }
		swap_ideas = {
			remove_idea = POL_uprising_crash4
			add_idea = POL_uprising_crash3
		}
	}
	else_if = {
		limit = { has_idea = POL_uprising_crash3 }
		swap_ideas = {
			remove_idea = POL_uprising_crash3
			add_idea = POL_recovering_eco1
		}
	}
	else_if = {
		limit = { has_idea = POL_uprising_crash6 }
		swap_ideas = {
			remove_idea = POL_uprising_crash6
			add_idea = POL_uprising_crash5
		}
	}
	else_if = {
		limit = { has_idea = POL_uprising_crash5 }
		swap_ideas = {
			remove_idea = POL_uprising_crash5
			add_idea = POL_recovering_eco1
		}
	}
	else_if = {
		limit = { has_idea = POL_recovering_eco1 }
		swap_ideas = {
			remove_idea = POL_recovering_eco1
			add_idea = POL_recovering_eco2
		}
	}
	else_if = {
		limit = { has_idea = POL_recovering_eco2 }
		swap_ideas = {
			remove_idea = POL_recovering_eco2
			add_idea = POL_recovering_eco3
		}
	}
	else_if = {
		limit = { has_idea = POL_recovering_eco3 }
		remove_ideas = POL_recovering_eco3
		add_ideas = POL_polish_control
		clr_country_flag = POL_uprising_crash
	}
}
POL_nationalist_coup = {
	if = {
		limit = {
			has_socialist_government = no
			OR = {
				AND = {
					check_variable = { POL_nat_influence > 25 }
					OR = {
						has_idea = POL_republic_instability1 #Poland can never have this idea when the coup happens because it's always switched to POL_republic_instability2 through the focus tree
						has_idea = POL_republic_instability2
					}
					NOT = { has_country_flag = POL_rydz_coup_attempt }
					if = {
						limit = {
							POL = { is_ai = yes }
						}
						NOT = {
							has_game_rule = { rule = POL_election option = POL_ELECTION_SOCDEM_AUS }
							has_game_rule = { rule = POL_election option = POL_ELECTION_SOCDEM_GER }
							has_game_rule = { rule = POL_election option = POL_ELECTION_SOCLIB_AUS }
							has_game_rule = { rule = POL_election option = POL_ELECTION_SOCLIB_GER }
						}
					}
				}
				AND = {
					POL = { is_ai = yes }
					OR = {
						has_game_rule = { rule = POL_election option = POL_ELECTION_REPUBLIC_SOCCON_AUS }
						has_game_rule = { rule = POL_election option = POL_ELECTION_REPUBLIC_SOCCON_GER }
					}
				}
			}
		}
		hidden_effect = {
			country_event = { id = poland.240 days = 3 }
		}
		custom_effect_tooltip = POL_nationalist_threat_tt
	}
	else_if = {
		limit = { has_socialist_government = no }
		custom_effect_tooltip = POL_nationalist_threat_safe_tt
	}
}
POL_remove_centrolew = {
	hidden_effect = {
		remove_ideas = POL_secularisation
		remove_ideas = POL_secularisation_resistance
		remove_ideas = POL_waning_secularisation_resistance
		remove_ideas = POL_republic_instability1
		remove_ideas = POL_republic_instability2
		remove_ideas = POL_dawn_of_progress_pps_1
		remove_ideas = POL_dawn_of_progress_psl_1
		remove_ideas = POL_dawn_of_progress_pps_psl
		remove_ideas = POL_dawn_of_progress_pps_2
		remove_ideas = POL_dawn_of_progress_psl_2
		remove_ideas = POL_dawn_of_progress_pps_psl_2
		remove_ideas = POL_dawn_of_progress_pps_3
		remove_ideas = POL_dawn_of_progress_psl_3
		if = {
			limit = { has_socialist_government = no }
			remove_ideas = POL_tolerance_1
			remove_ideas = POL_tolerance_2
			remove_ideas = POL_tolerance_3
			remove_ideas = POL_tolerance_4
			remove_ideas = POL_tolerance_5
			uncomplete_national_focus = {
				focus = POL_Centrolew
				uncomplete_children = yes
			}
		}
	}
}

POL_consolidate_uprising = {
	if = {
		limit = { has_idea = POL_uprising }
		swap_ideas = {
			remove_idea = POL_uprising
			add_idea = POL_uprising2
		}
	}
	else_if = {
		limit = { has_idea = POL_uprising2 }
		swap_ideas = {
			remove_idea = POL_uprising2
			add_idea = POL_uprising3
		}
	}
	else_if = {
		limit = { has_idea = POL_uprising3 }
		remove_ideas = POL_uprising3
	}
}
POL_purge_left_generals = {
	hidden_effect = {
		if = {
			limit = { has_character = GAL_wladyslaw_sikorski }
			GAL_wladyslaw_sikorski = { retire = yes }
		}
		if = {
			limit = { has_character = POL_kazimierz_sosnkowski }
			POL_kazimierz_sosnkowski = { retire = yes }
		}
		if = {
			limit = { has_character = POL_konstanty_rokossowski }
			POL_konstanty_rokossowski = { set_nationality = XXA } #don't retire, will break owner scope
		}
	}
}
POL_purge_right_generals = {
	hidden_effect = {
		if = {
			limit = { has_character = POL_edward_rydz_smigly }
			POL_edward_rydz_smigly = { retire = yes }
		}
		if = {
			limit = { has_character = POL_adam_koc }
			POL_adam_koc = { retire = yes }
		}
		if = {
			limit = { has_character = POL_jozef_haller_von_hallenburg }
			POL_jozef_haller_von_hallenburg = { retire = yes }
		}
		if = {
			limit = { has_character = POL_waclaw_stachiewicz }
			POL_waclaw_stachiewicz = { retire = yes }
		}
	}
}
POL_return_purged_generals = {
	hidden_effect = {
		if = {
			limit = { POL_has_progressive = yes }
			if = {
				limit = {
					NOT = { has_character = GAL_wladyslaw_sikorski }
					NOT = { GAL = { has_character = GAL_wladyslaw_sikorski } }
				}
				GAL = { GAL_wladyslaw_sikorski = { set_nationality = POL } }
			}
			if = {
				limit = { NOT = { has_character = POL_kazimierz_sosnkowski } }
				POL_kazimierz_sosnkowski = { set_nationality = POL }
			}
			if = {
				limit = { XXA = { has_character = POL_konstanty_rokossowski } }
				POL_konstanty_rokossowski = { set_nationality = POL }
			}
		}
		else_if = {
			limit = { POL_has_nationalist = yes }
			if = {
				limit = { NOT = { has_character = POL_edward_rydz_smigly } }
				POL_edward_rydz_smigly = { set_nationality = POL }
			}
			if = {
				limit = { NOT = { has_character = POL_adam_koc } }
				POL_adam_koc = { set_nationality = POL }
			}
			if = {
				limit = { NOT = { has_character = POL_waclaw_stachiewicz } }
				POL_waclaw_stachiewicz = { set_nationality = POL }
			}
			if = {
				limit = { NOT = { has_character = POL_jozef_haller_von_hallenburg } }
				POL_jozef_haller_von_hallenburg = { set_nationality = POL }
			}
		}
	}
}
POL_create_rydz = {
	show_unit_leaders_tooltip = POL_edward_rydz_smigly
	hidden_effect = {
		POL_edward_rydz_smigly = {
			set_nationality = PREV
			promote_character = paternal_autocrat_subtype
		}
	}
}
POL_remove_guderian = {
	GER_heinz_guderian = { set_nationality = GER }
	GER = { country_event = { id = poland.205 days = 1 } }
}
POL_remove_monarchy = {
	if = {
		limit = { has_cosmetic_tag = POL_kingdom }
		drop_cosmetic_tag = yes
	}
	POL_august_iv = { retire = yes }
	POL_alexander_von_hohenzollern = { retire = yes }
}
POL_overthrow_monarchy = {
	hidden_effect = {
		POL_remove_monarchy = yes
		GER = { end_puppet = POL }
		if = {
			limit = { NOT = { is_in_faction_with = GER } }
			GER_remove_from_mitteleuropa = yes
		}
		if = {
			limit = { NOT = { is_in_faction_with = MIE } }
			MIE_remove_from_intermarium = yes
		}
		if = {
			limit = { is_subject = no }
			separate_peace_all_wars = yes
		}
		set_party_name = {
			ideology = radical_socialist
			long_name = POL_radical_socialist_party_long
			name = POL_radical_socialist2_party
		}
		set_party_name = {
			ideology = social_democrat
			long_name = POL_social_democrat2_party_long
			name = POL_social_democrat2_party
		}
		set_party_name = {
			ideology = social_liberal
			long_name = POL_social_liberal2_party_long
			name = POL_social_liberal2_party
		}
		set_party_name = {
			ideology = market_liberal
			long_name = POL_market_liberal2_party_long
			name = POL_market_liberal2_party
		}
		set_party_name = {
			ideology = social_conservative
			long_name = POL_social_conservative2_party_long
			name = POL_social_conservative_party
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = POL_paternal_autocrat2_party_long
			name = POL_paternal_autocrat2_party
		}
		set_party_name = {
			ideology = authoritarian_democrat
			long_name = POL_authoritarian_democrat2_party_long
			name = POL_authoritarian_democrat2_party
		}
		set_party_name = {
			ideology = national_populist
			long_name = POL_national_populist2_party_long
			name = POL_national_populist2_party
		}
		set_temp_variable = { POL_influence_change = -100 }
		POL_add_royal_influence = yes
		add_popularity = { ideology = market_liberal popularity = -0.2 }
		add_popularity = { ideology = authoritarian_democrat popularity = -0.2 }
		remove_ideas = POL_decimated_underground
		remove_ideas = POL_weakened_underground
		remove_ideas = POL_active_underground
		remove_ideas = POL_enshrine_constitution
		remove_ideas = POL_enshrine_constitution_2
		remove_ideas = POL_enshrine_constitution_3
		remove_ideas = POL_control_by_geheimrat
		remove_ideas = POL_control_by_geheimrat_2
		remove_ideas = POL_control_by_geheimrat_3
		remove_ideas = POL_martial_law
		if = {
			limit = { POL_has_nationalist = no }
			remove_ideas = POL_corporatism
			remove_ideas = POL_state_catholicism_1
			remove_ideas = POL_state_catholicism_2
			remove_ideas = POL_state_catholicism_3
			remove_ideas = POL_state_catholicism_4
		}
		set_can_be_fired_in_advisor_role = {
			character = POL_maurucy_zamoyski
			value = yes
		}
		set_can_be_fired_in_advisor_role = {
			character = POL_stanislaw_downarowicz
			value = yes
		}
		POL_update_military = yes
		POL_return_purged_generals = yes
		uncomplete_national_focus = {
			focus = POL_Circle
			uncomplete_children = yes
		}
		country_event = { id = poland.239 days = 70 }
		if = {
			limit = { has_idea = POL_hub_of_mitteleurope }
			swap_ideas = {
				remove_idea = POL_hub_of_mitteleurope
				add_idea = POL_central_industrial_region_5
			}
		}
	}
}
POL_set_up_uprising = {
	POL_remove_centrolew = yes
	if = {
		limit = {
			NOT = {
				has_idea = war_economy
				has_idea = tot_economic_mobilisation
			}
		}
		increase_mobilisation = yes
	}
	hidden_effect = {
		POL_remove_guderian = yes
		if = {
			limit = { has_character = AUS_karl_albrecht_von_habsburg }
			AUS_karl_albrecht_von_habsburg = { set_nationality = AUS }
		}
		POL_return_purged_generals = yes
		clear_all_relations = yes
	}
	if = {
		limit = { has_country_flag = POL_socialist_uprising }
		complete_national_focus = POL_Revolutionary_Republic
		hidden_effect = {
			POL_purge_right_generals = yes
			uncomplete_national_focus = {
				focus = POL_Christian_Conservatism
				uncomplete_children = yes
			}
			remove_ideas = {
				POL_state_catholicism_1
				POL_state_catholicism_2
				POL_state_catholicism_3
				POL_state_catholicism_4
				POL_corporatism
				POL_rydz_legion
			}
		}
	}
	if = {
		limit = { NOT = { has_country_flag = POL_socialist_uprising } }
		if = {
			limit = { NOT = { has_completed_focus = POL_Christian_Conservatism } }
			complete_national_focus = POL_Christian_Conservatism
		}
		set_party_name = {
			ideology = paternal_autocrat
			long_name = POL_paternal_autocrat2_party_long
			name = POL_paternal_autocrat2_party
		}
		hidden_effect = {
			remove_ideas = POL_tolerance_1
			remove_ideas = POL_tolerance_2
			remove_ideas = POL_tolerance_3
			remove_ideas = POL_tolerance_4
			remove_ideas = POL_tolerance_5
		}
	}
	hidden_effect = {
		for_each_scope_loop = {
			array = POL_polish_lands
			add_claim_by = ROOT
		}
		country_event = { id = poland.543 days = 1 } #Defections
		country_event = { id = poland.561 days = 14 }  #Economic crash
		country_event = { id = poland.565 days = 45 } #The Platerowski
		if = {
			limit = { has_country_flag = POL_revolt_from_monarchy }
			country_event = { id = poland.562 days = 97 } #King August Escapes
			country_event = { id = poland.563 days = 62 } #King August Dies
		}
		if = {
			limit = { has_socialist_government = yes }
			country_event = { id = poland.546 days = 10 } #Red Guards
			country_event = { id = poland.542 days = 15 } #Riflemen's Association
			country_event = { id = poland.551 days = 60 random_days = 5 } #Zakrzewski's executive powers
			country_event = { id = poland.555 days = 120 } #The Scythemen
			country_event = { id = polandflavor.40 days = 160 } #Zakrzewski's Myths
			country_event = { id = polandflavor.32 days = 320 } #Reovating the Royal Castle

		}
		else = {
			country_event = { id = poland.547 days = 10 } #National Guard
			country_event = { id = poland.550 days = 20 random_days = 3 } #OZN
			country_event = { id = poland.549 days = 60 random_days = 5 } #ZRP
			country_event = { id = poland.555 days = 120 } #The Scythemen
		}
		activate_mission = POL_reach_the_sea
		every_state = {
			limit = {
				NOT = {
					is_owned_by = ROOT
					is_controlled_by = ROOT
				}
				ROOT = { divisions_in_state = { state = PREV size > 0 } }
			}
			teleport_armies = {
				limit = { tag = ROOT }
				to_state_array = owned_controlled_states
			}
		}
		every_owned_state = {
			teleport_armies = {
				limit = {
					NOT = {
						tag = ROOT
						has_war_with = ROOT
					}
				}
				to_state_array = owned_controlled_states
			}
		}
		if = {
			limit = { has_idea = POL_crossroads_of_europe }
			uncomplete_national_focus = { focus = POL_Fill_The_Railway_Gaps }
			remove_ideas = POL_crossroads_of_europe
			remove_dynamic_modifier = { modifier = POL_crossroads_of_europe_modifier }
		}
		if = { #Foolproof if some fool does not do the decision
			limit = { NOT = { has_country_flag = POL_trade_finished } }
			set_country_flag = POL_trade_finished
			remove_ideas = POL_german_control0
			remove_ideas = POL_german_control1
			remove_ideas = POL_german_control2
			remove_ideas = POL_german_control3
			remove_ideas = POL_german_control4
			remove_ideas = POL_austrian_assets0
			remove_ideas = POL_austrian_assets1
			remove_ideas = POL_austrian_assets2
			remove_ideas = POL_austrian_assets3
			remove_ideas = POL_austrian_assets4
			add_ideas = POL_german_cooperation
		}
		if = {
			limit = { has_idea = GER_russia_strategy }
			remove_ideas = GER_russia_strategy
		}
	}
	add_ideas = POL_uprising
	POL_update_military = yes
	clear_decision_attack_AI = yes
	AUS = {
		clear_decision_attack_AI = yes
		clr_country_flag = POL_revolt_warning_syndicalist
		clr_country_flag = POL_revolt_warning_nationalist
	}
	GER = {
		clear_decision_attack_AI = yes
		declare_war_on = {
			target = POL
			type = annex_everything
		}
		clr_country_flag = POL_revolt_warning_syndicalist
		clr_country_flag = POL_revolt_warning_nationalist
	}
}

POL_transfer_popularity = {
	#add up the states directly, since Galicia might not exist
	set_temp_variable = { galicia_ratio = 0 }
	GAL = {
		every_core_state = {
			limit = { is_owned_by = POL }
			add_to_temp_variable = { galicia_ratio = state_population_k }
		}
	}
	divide_temp_variable = { galicia_ratio = ROOT.max_manpower_k }

	set_temp_variable = { poland_ratio = 1 }
	subtract_from_temp_variable = { poland_ratio = galicia_ratio }

	set_temp_variable = { totalist_value = POL.party_popularity_100@totalist }
	multiply_temp_variable = { totalist_value = poland_ratio }
	set_temp_variable = { totalist_value@GAL = GAL.party_popularity_100@totalist }
	multiply_temp_variable = { totalist_value@GAL = galicia_ratio }
	add_to_temp_variable = { totalist_value = totalist_value@GAL }

	set_temp_variable = { syndicalist_value = POL.party_popularity_100@syndicalist }
	multiply_temp_variable = { syndicalist_value = poland_ratio }
	set_temp_variable = { syndicalist_value@GAL = GAL.party_popularity_100@syndicalist }
	multiply_temp_variable = { syndicalist_value@GAL = galicia_ratio }
	add_to_temp_variable = { syndicalist_value = syndicalist_value@GAL }

	set_temp_variable = { radical_socialist_value = POL.party_popularity_100@radical_socialist }
	multiply_temp_variable = { radical_socialist_value = poland_ratio }
	set_temp_variable = { radical_socialist_value@GAL = GAL.party_popularity_100@radical_socialist }
	multiply_temp_variable = { radical_socialist_value@GAL = galicia_ratio }
	add_to_temp_variable = { radical_socialist_value = radical_socialist_value@GAL }

	set_temp_variable = { social_democrat_value = POL.party_popularity_100@social_democrat }
	multiply_temp_variable = { social_democrat_value = poland_ratio }
	set_temp_variable = { social_democrat_value@GAL = GAL.party_popularity_100@social_democrat }
	multiply_temp_variable = { social_democrat_value@GAL = galicia_ratio }
	add_to_temp_variable = { social_democrat_value = social_democrat_value@GAL }

	set_temp_variable = { social_liberal_value = POL.party_popularity_100@social_liberal }
	multiply_temp_variable = { social_liberal_value = poland_ratio }
	set_temp_variable = { social_liberal_value@GAL = GAL.party_popularity_100@social_liberal }
	multiply_temp_variable = { social_liberal_value@GAL = galicia_ratio }
	add_to_temp_variable = { social_liberal_value = social_liberal_value@GAL }

	set_temp_variable = { market_liberal_value = POL.party_popularity_100@market_liberal }
	multiply_temp_variable = { market_liberal_value = poland_ratio }
	set_temp_variable = { market_liberal_value@GAL = GAL.party_popularity_100@market_liberal }
	multiply_temp_variable = { market_liberal_value@GAL = galicia_ratio }
	add_to_temp_variable = { market_liberal_value = market_liberal_value@GAL }

	set_temp_variable = { social_conservative_value = POL.party_popularity_100@social_conservative }
	multiply_temp_variable = { social_conservative_value = poland_ratio }
	set_temp_variable = { social_conservative_value@GAL = GAL.party_popularity_100@social_conservative }
	multiply_temp_variable = { social_conservative_value@GAL = galicia_ratio }
	add_to_temp_variable = { social_conservative_value = social_conservative_value@GAL }

	set_temp_variable = { authoritarian_democrat_value = POL.party_popularity_100@authoritarian_democrat }
	multiply_temp_variable = { authoritarian_democrat_value = poland_ratio }
	set_temp_variable = { authoritarian_democrat_value@GAL = GAL.party_popularity_100@authoritarian_democrat }
	multiply_temp_variable = { authoritarian_democrat_value@GAL = galicia_ratio }
	add_to_temp_variable = { authoritarian_democrat_value = authoritarian_democrat_value@GAL }

	set_temp_variable = { paternal_autocrat_value = POL.party_popularity_100@paternal_autocrat }
	multiply_temp_variable = { paternal_autocrat_value = poland_ratio }
	set_temp_variable = { paternal_autocrat_value@GAL = GAL.party_popularity_100@paternal_autocrat }
	multiply_temp_variable = { paternal_autocrat_value@GAL = galicia_ratio }
	add_to_temp_variable = { paternal_autocrat_value = paternal_autocrat_value@GAL }

	set_temp_variable = { national_populist_value = POL.party_popularity_100@national_populist }
	multiply_temp_variable = { national_populist_value = poland_ratio }
	set_temp_variable = { national_populist_value@GAL = GAL.party_popularity_100@national_populist }
	multiply_temp_variable = { national_populist_value@GAL = galicia_ratio }
	add_to_temp_variable = { national_populist_value = national_populist_value@GAL }

	set_temp_variable = { popularity_total = 100 }
	subtract_from_temp_variable = { popularity_total = totalist_value }
	subtract_from_temp_variable = { popularity_total = syndicalist_value }
	subtract_from_temp_variable = { popularity_total = radical_socialist_value }
	subtract_from_temp_variable = { popularity_total = social_democrat_value }
	subtract_from_temp_variable = { popularity_total = social_liberal_value }
	subtract_from_temp_variable = { popularity_total = market_liberal_value }
	subtract_from_temp_variable = { popularity_total = social_conservative_value }
	subtract_from_temp_variable = { popularity_total = authoritarian_democrat_value }
	subtract_from_temp_variable = { popularity_total = paternal_autocrat_value }
	subtract_from_temp_variable = { popularity_total = national_populist_value }

	add_to_temp_variable = { market_liberal_value = popularity_total }

	set_popularities = {
		totalist = totalist_value
		syndicalist = syndicalist_value
		radical_socialist = radical_socialist_value
		social_democrat = social_democrat_value
		social_liberal = social_liberal_value
		market_liberal = market_liberal_value
		social_conservative = social_conservative_value
		authoritarian_democrat = authoritarian_democrat_value
		paternal_autocrat = paternal_autocrat_value
		national_populist = national_populist_value
	}
}

POL_clear_economy = {
	hidden_effect = {
		remove_ideas = POL_german_control0
		remove_ideas = POL_german_control1
		remove_ideas = POL_german_control2
		remove_ideas = POL_german_control3
		remove_ideas = POL_german_control4
		remove_ideas = POL_austrian_assets0
		remove_ideas = POL_austrian_assets1
		remove_ideas = POL_austrian_assets2
		remove_ideas = POL_austrian_assets3
		remove_ideas = POL_austrian_assets4
		remove_ideas = POL_german_cooperation
		remove_ideas = POL_austrian_cooperation
		remove_ideas = POL_austrian_friendship
		remove_ideas = POL_austro_german_condominium
		remove_ideas = POL_polish_control
		remove_ideas = POL_german_hegemony
	}
}

POL_retire_august = {
	if = {
		limit = {
			NOT = { has_country_flag = POL_alex_not_heir }
			has_character = POL_alexander_von_hohenzollern
		}
		effect_tooltip = {
			meta_effect = {
				text = {
					add_country_leader_role = {
						character = POL_alexander_von_hohenzollern
						country_leader = {
							ideology = [IDEOLOGY]
							traits = { POL_honorary_pole }
						}
						promote_leader = yes
					}
				}
				IDEOLOGY = "[ROOT.GetRulingIdeologySubtype]"
			}
			if = {
				limit = { POL_august_iv = { has_trait = POL_geheimrat1 } }
				add_trait = { trait = POL_geheimrat1 character = POL_alexander_von_hohenzollern }
			}
			else_if = {
				limit = { POL_august_iv = { has_trait = POL_geheimrat2 } }
				add_trait = { trait = POL_geheimrat2 character = POL_alexander_von_hohenzollern }
			}
			else_if = {
				limit = { POL_august_iv = { has_trait = POL_geheimrat3 } }
				add_trait = { trait = POL_geheimrat3 character = POL_alexander_von_hohenzollern }
			}
			else = {
				add_trait = { trait = POL_geheimrat character = POL_alexander_von_hohenzollern }
			}
			if = {
				limit = { POL_august_iv = { has_trait = POL_patron_of_the_painters } }
				add_trait = { trait = POL_patron_of_the_painters character = POL_alexander_von_hohenzollern }
			}
			if = {
				limit = { POL_august_iv = { has_trait = POL_figurehead_hohenzollern } }
				add_trait = { trait = POL_figurehead_hohenzollern character = POL_alexander_von_hohenzollern }
			}
			else_if = {
				limit = { POL_august_iv = { has_trait = POL_king_of_the_elite } }
				add_trait = { trait = POL_king_of_the_elite character = POL_alexander_von_hohenzollern }
			}
		}
		hidden_effect = {
			POL_alexander_von_hohenzollern = {
				set_character_name = POL_alexander_ii
				remove_political_advisor_role = yes
				remove_all_country_leader_roles = yes
				add_country_leader_role = {
					country_leader = {
						ideology = social_democrat_subtype
						desc = POL_aleksander_ii_desc
						traits = { POL_honorary_pole }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						ideology = social_liberal_subtype
						desc = POL_aleksander_ii_desc
						traits = { POL_honorary_pole }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						ideology = market_liberal_subtype
						desc = POL_aleksander_ii_desc
						traits = { POL_honorary_pole }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						ideology = social_conservative_subtype
						desc = POL_aleksander_ii_desc
						traits = { POL_honorary_pole }
					}
					promote_leader = yes
				}
				add_country_leader_role = {
					country_leader = {
						ideology = authoritarian_democrat_subtype
						desc = POL_aleksander_ii_desc
						traits = { POL_honorary_pole }
					}
					promote_leader = yes
				}
				if = {
					limit = { ROOT = { POL_august_iv = { has_trait = POL_geheimrat1 } } }
					add_trait = { trait = POL_geheimrat1 ideology = social_democrat_subtype }
					add_trait = { trait = POL_geheimrat1 ideology = social_liberal_subtype }
					add_trait = { trait = POL_geheimrat1 ideology = market_liberal_subtype }
					add_trait = { trait = POL_geheimrat1 ideology = social_conservative_subtype }
					add_trait = { trait = POL_geheimrat1 ideology = authoritarian_democrat_subtype }
				}
				else_if = {
					limit = { ROOT = { POL_august_iv = { has_trait = POL_geheimrat2 } } }
					add_trait = { trait = POL_geheimrat2 ideology = social_democrat_subtype }
					add_trait = { trait = POL_geheimrat2 ideology = social_liberal_subtype }
					add_trait = { trait = POL_geheimrat2 ideology = market_liberal_subtype }
					add_trait = { trait = POL_geheimrat2 ideology = social_conservative_subtype }
					add_trait = { trait = POL_geheimrat2 ideology = authoritarian_democrat_subtype }
				}
				else_if = {
					limit = { ROOT = { POL_august_iv = { has_trait = POL_geheimrat3 } } }
					add_trait = { trait = POL_geheimrat3 ideology = social_democrat_subtype }
					add_trait = { trait = POL_geheimrat3 ideology = social_liberal_subtype }
					add_trait = { trait = POL_geheimrat3 ideology = market_liberal_subtype }
					add_trait = { trait = POL_geheimrat3 ideology = social_conservative_subtype }
					add_trait = { trait = POL_geheimrat3 ideology = authoritarian_democrat_subtype }
				}
				else = {
					add_trait = { trait = POL_geheimrat ideology = social_democrat_subtype }
					add_trait = { trait = POL_geheimrat ideology = social_liberal_subtype }
					add_trait = { trait = POL_geheimrat ideology = market_liberal_subtype }
					add_trait = { trait = POL_geheimrat ideology = social_conservative_subtype }
					add_trait = { trait = POL_geheimrat ideology = authoritarian_democrat_subtype }
				}
				if = {
					limit = { ROOT = { POL_august_iv = { has_trait = POL_patron_of_the_painters } } }
					add_trait = { trait = POL_patron_of_the_painters ideology = social_democrat_subtype }
					add_trait = { trait = POL_patron_of_the_painters ideology = social_liberal_subtype }
					add_trait = { trait = POL_patron_of_the_painters ideology = market_liberal_subtype }
					add_trait = { trait = POL_patron_of_the_painters ideology = social_conservative_subtype }
					add_trait = { trait = POL_patron_of_the_painters ideology = authoritarian_democrat_subtype }
				}
				else_if = {
					limit = { ROOT = { POL_august_iv = { has_trait = POL_figurehead_hohenzollern } } }
					add_trait = { trait = POL_figurehead_hohenzollern ideology = social_democrat_subtype }
					add_trait = { trait = POL_figurehead_hohenzollern ideology = social_liberal_subtype }
					add_trait = { trait = POL_figurehead_hohenzollern ideology = market_liberal_subtype }
					add_trait = { trait = POL_figurehead_hohenzollern ideology = social_conservative_subtype }
					add_trait = { trait = POL_figurehead_hohenzollern ideology = authoritarian_democrat_subtype }
				}
				else_if = {
					limit = { ROOT = { POL_august_iv = { has_trait = POL_king_of_the_elite } } }
					add_trait = { trait = POL_king_of_the_elite ideology = social_democrat_subtype }
					add_trait = { trait = POL_king_of_the_elite ideology = social_liberal_subtype }
					add_trait = { trait = POL_king_of_the_elite ideology = market_liberal_subtype }
					add_trait = { trait = POL_king_of_the_elite ideology = social_conservative_subtype }
					add_trait = { trait = POL_king_of_the_elite ideology = authoritarian_democrat_subtype }
				}
			}
		}
		custom_effect_tooltip = tooltip_white_line
		retire_character = POL_august_iv
	}
}

POL_puppet_setup = {
	var:tag_to_release = {
		POL_clear_economy = yes
		drop_cosmetic_tag = yes
		hidden_effect = {
			remove_ideas = {
				POL_uprising
				POL_uprising2
				POL_uprising3
				POL_ZRP
				POL_OZN_ONR_infighting
				POL_uprising_crash1
				POL_uprising_crash2
				POL_uprising_crash3
				POL_uprising_crash4
				POL_uprising_crash5
				POL_uprising_crash6
				POL_recovering_eco1
				POL_recovering_eco2
				POL_recovering_eco3
				POL_crescendo_of_blood
				POL_suppressing_rival_government
				POL_revolutionary_factionalism
			}
		}
		if = {
			limit = {
				ROOT = {
					OR = {
						tag = GER
						tag = BAT
					}
				}
			}
			POL = {
				set_party_name = {
					ideology = paternal_autocrat
					long_name = POL_generalgouvernment_party_long
					name = POL_generalgouvernment_party
				}
				set_politics = {
					ruling_party = paternal_autocrat
					elections_allowed = no
				}
				hidden_effect = {
					promote_character = {
						character = POL_wolfgang_von_kries
						ideology = paternal_autocrat_subtype
					}
					set_cosmetic_tag = POL_gengov
					add_popularity = {
						ideology = paternal_autocrat
						popularity = 0.15
					}
					activate_advisor = POL_wladyslaw_studnicki_sic
					set_temp_variable = { POL_influence_change = 60 }
					POL_add_german_influence = yes
					add_ideas = POL_german_hegemony
					add_ideas = POL_martial_law
					unlock_national_focus = POL_Circle
				}
			}
		}
		else_if = {
			limit = {
				ROOT = {
					original_tag = AUS
					AUS_has_habsburgs = yes
					is_ai = no
				}
				NOT = { country_exists = GAL } #Because if they exist, Karl Albrecht is there
			}
			AUS = {
				AUS_karl_albrecht_von_habsburg = {
					set_nationality = POL
					set_character_name = AUS_karl_albrecht_von_habsburg_regnal
					set_character_flag = is_monarch
					hidden_effect = { remove_all_country_leader_roles = yes }
					add_country_leader_role = {
						country_leader = {
							ideology = social_democrat_subtype
							desc = AUS_karl_albrecht_von_habsburg_POL_leader_desc
						}
						promote_leader = yes
					}
					add_country_leader_role = {
						country_leader = {
							ideology = social_liberal_subtype
							desc = AUS_karl_albrecht_von_habsburg_POL_leader_desc
						}
						promote_leader = yes
					}
				}
			}
			hidden_effect = {
				POL = {
					POL_overthrow_monarchy = yes
					set_cosmetic_tag = POL_AUS_kingdom
					if = {
						limit = { AUS = { has_government = social_democrat } }
						set_politics = {
							ruling_party = social_democrat
							elections_allowed = yes
						}
						set_political_party = {
							ideology = social_democrat
							popularity = 60
						}
					}
					else = {
						set_politics = {
							ruling_party = social_liberal
							elections_allowed = yes
						}
						set_political_party = {
							ideology = social_liberal
							popularity = 60
						}
					}
				}
			}
		}
		else = {
			hidden_effect = {
				POL = {
					POL_overthrow_monarchy = yes
					POL_norbert_barlicki = {
						set_nationality = PREV
						promote_character = social_democrat_subtype
					}
					POL_jan_woznicki = {
						set_nationality = PREV
						promote_character = social_liberal_subtype
					}
					POL_mieczyslaw_michalowicz = {
						set_nationality = PREV
						promote_character = market_liberal_subtype
					}
					POL_jozef_chacinski = {
						set_nationality = PREV
						promote_character = social_conservative_subtype
					}
					POL_eustachy_sapieha = {
						set_nationality = PREV
						promote_character = authoritarian_democrat_subtype
					}
					POL_edward_rydz_smigly = {
						set_nationality = PREV
						promote_character = paternal_autocrat_subtype
					}
					POL_adam_doboszynski = {
						set_nationality = PREV
						promote_character = national_populist_subtype
					}
				}
			}
		}
		if = {
			limit = { ROOT = { tag = AUS } }
			hidden_effect = {
				POL = {
					activate_advisor = POL_maksymilian_malinowski_sic
					add_ideas = POL_austrian_cooperation
				}
			}
		}
		else_if = {
			limit = {
				ROOT = {
					NOT = {
						tag = GER
						tag = BAT
					}
				}
			}
			hidden_effect = {
				POL = {
					if = {
						limit = { has_government = totalist }
						activate_advisor = POL_stanislaw_bukowiecki_sic
					}
					else_if = {
						limit = { has_government = syndicalist }
						activate_advisor = POL_pawel_lew_marek_sic
					}
					else_if = {
						limit = { has_government = radical_socialist }
						activate_advisor = POL_stanislaw_dubois_sic
					}
					else_if = {
						limit = {
							OR = {
								has_government = authoritarian_democrat
								has_government = paternal_autocrat
							}
						}
						activate_advisor = POL_tadeusz_bielecki_sic
					}
					else = {
						activate_advisor = POL_the_sejm_sic
					}
					add_ideas = POL_polish_control
				}
				POL_update_military = yes
				POL_return_purged_generals = yes
			}
		}
	}
}
POL_update_military = {
	hidden_effect = {
		if = {
			limit = {
				OR = {
					has_war_with = GER
					NOT = { is_in_faction_with = GER }
				}
				has_completed_focus = POL_Germanys_Eastern_Bulwark
			}
			uncomplete_national_focus = {
				focus = POL_Germanys_Eastern_Bulwark
				uncomplete_children = yes
			}
		}
		if = {
			limit = { has_idea = POL_german_hegemony }
			if = {
				limit = { POL = { has_completed_focus = POL_Armia_Ludowa } }
				uncomplete_national_focus = {
					focus = POL_Armia_Ludowa
					uncomplete_children = yes
				}
			}
			else_if = {
				limit = { POL = { has_completed_focus = POL_Legacy_of_the_Legions } }
				uncomplete_national_focus = {
					focus = POL_Legacy_of_the_Legions
					uncomplete_children = yes
				}
			}
		}
		if = {
			limit = { POL = { has_socialist_government = yes } }
			if = {
				limit = { has_completed_focus = POL_Legacy_of_the_Legions }
				uncomplete_national_focus = {
					focus = POL_Legacy_of_the_Legions
					uncomplete_children = yes
				}
			}
		}
		else = {
			if = {
				limit = { has_completed_focus = POL_Vanguard_of_the_Internationale }
				uncomplete_national_focus = {
					focus = POL_Vanguard_of_the_Internationale
					uncomplete_children = yes
				}
			}
		}
	}
}

POL_galicia_joins_poland = {
	POL = {
		add_state_core = 88 #Krakow
		add_state_claim = 91 #Lwow
		add_state_claim = 89 #Stanislawow
		GAL_characters_join_poland_immediate = yes
		hidden_effect = {
			POL_transfer_popularity = yes
			add_popularity = {
				ideology = authoritarian_democrat
				popularity = -0.25
			}
			country_event = { id = polandflavor.29 days = 365 }
		}
	}
}

POL_galicia_joins_poland_ukraine = {
	POL = {
		add_state_core = 88 #Krakow
		add_state_claim = 91 #Lwow
		GAL_characters_join_poland_immediate = yes
		hidden_effect = {
			POL_transfer_popularity = yes
			add_popularity = {
				ideology = authoritarian_democrat
				popularity = -0.25
			}
			country_event = { id = polandflavor.29 days = 365 }
		}
	}
	UKR = {
		add_state_core = 89 #Stanislaviv
		GAL_characters_join_ukraine_immediate = yes
		89 = { transfer_state_to = UKR }
	}
}
