#	Scripted triggers for Post War events
#
#	By Nijato and Rylock

clean_up_african_states = {
	# French claims
	if = {
		limit = {
			is_ally_with = FRA
			NOT = { tag = FRA }
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = FRA
					is_claimed_by = FRA
					has_variable = ambition_area_@FRA
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			transfer_state_to = FRA
		}
	}
	if = {
		limit = {
			is_ally_with = NFA
			NOT = { tag = NFA }
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = NFA
					is_claimed_by = NFA
					has_variable = ambition_area_@NFA
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			transfer_state_to = NFA
		}
	}
	# Portuguese claims
	if = {
		limit = {
			is_ally_with = POR
			NOT = { tag = POR }
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = POR
					is_claimed_by = POR
					has_variable = ambition_area_@POR
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			transfer_state_to = POR
		}
	}
	# South African claims
	if = {
		limit = {
			is_ally_with = SAF
			NOT = { tag = SAF }
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = SAF
					is_claimed_by = SAF
					has_variable = ambition_area_@SAF
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			transfer_state_to = SAF
		}
	}
	# British claims
	if = {
		limit = {
			is_ally_with = ENG
			NOT = { tag = ENG }
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = ENG
					is_claimed_by = ENG
					has_variable = ambition_area_@ENG
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			transfer_state_to = ENG
		}
	}
	if = {
		limit = {
			is_ally_with = GBR
			NOT = { tag = GBR }
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = GBR
					is_claimed_by = GBR
					has_variable = ambition_area_@GBR
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			transfer_state_to = GBR
		}
	}
	if = {
		limit = {
			is_ally_with = CAN
			NOT = { tag = CAN }
		}
		every_owned_state = {
			limit = {
				has_state_flag = GER_capitulation_transfer
				is_on_continent = africa
				OR = {
					is_core_of = CAN
					is_claimed_by = CAN
					has_variable = ambition_area_@CAN
				}
				is_claim_or_core_or_ambition_of_PREV = no
			}
			clr_state_flag = GER_capitulation_transfer
			transfer_state_to = CAN
		}
	}
	# when all else fails, give it to the faction leader
	if = {
		limit = {
			is_in_faction = yes
			is_faction_leader = no
			is_actual_major = no
		}
		random_country = {
			limit = {
				is_faction_leader = yes
				is_in_faction_with = PREV
			}
			save_event_target_as = leader
		}
		every_owned_state = {
			limit = {
				is_on_continent = africa
				has_state_flag = GER_capitulation_transfer
				is_claim_or_core_or_ambition_of_PREV = no
			}
			transfer_state_to = event_target:leader
		}
	}
}

take_occupied_states_in_africa = {
	every_state = {
		limit = {
			is_on_continent = africa
			controller = { has_war_with = GER }
			OR = {
				is_coastal = yes
				any_neighbor_state = {
					owner = { has_war_with = GER }
				}
			}
			is_owned_by_GER_or_MAF = yes
			african_state_can_be_taken = yes
		}
		set_state_flag = GER_capitulation_transfer
		controller = {
			save_event_target_as = new_controller
			transfer_state = PREV
		}
		#Kenya
		if = {
			limit = { is_core_of = KEN }
			KEN = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Mozambique
		if = {
			limit = { is_core_of = MZB }
			MZB = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Angola
		if = {
			limit = { is_core_of = ANG }
			ANG = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Zambia
		if = {
			limit = { is_core_of = ZAM }
			ZAM = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Gabon
		if = {
			limit = { is_core_of = GAB }
			GAB = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Congo
		if = {
			limit = { is_core_of = COG }
			MZB = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Namibia
		if = {
			limit = { is_core_of = NMB }
			NMB = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Nigeria
		if = {
			limit = { is_core_of = NGA }
			NGA = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Ivory Coast
		if = {
			limit = { is_core_of = IVO }
			IVO = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
		#Liberia
		if = {
			limit = { is_core_of = LIB }
			LIB = {
				every_core_state = {
					limit = { is_owned_by_GER_or_MAF = yes }
					set_state_flag = GER_capitulation_transfer
					transfer_state_to = event_target:new_controller
				}
			}
		}
	}

	if = {
		limit = {
			any_state = {
				is_on_continent = africa
				controller = { has_war_with = GER }
				OR = {
					is_coastal = yes
					any_neighbor_state = {
						owner = { has_war_with = GER }
					}
				}
				is_owned_by_GER_or_MAF = yes
				african_state_can_be_taken = yes
			}
		}
		take_occupied_states_in_africa = yes
	}
	else = {
		every_country = {
			limit = {
				has_war_with = GER
				any_owned_state = {
					is_on_continent = africa
					has_state_flag = GER_capitulation_transfer
				}
			}
			clean_up_african_states = yes
		}
	}
}

germany_flees_to_africa = {
	# first everyone who's occupying MAF should grab states
	take_occupied_states_in_africa = yes

	# Turn MAF into GEX
	set_autonomy = {
		target = MAF
		autonomy_state = autonomy_free
	}
	GEX = { reserve_dynamic_country = no }
	MAF = {
		save_global_event_target_as = KR_german_government_in_exile
		set_cosmetic_tag = MAF_germany_in_exile
		set_major = yes
		transfer_technology = yes
		transfer_int_upgrade = yes
		copy_government_of_PREV = yes

		if = {
			limit = { has_character = MAF_Hermann_von_Goering }
			retire_character = MAF_Hermann_von_Goering
		}

		set_party_name = {
			ideology = totalist
			name = GER_totalist_party
			long_name = GER_totalist_party_long
		}
		set_party_name = {
			ideology = totalist
			name = GER_totalist_party
			long_name = GER_totalist_party_long
		}
		set_party_name = {
			ideology = syndicalist
			name = GER_syndicalist_party
			long_name = GER_syndicalist_party_long
		}
		set_party_name = {
			ideology = radical_socialist
			name = GER_radical_socialist_party
			long_name = GER_radical_socialist_party_long
		}
		set_party_name = {
			ideology = social_democrat
			name = GER_social_democrat_party
			long_name = GER_social_democrat_party_long
		}
		set_party_name = {
			ideology = social_liberal
			name = GER_social_liberal_party
			long_name = GER_social_liberal_party_long
		}
		set_party_name = {
			ideology = market_liberal
			name = GER_market_liberal_party
			long_name = GER_market_liberal_party_long
		}
		set_party_name = {
			ideology = social_conservative
			name = GER_social_conservative_party
			long_name = GER_social_conservative_party_long
		}
		set_party_name = {
			ideology = authoritarian_democrat
			name = GER_authoritarian_democrat_party
			long_name = GER_authoritarian_democrat_party_long
		}
		set_party_name = {
			ideology = paternal_autocrat
			name = GER_paternal_autocrat_party
			long_name = GER_paternal_autocrat_party_long
		}
		set_party_name = {
			ideology = national_populist
			name = GER_national_populist_party
			long_name = GER_national_populist_party_long
		}

		if = {
			limit = { owns_state = 965 }
			set_capital = { state = 965 remember_old_capital = no }
		}
		if = {
			limit = { has_character = MAF_Hermann_von_Goering }
			retire_character = MAF_Hermann_von_Goering
		}
		remove_ideas = {
			MAF_border_shit_show
			MAF_Imminent_Collapse
		}
		add_ideas = MAF_on_borrowed_time

		### Move the Wilhelms
		GER_create_wilhelm_ii = yes
	}

	# Move all African puppets to GEX
	every_subject_country = {
		limit = {
			is_in_africa = yes
			NOT = {
				tag = MAF
				tag = MOR
				tag = NFA
				tag = LBA
				tag = EGY
				tag = ETH
				tag = SOM
				tag = LIB
				tag = SAF
			}
		}
		get_current_government_type = yes
		MAF = {
			set_autonomy = {
				target = PREV
				autonomy_state = kr_autonomous_puppet
				end_wars = no
			}
		}
		restore_previous_government_type = yes
	}

	# re-puppet GEA to MAF
	if = {
		limit = { has_subject = GEA }
		GEA = { get_current_government_type = yes }
		MAF = {
			set_autonomy = {
				target = GEA
				autonomy_state = kr_autonomous_puppet
				end_wars = no
			}
		}
		GEA = { restore_previous_government_type = yes }
	}

	# add GEX to all of GER's current wars
	every_enemy_country = {
		MAF = {
			add_to_war = {
				targeted_alliance = GER
				enemy = PREV
			}
		}
	}

	# then transfer all controlled African lands to GEX
	set_temp_variable = { target = MAF }
	every_owned_state = {
		limit = { is_on_continent = africa }
		transfer_state_during_war = yes
	}

	# delete the army, then transfer navy and 50% of all German leaders to the GEX tag
	every_navy_leader = {
		set_character_flag = GER_character
		set_nationality = MAF
	}
	transfer_navy = { target = MAF }
	delete_unit = { disband = yes }
	transfer_units_fraction = {
		target = MAF
		size = 0.5
		navy_ratio = 1
		air_ratio = 0.75
		keep_unit_leaders_trigger = { always = yes }
	}
	every_army_leader = {
		random = {
			chance = 50
			set_character_flag = GER_character
			set_nationality = MAF
		}
	}

	# add GEX cores
	every_core_state = { add_core_of = MAF }
	every_state = {
		limit = { is_claimed_by = GER }
		add_claim_by = MAF
	}

	# now do the regular German capitulation
	germany_capitulates = yes
}

germany_capitulates = {
	# free all remaining puppets
	GER = {
		every_subject_country = {
			PREV = {
				set_autonomy = { target = PREV autonomy_state = autonomy_free }
			}
		}
	}

	# dissolve the Reichspakt
	every_other_country = {
		limit = {
			is_in_faction_with = GER
			has_capitulated = no
		}
		set_country_flag = former_reichspakt_member
		add_to_temp_array = { global.former_reichspakt_members = THIS }
	}
	faction_leader = { dismantle_faction = yes }

	# give Reichspakt members military access to each other
	for_each_scope_loop = {
		array = global.former_reichspakt_members
		for_each_scope_loop = {
			array = global.former_reichspakt_members
			if = {
				limit = { NOT = { tag = PREV } }
				give_military_access = PREV
			}
		}
	}

	# let Austria reform the Donau-Adriabund, if it's currently in the Reichspakt
	if = {
		limit = {
			NOT = { has_global_flag = AUS_treaty_of_budapest }
			AUS = {
				has_country_flag = former_reichspakt_member
				has_country_flag = AUS_intervened_in_weltkrieg
				exists = yes
				has_capitulated = no
				is_subject = no
			}
		}
		AUS = {
			create_faction = austrian_sphere
			set_country_flag = former_reichspakt_member
			country_event = { id = aus.tree.4016 hours = 8 }
		}
		every_other_country = {
			limit = {
				has_country_flag = AUS_former_faction_member
				has_country_flag = former_reichspakt_member
				is_subject = no
			}
			clr_country_flag = AUS_former_faction_member
			AUS = { add_to_faction = PREV }
		}
	}

	# release Ceylon if no enemies are interested in taking it
	if = {
		limit = {
			422 = { is_owned_and_controlled_by = PREV }
			NOT = { any_enemy_country = { has_variable = 422.ambition_area_@THIS } }
		}
		release = CEY
		if = {
			limit = { owns_state = 281 }
			281 = { transfer_state_to = CEY }
		}
		if = {
			limit = { owns_state = 710 }
			710 = { transfer_state_to = CEY }
		}
	}

	# get rid of specific states, if Germany still has them
	744 = { #Qingdao
		if = {
			limit = {
				OR = {
					is_owned_by = GER
					is_owned_by = GEA
				}
			}
			if = {
				limit = { controller = { has_war_with = ROOT } }
				transfer_state_to = controller
			}
			else_if = {
				limit = {
					owner = { has_war_with = JAP }
					NOT = { has_global_flag = JAP_defeated_by_china }
				}
				transfer_state_to = JAP
			}
			else = {
				transfer_state_to = var:1065.owner
			}
			save_event_target_as = transferred_state
			state_event = { id = capt.15 trigger_for = owner }
		}
	}
	996 = { #Weihaiwei
		if = {
			limit = {
				OR = {
					is_owned_by = GER
					is_owned_by = GEA
				}
			}
			if = {
				limit = { controller = { has_war_with = ROOT } }
				transfer_state_to = controller
			}
			else_if = {
				limit = {
					owner = { has_war_with = JAP }
					NOT = { has_global_flag = JAP_defeated_by_china }
				}
				transfer_state_to = JAP
			}
			else = {
				transfer_state_to = var:1065.owner
			}
			save_event_target_as = transferred_state
			state_event = { id = capt.15 trigger_for = owner }
		}
	}
	728 = { #Guangzhouwan
		if = {
			limit = {
				OR = {
					is_owned_by = GER
					is_owned_by = GEA
				}
			}
			if = {
				limit = { controller = { has_war_with = ROOT } }
				transfer_state_to = controller
			}
			else_if = {
				limit = {
					owner = { has_war_with = JAP }
					NOT = { has_global_flag = JAP_defeated_by_china }
				}
				transfer_state_to = JAP
			}
			else = {
				transfer_state_to = var:593.owner
			}
			save_event_target_as = transferred_state
			state_event = { id = capt.15 trigger_for = owner }
		}
	}
	818 = { #Pondicherry
		if = {
			limit = {
				OR = {
					is_owned_by = GER
					is_owned_by = GEA
				}
			}
			if = {
				limit = { controller = { has_war_with = ROOT } }
				transfer_state_to = controller
			}
			else_if = {
				limit = {
					owner = { has_war_with = JAP }
					NOT = { has_global_flag = JAP_defeated_by_china }
				}
				transfer_state_to = JAP
			}
			else = {
				transfer_state_to = var:320.owner
			}
			save_event_target_as = transferred_state
			state_event = { id = capt.15 trigger_for = owner }
		}
	}

	random_country = {
		limit = { has_war = no }
		country_event = { id = capt.20 days = 4 } #clean-up event
	}

	# peace out with remaining Reichpakt members
	every_country = {
		limit = {
			has_war = yes
			is_subject = no
			OR = {
				is_in_faction = no
				is_faction_leader = yes
			}
			NOT = { has_country_flag = former_reichspakt_member }
			any_enemy_country = { has_country_flag = former_reichspakt_member }
		}
		country_event = capt.10
	}

	# fire post-collape events for GEX
	if = {
		limit = { country_exists = GEX }
		GEX = {
			if = {
				limit = { has_war_with = JAP }
				country_event = { id = capt.7 days = 1 }
			}
			else_if = {
				limit = { has_war_with = SIA }
				country_event = { id = capt.5 days = 1 }
			}
			if = {
				limit = { has_war_with = NFA }
				NFA = { country_event = { id = capt.12 days = 2 } }
			}
		}
	}

	# Fire RUS postwar event if RUS exists, at peace with FRA, and ENT exists
	if = {
		limit = { country_exists = RUS }
		RUS = { country_event = { id = rusd.126 days = 180 } }
	}

	# Fire postwar event for BAT
	if = {
		limit = { country_exists = BAT }
		BAT = { country_event = { id = KRBAT.116 days = 5 } }
	}
}

CAN_give_connected_USA_states_NEE = {
	CAN = {
		every_owned_state = {
			limit = {
				is_core_of = USA
				any_neighbor_state = {
					is_owned_by = NEE
					NOT = { state = 393 } #Michigan
				}
				NOT = {
					is_core_of = CAN
					is_claimed_by = CAN
				}
			}
			if = {
				limit = { is_claimed_by = NEE }
				remove_claim_by = NEE
				add_core_of = NEE
			}
			else_if = {
				limit = { NOT = { is_core_of = NEE } }
				add_core_of = NEE
			}
			transfer_state_to = NEE
		}
	}
	if = {
		limit = {
			CAN = {
				any_owned_state = {
					is_core_of = USA
					any_neighbor_state = {
						is_owned_by = NEE
						NOT = { state = 393 } #Michigan
					}
					NOT = {
						is_core_of = CAN
						is_claimed_by = CAN
					}
				}
			}
		}
		CAN_give_connected_USA_states_NEE = yes
	}
}

CAN_give_connected_USA_states_PSA = {
	CAN = {
		every_owned_state = {
			limit = {
				is_core_of = USA
				any_neighbor_state = {
					is_owned_by = PSA
					NOT = { state = 393 } #Michigan
				}
				NOT = {
					is_core_of = CAN
					is_claimed_by = CAN
				}
				is_new_england = no
			}
			if = {
				limit = { is_claimed_by = PSA }
				remove_claim_by = PSA
				add_core_of = PSA
			}
			else_if = {
				limit = { NOT = { is_core_of = PSA } }
				add_core_of = PSA
			}
			transfer_state_to = PSA
		}
	}
	if = {
		limit = {
			CAN = {
				any_owned_state = {
					is_core_of = USA
					any_neighbor_state = {
						is_owned_by = PSA
						NOT = { state = 393 } #Michigan
					}
					NOT = {
						is_core_of = CAN
						is_claimed_by = CAN
					}
					is_new_england = no
				}
			}
		}
		CAN_give_connected_USA_states_PSA = yes
	}
}

# This can be used normally: TAG = { white_peace_with_ROOT = yes }
# Remember: ROOT is the country running the current event
# TAG is the country you want ROOT to completely be at peace with
# meaning it will ensure peace with all faction members and puppets on either side

white_peace_with_ROOT = {
	effect_tooltip = {
		if = {
			limit = { NOT = { civilwar_target = ROOT } }
			white_peace = ROOT
		}
	}
	hidden_effect = {
		if = {
			limit = {
				has_war_with = ROOT
				NOT = { civilwar_target = ROOT }
			}
			if = {
				limit = {
					is_in_faction = yes
					is_faction_leader = no
					faction_leader = { has_war_with = ROOT }
				}
				set_temp_variable = { peace_target1 = faction_leader }
			}
			else_if = {
				limit = {
					is_subject = yes
					overlord = { has_war_with = ROOT }
				}
				set_temp_variable = { peace_target1 = overlord }
			}
			else = {
				set_temp_variable = { peace_target1 = THIS }
			}
			ROOT = {
				if = {
					limit = {
						is_in_faction = yes
						is_faction_leader = no
						faction_leader = { has_war_with = PREV.PREV }
					}
					set_temp_variable = { peace_target2 = faction_leader }
				}
				else_if = {
					limit = {
						is_subject = yes
						overlord = { has_war_with = PREV.PREV }
					}
					set_temp_variable = { peace_target2 = overlord }
				}
				else = {
					set_temp_variable = { peace_target2 = THIS }
				}
			}
			var:peace_target1 = { white_peace = var:peace_target2 }

			#cleanup in case of war merge bugs
			var:peace_target1 = {
				every_enemy_country = {
					limit = { is_ally_with = var:peace_target2 }
					white_peace = var:peace_target1
				}
			}
			var:peace_target2 = {
				every_enemy_country = {
					limit = { is_ally_with = var:peace_target1 }
					white_peace = var:peace_target2
				}
			}
		}
	}
}

# This can be used normally: TAG = { white_peace_with_PREV = yes }
# Remember: PREV is the previous scope
# TAG is the country you want PREV to completely be at peace with
# meaning it will ensure peace with all faction members and puppets on either side

white_peace_with_PREV = {
	effect_tooltip = {
		if = {
			limit = { NOT = { civilwar_target = PREV } }
			white_peace = PREV
		}
	}
	hidden_effect = {
		if = {
			limit = {
				has_war_with = PREV
				NOT = { civilwar_target = PREV }
			}
			if = {
				limit = {
					is_in_faction = yes
					is_faction_leader = no
					faction_leader = { has_war_with = PREV.PREV }
				}
				set_temp_variable = { peace_target1 = faction_leader }
			}
			else_if = {
				limit = {
					is_subject = yes
					overlord = { has_war_with = PREV.PREV }
				}
				set_temp_variable = { peace_target1 = overlord }
			}
			else = {
				set_temp_variable = { peace_target1 = THIS }
			}
			PREV = {
				if = {
					limit = {
						is_in_faction = yes
						is_faction_leader = no
						faction_leader = { has_war_with = PREV.PREV }
					}
					set_temp_variable = { peace_target2 = faction_leader }
				}
				else_if = {
					limit = {
						is_subject = yes
						overlord = { has_war_with = PREV.PREV }
					}
					set_temp_variable = { peace_target2 = overlord }
				}
				else = {
					set_temp_variable = { peace_target2 = THIS }
				}
			}
			var:peace_target1 = { white_peace = var:peace_target2 }

			#cleanup in case of war merge bugs
			var:peace_target1 = {
				every_enemy_country = {
					limit = { is_ally_with = var:peace_target2 }
					white_peace = var:peace_target1
				}
			}
			var:peace_target2 = {
				every_enemy_country = {
					limit = { is_ally_with = var:peace_target1 }
					white_peace = var:peace_target2
				}
			}
		}
	}
}

# NOTE: "save_event_target_as = white_peace_receiver" needs to be performed first
# Then you use "TAG = { white_peace_with_TARGET = yes }"
# TAG is the country you want the event target to completely be at peace with
# meaning it will ensure peace with all faction members and puppets on either side
# remember: if you don't use TAG and just use "white_peace_with_TARGET = yes" then the event target is making peace with ROOT

white_peace_with_TARGET = {
	effect_tooltip = {
		if = {
			limit = { NOT = { civilwar_target = event_target:white_peace_receiver } }
			white_peace = event_target:white_peace_receiver
		}
	}
	hidden_effect = {
		if = {
			limit = {
				has_war_with = event_target:white_peace_receiver
				NOT = { civilwar_target = event_target:white_peace_receiver }
			}
			if = {
				limit = {
					is_in_faction = yes
					is_faction_leader = no
					faction_leader = { has_war_with = event_target:white_peace_receiver }
				}
				set_temp_variable = { peace_target1 = faction_leader }
			}
			else_if = {
				limit = {
					is_subject = yes
					overlord = { has_war_with = event_target:white_peace_receiver }
				}
				set_temp_variable = { peace_target1 = overlord }
			}
			else = {
				set_temp_variable = { peace_target1 = THIS }
			}
			event_target:white_peace_receiver = {
				if = {
					limit = {
						is_in_faction = yes
						is_faction_leader = no
						faction_leader = { has_war_with = PREV.PREV }
					}
					set_temp_variable = { peace_target2 = faction_leader }
				}
				else_if = {
					limit = {
						is_subject = yes
						overlord = { has_war_with = PREV.PREV }
					}
					set_temp_variable = { peace_target2 = overlord }
				}
				else = {
					set_temp_variable = { peace_target2 = THIS }
				}
			}
			var:peace_target1 = { white_peace = var:peace_target2 }

			#cleanup in case of war merge bugs
			var:peace_target1 = {
				every_enemy_country = {
					limit = { is_ally_with = var:peace_target2 }
					white_peace = var:peace_target1
				}
			}
			var:peace_target2 = {
				every_enemy_country = {
					limit = { is_ally_with = var:peace_target1 }
					white_peace = var:peace_target2
				}
			}
		}
	}
}

faction_collapse_member_peace_effect = {
	leave_faction = yes
	#Step one: peace out with any faction leaders who aren't neighbours of/invading PREV or claiming PREV territory
	every_enemy_country = {
		limit = {
			is_faction_leader = yes
			OR = {
				capital_scope = { is_island_region = yes }
				same_continent_as_PREV = no
			}
			NOT = {
				civilwar_target = PREV #do not peace out civil wars
				PREV = {
					OR = {
						any_home_area_neighbor_country = { is_in_faction_with = PREV.PREV } #== invading
						any_owned_state = {
							OR = {
								is_core_of = PREV.PREV
								is_claimed_by = PREV.PREV
							}
						}
					}
				}
				any_allied_country = {
					PREV.PREV = {
						any_owned_state = {
							OR = {
								is_core_of = PREV.PREV
								is_claimed_by = PREV.PREV
							}
						}
					}
				}
			}
		}
		white_peace = PREV
	}

	#Step two: peace out with any factionless non-neighbours not on the same continent who aren't invading PREV or claiming PREV territory
	every_enemy_country = {
		limit = {
			is_in_faction = no
			is_subject = no
			has_capitulated = no
			OR = {
				capital_scope = { is_island_region = yes }
				same_continent_as_PREV = no
			}
			NOT = {
				civilwar_target = PREV #do not peace out civil wars
				PREV = {
					OR = {
						any_home_area_neighbor_country = { #== invading
							OR = {
								tag = PREV.PREV
								is_subject_of = PREV.PREV
							}
						}
						any_owned_state = {
							OR = {
								is_core_of = PREV.PREV
								is_claimed_by = PREV.PREV
							}
						}
					}
				}
				any_subject_country = {
					PREV.PREV = {
						any_owned_state = {
							OR = {
								is_core_of = PREV.PREV
								is_claimed_by = PREV.PREV
							}
						}
					}
				}
			}
		}
		white_peace = PREV
	}
}

peace_out_non_neighbours_after_leaving_faction = {
	if = {
		limit = { has_capitulated = no }
		every_enemy_country = {
			limit = {
				is_valid_peace_target = yes
				has_capitulated = no
				NOT = {
					civilwar_target = PREV #do not peace out civil wars
					PREV = {
						OR = {
							any_home_area_neighbor_country = { is_ally_with = PREV.PREV } #== invading
							any_owned_state = {
								OR = {
									is_core_of = PREV.PREV
									is_claimed_by = PREV.PREV
								}
							}
						}
					}
					any_subject_country = {
						PREV.PREV = {
							any_owned_state = {
								OR = {
									is_core_of = PREV.PREV
									is_claimed_by = PREV.PREV
								}
							}
						}
					}
					any_allied_country = {
						PREV.PREV = {
							any_owned_state = {
								OR = {
									is_core_of = PREV.PREV
									is_claimed_by = PREV.PREV
								}
							}
						}
					}
				}
			}
			white_peace = PREV
		}
	}
}

select_correct_peace_event_receiver = {
	if = {
		limit = {
			is_subject = yes
			overlord = { has_war_with = ROOT }
		}
		if = {
			limit = {
				overlord = {
					is_in_faction = yes
					faction_leader = { has_war_with = ROOT }
				}
			}
			set_temp_variable = { target = faction_leader }
		}
		else = {
			set_temp_variable = { target = overlord }
		}
	}
	else_if = {
		limit = {
			is_in_faction = yes
			faction_leader = { has_war_with = ROOT }
		}
		set_temp_variable = { target = faction_leader }
	}
	else = {
		set_temp_variable = { target = THIS }
	}
}
