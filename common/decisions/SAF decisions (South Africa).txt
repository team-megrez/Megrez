# South Africa decisions

political_actions = {
	SAF_decision_township_modernisation = {
		icon = GFX_decision_generic_construction
		allowed = { always = no }	# Activated by focus SAF_urban_housing_program

		visible = {
			OR = {
				has_idea = SAF_idea_slum_formation
				has_idea = SAF_idea_slum_formation_2
			}
		}

		cost = 100

		ai_will_do = { factor = 10 }

		modifier = {
			civilian_factory_use = 3
			political_power_gain = -0.05
		}

		days_re_enable = 30
		days_remove = 365

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_decision_township_modernisation"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_decision_township_modernisation"
			if = {
				limit = {
					has_idea = SAF_idea_slum_formation
				}
				remove_ideas = SAF_idea_slum_formation
			}
			else = {
				swap_ideas = {
					remove_idea = SAF_idea_slum_formation_2
					add_idea = SAF_idea_slum_formation
				}
			}
		}
	}
}

SAF_geopolitical_actions = {
	SAF_defend_socialist_south_africa_mission = {
		icon = generic_tank
		allowed = { always = no }	#Activated by saf.176

		available = {
			surrender_progress > 0.4
		}

		cancel_trigger = {
			NOT = { has_war_with = ENT }
		}

		days_mission_timeout = 180
		is_good = yes
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_defend_socialist_south_africa_mission"
			custom_effect_tooltip = dei_tt_the_timer_will_be_reset
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SAF_defend_socialist_south_africa_mission"
			ENT = { country_event = saf.174 } #Peace with ENT
			if = {
				limit = {
					INT = {
						is_faction_leader = yes
						NOT = { has_war_with = ROOT }
					}
				}
				INT = { country_event = saf.159 }
			}
		}
	}

	ENT_invade_socialist_south_africa_mission = {
		icon = generic_tank
		allowed = { always = no }	#Activated by saf.176

		available = {
			SAF = { surrender_progress > 0.4 }
		}

		cancel_trigger = {
			NOT = { has_war_with = SAF }
		}

		days_mission_timeout = 180
		is_good = no
		fire_only_once = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete ENT_invade_socialist_south_africa_mission"
			custom_effect_tooltip = dei_tt_the_timer_will_be_reset
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout ENT_invade_socialist_south_africa_mission"
			effect_tooltip = {
				ENT = { country_event = saf.174 } #Peace with SAF
				if = {
					limit = {
						INT = {
							is_faction_leader = yes
							NOT = { has_war_with = SAF }
						}
					}
					INT = { country_event = saf.159 }
				}
			}
		}
	}
}

SAF_fix_black_monday_category = {
	SAF_cut_abandonment_of_the_gold_standard = {
		icon = eng_trade_unions_support
		allowed = { always = no }		# Activated by scripted effect
		fire_only_once = yes
		days_remove = 180

		modifier = {
			political_power_gain = 0.02
		}
		cost = 0
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_cut_abandonment_of_the_gold_standard"
			if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.06
						compare = less_than
					}
				}
				add_to_variable = { var = saf_var_inflation value = 0.03 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.12
						compare = less_than
					}
				}
				add_to_variable = { var = saf_var_inflation value = 0.06 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.24
						compare = less_than
					}
				}
				add_to_variable = { var = saf_var_inflation value = 0.12 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.48
						compare = less_than
					}
				}
				add_to_variable = { var = saf_var_inflation value = 0.24 }
			}
			else = {
				add_to_variable = { var = saf_var_inflation value = 0.48 }
			}
			SAF_inflation_events = yes
			country_event = saf.320
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_cut_abandonment_of_the_gold_standard"
			custom_effect_tooltip = SAF_tt_saved_money_goes_to_free_budget_gs
			add_to_variable = { var = saf_var_unemployment value = -0.05 }
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_unemployment
					value = 0.08
					compare = less_than
				}
			}
		}
	}
	SAF_print_extra_money = {
		icon = ger_mefo_bills
		allowed = { always = no }
		days_remove = 7
		cost = 0
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_print_extra_money"
			custom_effect_tooltip = SAF_tt_print_extra_money
			add_to_variable = { var = saf_var_budget value = 2 }
			if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.08
						compare = less_than
					}
				}
				add_to_variable = { var = saf_var_inflation value = 0.03 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.12
						compare = less_than
					}
				}
				add_to_variable = { var = saf_var_inflation value = 0.06 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.24
						compare = less_than
					}
				}
				add_to_variable = { var = saf_var_inflation value = 0.12 }
			}
			else_if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.48
						compare = less_than
					}
				}
				add_to_variable = { var = saf_var_inflation value = 0.24 }
			}
			else = {
				add_to_variable = { var = saf_var_inflation value = 0.48 }
			}
			SAF_inflation_events = yes
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_inflation
					value = 0.07
					compare = greater_than_or_equals
				}
			}
		}
	}
	SAF_counter_inflation = {
		icon = ger_mefo_bills
		allowed = { always = no }
		available = {
			custom_trigger_tooltip = {
				tooltip = SWE_tt_more_than_five_percent_inflation
				check_variable = {
					var = saf_var_inflation
					value = 0.05
					compare = greater_than_or_equals
				}
			}
		}
		cost = 0
		days_remove = 30
		modifier = {
			consumer_goods_factor = 0.05
			political_power_cost = 0.5
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_counter_inflation"
			custom_effect_tooltip = SWE_tt_lower_inflation_by_five_percent
			subtract_from_variable = { var = saf_var_inflation value = 0.05 }
			SAF_inflation_events = yes
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_inflation
					value = 0.05
					compare = less_than
				}
			}
		}
	}
	SAF_take_a_loan = {
		icon = generic_decision
		allowed = { always = no }
		available = {
			NOT = {
				has_country_flag = SWE_no_more_loans
			}
		}
		cost = 0
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_take_a_loan"
			custom_effect_tooltip = SAF_tt_loan_money
			add_to_variable = { var = saf_var_debt value = 2 }
			add_to_variable = { var = saf_var_budget value = 2 }
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_unemployment
					value = 0.08
					compare = less_than_or_equals
				}
			}
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_debt
					value = 8
					compare = greater_than_or_equals
				}
			}
		}
	}
	SAF_repay_a_loan = {
		icon = generic_decision
		allowed = { always = no }
		available = {
			custom_trigger_tooltip = {
				tooltip = SAF_tt_can_pay_off_debt
				check_variable = {
					var = saf_var_budget
					value = 2
					compare = greater_than_or_equals
				}
			}
		}
		visible = {
			check_variable = {
				var = saf_var_debt
				value = 2
				compare = greater_than_or_equals
			}
		}
		cost = 0
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_repay_a_loan"
			custom_effect_tooltip = SAF_tt_pays_off_debt
			subtract_from_variable = { var = saf_var_debt value = 2 }
			subtract_from_variable = { var = saf_var_budget value = 2 }
		}
		ai_will_do = {
			base = 0
			modifier = {
				add = 50
				check_variable = {
					var = saf_var_debt
					value = 10
					compare = greater_than_or_equals
				}
			}
		}
	}
	SAF_cut_funding_on_military = {
		icon = ger_military_buildup
		allowed = { always = no }
		available = {
			NOT = {
				has_government = social_liberal
				has_government = social_conservative
			}
		}
		cost = 0
		days_remove = 365

		modifier = {
			industrial_capacity_factory = -0.20
			army_org_factor = -0.25
			political_power_cost = 0.05
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_cut_funding_on_military"
			custom_effect_tooltip = SAF_tt_saved_money_goes_to_free_budget
			add_to_variable = { var = saf_var_budget value = 5 }
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
		}
	}
	SAF_raise_taxes = {
		icon = oppression
		allowed = { always = no }
		days_remove = 365
		cost = 0
		modifier = {
			political_power_cost = 0.10
			consumer_goods_factor = 0.1
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_raise_taxes"
			custom_effect_tooltip = SAF_tt_earned_money_goes_to_free_budget
			add_to_variable = { var = saf_var_budget value = 2 }
			if = {
				limit = {
					has_government = market_liberal
				}
				add_popularity = { ideology = market_liberal popularity = -0.05 }
			}
			if = {
				limit = {
					check_variable = {
						var = saf_var_inflation
						value = 0.01
						compare = greater_than_or_equals
					}
				}
				custom_effect_tooltip = SWE_tt_inflation_reduced_by_one
				add_to_variable = { var = saf_var_inflation value = -0.01 }
			}
		}
		ai_will_do = {
			base = 50
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_budget
					value = 10
					compare = greater_than_or_equals
				}
			}
		}
	}
	SAF_public_work_program = {
		icon = generic_construction
		allowed = { always = no }
		days_remove = 150
		cost = 0
		modifier = {
			consumer_goods_factor = 0.1
		}
		custom_cost_trigger = {
			check_variable = {
				var = saf_var_budget
				value = 3
				compare = greater_than_or_equals
			}
		}

		custom_cost_text = SAF_tt_three_million_kronor
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_public_work_program"
			#custom_effect_tooltip = SWE_tt_two_million_kronor_spent
			add_to_variable = { var = saf_var_budget value = -3 }
			custom_effect_tooltip = SWE_tt_unemployment_lowered_three_percent
			add_to_variable = { var = saf_var_unemployment value = -0.03 }
			if = {
				limit = {
					check_variable = {
						var = saf_var_unemployment
						value = 0
						compare = less_than
					}
				}
				set_variable = { saf_var_unemployment = 0 }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_public_work_program"
			custom_effect_tooltip = SWE_tt_unemployment_lowered_two_percent
			add_to_variable = { var = saf_var_unemployment value = -0.02 }
			if = {
				limit = {
					check_variable = {
						var = saf_var_unemployment
						value = 0
						compare = less_than
					}
				}
				set_variable = { saf_var_unemployment = 0 }
			}
		}
		ai_will_do = {
			base = 100
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_unemployment
					value = 0.08
					compare = less_than_or_equals
				}
			}
		}
	}
	SAF_subsidize_resource_exports = {
		icon = tungsten
		allowed = { always = no }
		days_remove = 150
		modifier = {
			local_resources_factor = 0.10
			min_export = 0.2
		}
		cost = 0
		custom_cost_trigger = {
			check_variable = {
				var = saf_var_budget
				value = 2
				compare = greater_than_or_equals
			}
		}

		custom_cost_text = SAF_tt_two_million_kronor
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_subsidize_resource_exports"
			add_to_variable = { var = saf_var_budget value = -2 }
			custom_effect_tooltip = SWE_tt_unemployment_lowered_two_percent
			add_to_variable = { var = saf_var_unemployment value = -0.02 }
			if = {
				limit = {
					check_variable = {
						var = saf_var_unemployment
						value = 0
						compare = less_than
					}
				}
				set_variable = { saf_var_unemployment = 0 }
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_subsidize_resource_exports"
			custom_effect_tooltip = SWE_tt_unemployment_lowered_two_percent
			add_to_variable = { var = saf_var_unemployment value = -0.02 }
			if = {
				limit = {
					check_variable = {
						var = saf_var_unemployment
						value = 0
						compare = less_than
					}
				}
				set_variable = { saf_var_unemployment = 0 }
			}
		}
		ai_will_do = {
			base = 100
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_unemployment
					value = 0.08
					compare = less_than_or_equals
				}
			}
		}
	}
	SAF_nationalize_company = {
		icon = generic_industry
		allowed = { always = no }
		available = {
			OR = {
				has_government = social_democrat
				has_government = authoritarian_democrat
				has_government = paternal_autocrat
			}
		}
		days_remove = 60
		cost = 0
		custom_cost_trigger = {
			check_variable = {
				var = saf_var_budget
				value = 5
				compare = greater_than_or_equals
			}
		}

		custom_cost_text = SAF_tt_five_million_kronor
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_nationalize_company"
			add_to_variable = { var = saf_var_budget value = -5 }
			custom_effect_tooltip = SWE_tt_unemployment_lowered_two_percent
			add_to_variable = { var = saf_var_unemployment value = -0.02 }
			if = {
				limit = {
					check_variable = {
						var = saf_var_unemployment
						value = 0
						compare = less_than
					}
				}
				set_variable = { saf_var_unemployment = 0 }
			}
		}
		ai_will_do = {
			base = 100
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_unemployment
					value = 0.08
					compare = less_than_or_equals
				}
			}
		}
	}
	SAF_implement_tariffs = {
		icon = generic_break_treaty
		allowed = { always = no }
		modifier = {
			trade_opinion_factor = -0.25
		}
		days_remove = 365
		fire_only_once = yes
		cost = 0
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_implement_tariffs"
			custom_effect_tooltip = SAF_tt_receive_million_kronor
			add_to_variable = { var = saf_var_budget value = 2 }
			custom_effect_tooltip = SWE_tt_unemployment_lowered_two_percent
			add_to_variable = { var = saf_var_unemployment value = -0.02 }
			if = {
				limit = {
					check_variable = {
						var = saf_var_unemployment
						value = 0
						compare = less_than
					}
				}
				set_variable = { saf_var_unemployment = 0 }
			}
		}
		ai_will_do = {
			base = 100
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_unemployment
					value = 0.08
					compare = less_than_or_equals
				}
			}
		}
	}
	SAF_soften_the_colour_bar = {
		icon = GFX_decision_generic_independence
		allowed = { always = no }	# Activated by SAF_repeal_industrial_conciliation_act
		modifier = {
			political_power_gain = -0.15
		}

		days_remove = 365
		cost = 0

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_soften_the_colour_bar"
			custom_effect_tooltip = SWE_tt_unemployment_lowered_two_percent
			add_to_variable = { var = saf_var_unemployment value = -0.02 }
			if = {
				limit = {
					check_variable = {
						var = saf_var_unemployment
						value = 0
						compare = less_than
					}
				}
				set_variable = { saf_var_unemployment = 0 }
			}
		}
		ai_will_do = {
			base = 100
			modifier = {
				factor = 0
				check_variable = {
					var = saf_var_unemployment
					value = 0.08
					compare = less_than_or_equals
				}
			}
		}
	}
}

SAF_Decision_Group_Nuweveld = {
	SAF_campaign_against_tswana_insurgents = {
		icon = generic_prepare_civil_war

		allowed = { always = no }

		available = {
			542 = { has_active_resistance = yes }
		}

		ai_hint_pp_cost = 10
		custom_cost_text = SAF_pp_10_cp_25
		custom_cost_trigger = {
			has_political_power > 9.99
			command_power > 24.99
		}

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				542 = { resistance < 25 }
			}
		}

		modifier = {
			political_power_gain = -0.15
			conscription_factor = -0.1
			army_morale_factor = -0.1
		}

		days_re_enable = 50
		days_remove = 50

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_campaign_against_tswana_insurgents"
			hidden_effect = {
				add_political_power = -10
				add_command_power = -25
			}
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_campaign_against_tswana_insurgents"
			542 = { add_resistance = -10 }
		}
	}

	SAF_increase_settler_attraction = {
		icon = generic_political_discourse
		allowed = { always = no }

		cost = 20

		ai_will_do = { factor = 10 }

		modifier = {
			political_power_gain = -0.1
			consumer_goods_factor = 0.05
			MONTHLY_POPULATION = -0.2
		}

		days_re_enable = 70
		days_remove = 35

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_increase_settler_attraction"
			add_to_variable = {
				SAF_settling_attractiveness = 0.02
				tooltip = SAF_tt_settler_attractiveness
			}
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_increase_settler_attraction"
			542 = {
				if = {
					limit = { has_resistance = yes }
					add_resistance = 5
				}
			}
		}
	}

	SAF_ask_for_permission_to_recruit_settlers = {
		icon = generic_agreement
		allowed = { always = no }

		visible = {
			FROM = {
				exists = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
			}
		}

		fire_only_once = yes
		cost = 20

		ai_will_do = { factor = 10 }

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_ask_for_permission_to_recruit_settlers target: [From.GetName]"
			FROM = { country_event = saf.57 }
		}
	}

	SAF_recruit_settlers_from_from = {
		icon = generic_political_discourse
		allowed = { always = no }
		visible = {
			FROM = {
				exists = yes
				has_socialist_government = no
				NOT = { has_war_with = ROOT }
			}
		}

		modifier = {
			consumer_goods_factor = 0.05
		}

		days_re_enable = 75
		days_remove = 50

		cost = 20

		ai_will_do = { factor = 10 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_recruit_settlers_from_from target: [From.GetName]"
			if = {
				limit = { FROM = { tag = HOL } }
				add_to_variable = {
					SAF_settling_attractiveness = 0.02
					tooltip = SAF_tt_settler_attractiveness
				}
			}
			else = {
				add_to_variable = {
					SAF_settling_attractiveness = 0.01
					tooltip = SAF_tt_settler_attractiveness
				}
			}
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_recruit_settlers_from_from target: [From.GetName]"
			542 = {
				if = {
					limit = { has_resistance = yes }
					add_resistance = 5
				}
			}
			hidden_effect = {
				FROM = {
					if = {
						limit = { tag = HOL }
						add_timed_idea = {
							idea = SAF_idea_settler_recruitment
							days = 50
						}
					}
					else = {
						add_timed_idea = {
							idea = SAF_idea_settler_recruitment
							days = 25
						}
					}
				}
			}
		}
	}

	SAF_control_the_tswana_insurgency = {
		icon = oppression
		allowed = { tag = SAF }

		available = {
			542 = { resistance < 30 }
		}

		activation = {
			has_completed_focus = SAF_establish_nuweveld
			542 = { resistance > 30 }
		}

		is_good = no
		fixed_random_seed = no
		days_mission_timeout = 60

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SAF_control_the_tswana_insurgency"
			if = {
				limit = {
					542 = { resistance < 60 }
				}
				random_list = {
					4 = {
						542 = { add_manpower = -30 }
						add_to_variable = { var = SAF_whites_in_botswana value = -30 }
						add_to_variable = {
							SAF_settling_attractiveness = -0.05
							tooltip = SAF_tt_settler_attractiveness
						}
					}
					16 = {
						542 = {
							damage_building = {
								type = infrastructure
								damage = 1
							}
						}
						add_to_variable = {
							SAF_settling_attractiveness = -0.02
							tooltip = SAF_tt_settler_attractiveness
						}
					}
					30 = {
						542 = { add_resistance = 10 }
					}
					50 = { }
				}
			}
			else_if = {
				limit = {
					542 = {
						resistance > 60
						resistance < 90
					}
				}
				random_list = {
					6 = {
						542 = { add_manpower = -30 }
						add_to_variable = { var = SAF_whites_in_botswana value = -30 }
						add_to_variable = {
							SAF_settling_attractiveness = -0.05
							tooltip = SAF_tt_settler_attractiveness
						}
					}
					24 = {
						542 = {
							damage_building = {
								type = infrastructure
								damage = 1
							}
						}
						add_to_variable = {
							var = SAF_settling_attractiveness value = -0.02
							tooltip = SAF_tt_settler_attractiveness
						}
					}
					45 = {
						542 = { add_resistance = 10 }
					}
					25 = { }
				}
			}
			else = {
				country_event = saf.62
			}
		}
	}

	SAF_yearly_nuweveld_report = {
		icon = GFX_decision_generic_decision
		allowed = { always = no } #manually activated

		available = {
			hidden_trigger = { always = no }
		}

		cancel_trigger = {
			has_completed_focus = SAF_stellaland_affairs_act
		}

		is_good = yes
		days_mission_timeout = 365

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SAF_yearly_nuweveld_report"
			country_event = saf.60
			hidden_effect = {
				activate_mission = SAF_yearly_nuweveld_report
			}
		}
	}
}

SAF_internal_resistance = {
	SAF_suppress_ob = {
		icon = eng_blackshirt_march
		allowed = { always = no }	# Activated by SAF_internal_resistance_enabled flag

		available = {
			custom_trigger_tooltip = {
				tooltip = saf_tt_ob_stronger_than_zero
				check_variable = { saf_ob_strength > 0 }
			}
		}

		cost = 25
		days_remove = 30

		modifier = {
			weekly_manpower = -20
		}

		ai_will_do = { factor = 1 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_suppress_ob"
			if = {
				limit = {
					check_variable = {
						var = saf_var_ob_suppression_effectiveness
						value = 0
						compare = greater_than
					}
				}
				custom_effect_tooltip = SAF_tt_ob_lowered_by_20
				subtract_from_variable = { var = saf_ob_strength value = 0.2 }
				if = {
					limit = {
						check_variable = { saf_ob_strength < 0 }
					}
					set_variable = { saf_ob_strength = 0 }
				}
				add_to_variable = {
					var = saf_var_ob_suppression_effectiveness
					value = -1
				}
			}
			else = {
				custom_effect_tooltip = SAF_tt_ob_lowered_by_10
				subtract_from_variable = { var = saf_ob_strength value = 0.1 }
				if = {
					limit = {
						check_variable = { saf_ob_strength < 0 }
					}
					set_variable = { saf_ob_strength = 0 }
				}
			}
			custom_effect_tooltip = SAF_tt_strain_on_detention_centers_increased
			add_to_variable = { var = SAF_var_detention_cap value = 5 }
		}
	}

	SAF_suppress_icu = {
		icon = eng_blackshirt_march
		allowed = { always = no }	# Activated by SAF_internal_resistance_enabled flag

		available = {
			custom_trigger_tooltip = {
				tooltip = saf_tt_icu_stronger_than_zero
				check_variable = { saf_icu_strength > 0 }
			}
		}

		cost = 25
		days_remove = 30

		modifier = {
			weekly_manpower = -20
		}

		ai_will_do = { factor = 1 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_suppress_icu"
			custom_effect_tooltip = SAF_tt_icu_lowered_by_10
			subtract_from_variable = { var = saf_icu_strength value = 0.1 }
			if = {
				limit = {
					check_variable = { saf_icu_strength < 0 }
				}
				set_variable = { saf_icu_strength = 0 }
			}
			custom_effect_tooltip = SAF_tt_strain_on_detention_centers_increased
			add_to_variable = { var = SAF_var_detention_cap value = 5 }
		}
	}

	SAF_control_the_ob = {
		icon = oppression

		allowed = { always = no } #manually activated

		available = {
			custom_trigger_tooltip = {
				tooltip = SAF_tt_ob_active
				NOT = {
					has_country_flag = SAF_internal_resistance_enabled
					has_country_flag = SAF_ossewabrandwag_founded
				}
			}
		}

		is_good = no
		fixed_random_seed = no

		days_mission_timeout = 30

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SAF_control_the_ob"
			if = {
				limit = {
					saf_trigger_ob_anti_war = yes
					check_variable = { saf_ob_strength > 0 }
				}
				random_list = {
					20 = {
						custom_effect_tooltip = SAF_tt_ossewa_nerds_harass_servicemen
						add_timed_idea = {
							idea = SAF_idea_harassed_army_personnel
							days = 30
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_ossewa_nerds_blow_railway_line
						random_owned_controlled_state = {
							limit = {
								is_core_of = ROOT
							}
							damage_building = {
								type = infrastructure
								damage = 0.7
							}
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_ossewa_nerds_share_confidential_information_with_enemy
						add_timed_idea = {
							idea = SAF_idea_compromised_intelligence
							days = 30
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_ossewa_nerds_convince_afrikaners_war_bad
						add_war_support = -0.03
					}
					25 = {
						modifier = {
							factor = 2
							check_variable = { saf_ob_strength < 0.5 }
						}
						modifier = {
							factor = 2
							check_variable = { saf_ob_strength < 0.25 }
						}
						modifier = {
							factor = 2
							check_variable = { saf_ob_strength < 0.1 }
						}
						#custom_effect_tooltip = no_effect
					}
				}
			}
			else_if = {
				limit = {
					saf_trigger_ob_neutral = yes
					check_variable = { saf_ob_strength > 0 }
				}
				custom_effect_tooltip = SAF_tt_ob_neutral_will_not_act
			}
			else_if = {
				limit = {
					saf_trigger_ob_prowar = yes
					check_variable = { saf_ob_strength > 0 }
				}
				random_list = {
					20 = {
						custom_effect_tooltip = SAF_tt_ossewa_nerds_attack_icu
						subtract_from_variable = { var = saf_icu_strength value = -0.1 }
						if = {
							limit = {
								check_variable = { saf_icu_strength < 0 }
							}
							set_variable = { saf_icu_strength = 0 }
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_ossewa_nerds_start_recruitment_drive
						add_timed_idea = {
							idea = SAF_idea_ossewa_recruitment_drive
							days = 30
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_ossewa_nerds_lynch_foreign_citizens
						add_stability = -0.03
					}
					10 = {
						custom_effect_tooltip = SAF_tt_ossewa_nerds_convince_afrikaners_war_good
						add_war_support = 0.03
					}
					25 = {
						modifier = {
							factor = 2
							check_variable = { saf_ob_strength < 0.5 }
						}
						modifier = {
							factor = 2
							check_variable = { saf_ob_strength < 0.25 }
						}
						modifier = {
							factor = 2
							check_variable = { saf_ob_strength < 0.1 }
						}
						#custom_effect_tooltip = no_effect
					}
				}
			}
			else = {
				custom_effect_tooltip = SAF_tt_ob_weak_will_not_act
			}
			hidden_effect = {
				random_list = {
					45 = {
						add_to_variable = { var = saf_ob_strength value = 0.05 }
						if = {
							limit = {
								check_variable = { saf_ob_strength > 1 }
							}
							set_variable = { saf_ob_strength = 1 }
						}
					}
					55 = {
						#no effect
					}
				}
				activate_mission = SAF_control_the_ob
			}
		}
	}

	SAF_control_the_icu = {
		icon = oppression

		allowed = { always = no } #manually activated

		available = {
			custom_trigger_tooltip = {
				tooltip = SAF_tt_icu_active
				NOT = {
					has_country_flag = SAF_internal_resistance_enabled
				}
			}
		}

		is_good = no
		fixed_random_seed = no

		days_mission_timeout = 30

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SAF_control_the_icu"
			if = {
				limit = {
					saf_trigger_icu_anti_war = yes
					check_variable = { saf_icu_strength > 0 }
				}
				random_list = {
					10 = {
						custom_effect_tooltip = SAF_tt_icu_organises_strikes
						add_timed_idea = {
							idea = SAF_idea_industrial_strikes
							days = 30
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_icu_organises_mining_strikes
						add_timed_idea = {
							idea = SAF_idea_mining_strikes
							days = 30
						}
					}
					5 = {
						custom_effect_tooltip = SAF_tt_icu_sabotages_factory
						random_controlled_state = {
							limit = {
								arms_factory > 0
							}
							damage_building = {
								type = arms_factory
								damage = 0.7
							}
						}
					}
					5 = {
						custom_effect_tooltip = SAF_tt_icu_sabotages_civ_factory
						random_controlled_state = {
							limit = {
								industrial_complex > 0
							}
							damage_building = {
								type = industrial_complex
								damage = 0.7
							}
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_icu_shares_confidential_information_with_enemy
						add_timed_idea = {
							idea = SAF_idea_compromised_intelligence
							days = 30
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_icu_convince_natives_war_bad
						add_war_support = -0.03
					}
					25 = {
						modifier = {
							factor = 2
							check_variable = { saf_icu_strength < 0.5 }
						}
						modifier = {
							factor = 2
							check_variable = { saf_icu_strength < 0.25 }
						}
						modifier = {
							factor = 2
							check_variable = { saf_icu_strength < 0.1 }
						}
						#custom_effect_tooltip = no_effect
					}
				}
			}
			else_if = {
				limit = {
					saf_trigger_icu_neutral = yes
					check_variable = { saf_icu_strength > 0 }
				}
				custom_effect_tooltip = SAF_tt_icu_neutral_will_not_act
			}
			else_if = {
				limit = {
					saf_trigger_icu_prowar = yes
					check_variable = { saf_icu_strength > 0 }
				}
				random_list = {
					20 = {
						custom_effect_tooltip = SAF_tt_icu_report_weapon_hideout
						add_to_variable = {
							var = saf_var_ob_suppression_effectiveness
							value = 1
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_icu_suspends_peaceful_resistance
						add_timed_idea = {
							idea = SAF_idea_less_nonviolent_resistance
							days = 30
						}
					}
					10 = {
						custom_effect_tooltip = SAF_tt_icu_calls_for_native_recruitment
						add_stability = -0.03
					}
					10 = {
						custom_effect_tooltip = SAF_tt_icu_convince_natives_war_good
						add_war_support = 0.03
					}
					25 = {
						modifier = {
							factor = 2
							check_variable = { saf_icu_strength < 0.5 }
						}
						modifier = {
							factor = 2
							check_variable = { saf_icu_strength < 0.25 }
						}
						modifier = {
							factor = 2
							check_variable = { saf_icu_strength < 0.1 }
						}
						#custom_effect_tooltip = no_effect
					}
				}
			}
			else = {
				custom_effect_tooltip = SAF_tt_icu_weak_will_not_act
			}
			hidden_effect = {
				random_list = {
					45 = {
						add_to_variable = { var = saf_icu_strength value = 0.05 }
						if = {
							limit = {
								check_variable = { saf_icu_strength > 1 }
							}
							set_variable = { saf_icu_strength = 1 }
						}
					}
					55 = {
						#no effect
					}
				}
				activate_mission = SAF_control_the_icu
			}
		}
	}

	SAF_construct_detention_camps = {
		icon = generic_construction
		allowed = { always = no }	# Activated by SAF_internal_resistance_enabled flag

		available = {
			num_of_civilian_factories_available_for_projects > 2
		}

		fire_only_once = yes

		cost = 50
		days_remove = 60

		modifier = {
			civilian_factory_use = 2
		}

		ai_will_do = { factor = 1 }

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_construct_detention_camps"
			custom_effect_tooltip = SAF_tt_no_trouble_with_detention_camps
			add_stability = -0.1
			hidden_effect = {
				add_to_variable = { var = SAF_var_detention_cap value = -40 }
				clamp_variable = {
					var = SAF_var_detention_cap
					min = 0
					max = 100
				}
			}
		}
	}
}

SAF_Decision_Group_Smuts_Doctrine = {
	SAF_intervene_kenya = {
		icon = generic_prepare_civil_war

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			OR = {
				is_neighbor_of = FROM
				FROM = { any_owned_state = { is_coastal = yes } }
				if = {
					limit = { cannot_call_allies_or_join_wars = yes }
					FROM = { any_neighbor_country = { is_subject_of = ROOT } }
				}
				else = {
					FROM = { any_neighbor_country = { is_ally_with = ROOT } }
				}
			}
		}

		visible = {
			can_declare_war_on = FROM
			FROM = { NOT = { has_country_leader = { character = KEN_Thomas_Cholmondeley } } } #don't attack British Kenya
		}

		cost = 0
		days_remove = 30
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					NOT = { is_neighbor_of = FROM }
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_intervene_kenya target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_intervene_kenya target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_intervene_kenya target: [From.GetName]"
			clear_decision_attack_AI = yes
			547 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			892 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			969 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			970 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	SAF_intervene_mozambique = {
		icon = generic_prepare_civil_war

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		visible = {
			can_declare_war_on = FROM
		}

		cost = 0
		days_remove = 30
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					NOT = { is_neighbor_of = FROM }
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_intervene_mozambique target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_intervene_mozambique target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_intervene_mozambique target: [From.GetName]"
			clear_decision_attack_AI = yes
			add_state_claim = 544 #Moçambique
			add_state_claim = 950 #Inhambane & Gaza
			add_state_claim = 954 #Tete
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	SAF_intervene_northern_rhodesia = {
		icon = generic_prepare_civil_war

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			OR = {
				is_neighbor_of = FROM
				if = {
					limit = { cannot_call_allies_or_join_wars = yes }
					FROM = { any_neighbor_country = { is_subject_of = ROOT } }
				}
				else = {
					FROM = { any_neighbor_country = { is_ally_with = ROOT } }
				}
			}
		}

		visible = {
			can_declare_war_on = FROM
		}

		cost = 0
		days_remove = 30
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
					FROM = { is_ai = no }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_intervene_northern_rhodesia target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_intervene_northern_rhodesia target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_intervene_northern_rhodesia target: [From.GetName]"
			clear_decision_attack_AI = yes
			813 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			955 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			956 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			958 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	SAF_intervene_nyasaland = {
		icon = generic_prepare_civil_war

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			OR = {
				is_neighbor_of = FROM
				if = {
					limit = { cannot_call_allies_or_join_wars = yes }
					FROM = { any_neighbor_country = { is_subject_of = ROOT } }
				}
				else = {
					FROM = { any_neighbor_country = { is_ally_with = ROOT } }
				}
			}
		}

		visible = {
			can_declare_war_on = FROM
		}

		cost = 0
		days_remove = 30
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
					FROM = { is_ai = no }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_intervene_nyasaland target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_intervene_nyasaland target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_intervene_nyasaland target: [From.GetName]"
			clear_decision_attack_AI = yes
			871 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	SAF_intervene_south_west = {
		icon = generic_prepare_civil_war

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			NOT = { FROM = { is_in_faction_with = GER } }
		}

		visible = {
			can_declare_war_on = FROM
		}

		cost = 0
		days_remove = 30
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					NOT = { #AI democratic SAF should only intervene if Südwest is already out of the picture, though Dominionist SAF doesn't care
						has_government = paternal_autocrat
						country_exists = SWA
					}
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
					FROM = { is_ai = no }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_intervene_south_west target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_intervene_south_west target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_intervene_south_west target: [From.GetName]"
			clear_decision_attack_AI = yes
			NMB = { every_core_state = { add_claim_by = ROOT } }
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	SAF_intervene_taganyika = {
		icon = generic_prepare_civil_war

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			OR = {
				is_neighbor_of = FROM
				if = {
					limit = { cannot_call_allies_or_join_wars = yes }
					FROM = { any_neighbor_country = { is_subject_of = ROOT } }
				}
				else = {
					FROM = { any_neighbor_country = { is_ally_with = ROOT } }
				}
			}
		}

		visible = {
			can_declare_war_on = FROM
		}

		cost = 0
		days_remove = 30
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
					FROM = { is_ai = no }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_intervene_taganyika target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_intervene_taganyika target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_intervene_taganyika target: [From.GetName]"
			clear_decision_attack_AI = yes
			546 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			869 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			870 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			899 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			918 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			965 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			1032 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	SAF_intervene_uganda = {
		icon = generic_prepare_civil_war

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			OR = {
				is_neighbor_of = FROM
				if = {
					limit = { cannot_call_allies_or_join_wars = yes }
					FROM = { any_neighbor_country = { is_subject_of = ROOT } }
				}
				else = {
					FROM = { any_neighbor_country = { is_ally_with = ROOT } }
				}
			}
		}

		visible = {
			can_declare_war_on = FROM
		}

		cost = 0
		days_remove = 30
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
					FROM = { is_ai = no }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_intervene_uganda target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_intervene_uganda target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_intervene_uganda target: [From.GetName]"
			clear_decision_attack_AI = yes
			548 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	SAF_intervene_zanzibar = {
		icon = generic_prepare_civil_war

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		visible = {
			can_declare_war_on = FROM
		}

		cost = 0
		days_remove = 30
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes
		fire_only_once = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					NOT = {
						controls_state = 965
						controls_state = 970
					}
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
					FROM = { is_ai = no }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_intervene_zanzibar target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_intervene_zanzibar target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_intervene_zanzibar target: [From.GetName]"
			clear_decision_attack_AI = yes
			905 = {
				add_claim_by = ROOT
				set_state_flag = SAF_the_empire_strikes_back
			}
			declare_war_on = {
				target = FROM
				type = annex_everything
			}
		}
	}

	SAF_demand_katanga_pulls_back = {
		icon = eng_trade_unions_demand

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			OR = {
				is_neighbor_of = FROM
				if = {
					limit = { cannot_call_allies_or_join_wars = yes }
					FROM = { any_neighbor_country = { is_subject_of = ROOT } }
				}
				else = {
					FROM = { any_neighbor_country = { is_ally_with = ROOT } }
				}
			}
		}

		visible = {
			can_declare_war_on = FROM
			FROM = {
				any_owned_state = {
					OR = {
						is_core_of = ZAM
						is_core_of = MLW
					}
					is_fully_controlled_by = PREV
				}
			}
		}

		cost = 0
		days_remove = 25
		fire_only_once = yes
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
				}
			}
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_demand_katanga_pulls_back target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_demand_katanga_pulls_back target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_demand_katanga_pulls_back target: [From.GetName]"
			clear_decision_attack_AI = yes
			if = {
				limit = {
					FROM = { is_subject = yes }
				}
				var:FROM.overlord = { country_event = saf.128 }
			}
			else = {
				FROM = { country_event = saf.128 }
			}
		}
	}

	SAF_demand_kivu_pulls_back = {
		icon = eng_trade_unions_demand

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			OR = {
				is_neighbor_of = FROM
				if = {
					limit = { cannot_call_allies_or_join_wars = yes }
					FROM = { any_neighbor_country = { is_subject_of = ROOT } }
				}
				else = {
					FROM = { any_neighbor_country = { is_ally_with = ROOT } }
				}
			}
		}

		visible = {
			can_declare_war_on = FROM
			FROM = {
				any_owned_state = {
					OR = {
						is_core_of = KEN
						is_core_of = UGA
					}
					is_fully_controlled_by = PREV
				}
			}
		}

		cost = 0
		days_remove = 25
		fire_only_once = yes
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_demand_kivu_pulls_back target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_demand_kivu_pulls_back target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_demand_kivu_pulls_back target: [From.GetName]"
			clear_decision_attack_AI = yes
			if = {
				limit = {
					FROM = { is_subject = yes }
				}
				var:FROM.overlord = { country_event = saf.131 }
			}
			else = {
				FROM = { country_event = saf.131 }
			}
		}
	}

	SAF_demand_somalia_pulls_back = {
		icon = eng_trade_unions_demand

		allowed = { always = no } #activated by SAF_enact_smuts_doctrine

		available = {
			OR = {
				is_neighbor_of = FROM
				if = {
					limit = { cannot_call_allies_or_join_wars = yes }
					FROM = { any_neighbor_country = { is_subject_of = ROOT } }
				}
				else = {
					FROM = { any_neighbor_country = { is_ally_with = ROOT } }
				}
			}
		}

		visible = {
			can_declare_war_on = FROM
			FROM = {
				any_owned_state = {
					is_core_of = KEN
					is_fully_controlled_by = PREV
				}
			}
		}

		cost = 0
		days_remove = 25
		fire_only_once = yes
		war_with_target_on_remove = yes
		cancel_if_not_visible = yes

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 0
				OR = {
					ROOT_is_threatened_cautious = yes
					FROM = { dont_start_major_faction_wars = yes }
					FROM = { default_attack_AI_trigger_FROM = yes }
				}
			}
		}

		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_demand_somalia_pulls_back target: [From.GetName]"
			clear_decision_attack_AI = yes
		}

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_demand_somalia_pulls_back target: [From.GetName]"
			FROM = { incoming_war_notification_effect = yes }
			setup_decision_attack_AI = yes
		}

		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_demand_somalia_pulls_back target: [From.GetName]"
			clear_decision_attack_AI = yes
			if = {
				limit = {
					FROM = { is_subject = yes }
				}
				var:FROM.overlord = { country_event = saf.133 }
			}
			else = {
				FROM = { country_event = saf.133 }
			}
		}
	}
}

economy_decisions = {
	SAF_dec_build_the_kariba_dam = {
		icon = GFX_decision_generic_construction
		allowed = { always = no }	# Activated by SAF_build_the_kariba_dam

		highlight_states = {
			highlight_state_targets = { state = 545 }
		}

		available = {
			num_of_civilian_factories_available_for_projects > 2
			545 = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = 545
		}

		fire_only_once = yes

		cost = 25
		days_remove = 120

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = 545 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_dec_build_the_kariba_dam"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_dec_build_the_kariba_dam"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_dec_build_the_kariba_dam"
			add_ideas = SAF_idea_kariba_dam
			545 = {
				increase_state_category_by_two_levels = yes
			}
		}

		ai_will_do = { factor = 100 }
	}

	SAF_establish_idc_factory_cape_town = {
		icon = GFX_decision_generic_industry
		allowed = { always = no }	# Activated by SAF_form_idc_of_south_africa

		available = {
			num_of_civilian_factories_available_for_projects > 2
			FROM = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = FROM
			FROM = {
				NOT = { has_state_flag = SAF_idc_factory_established }
			}
		}

		fire_only_once = yes
		state_target = yes
		cost = 25
		days_remove = 90

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = FROM }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_establish_idc_factory_cape_town target: [From.GetName]"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_establish_idc_factory_cape_town target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_establish_idc_factory_cape_town target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
				set_state_flag = SAF_idc_factory_established
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_establish_idc_factory_durban = {
		icon = GFX_decision_generic_industry
		allowed = { always = no }	# Activated by SAF_form_idc_of_south_africa

		available = {
			num_of_civilian_factories_available_for_projects > 2
			FROM = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = FROM
			FROM = {
				NOT = { has_state_flag = SAF_idc_factory_established }
			}
		}

		fire_only_once = yes
		state_target = yes
		cost = 25
		days_remove = 90

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = FROM }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_establish_idc_factory_durban target: [From.GetName]"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_establish_idc_factory_durban target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_establish_idc_factory_durban target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
				set_state_flag = SAF_idc_factory_established
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_establish_idc_factory_johannesburg = {
		icon = GFX_decision_generic_industry
		allowed = { always = no }	# Activated by SAF_form_idc_of_south_africa

		available = {
			num_of_civilian_factories_available_for_projects > 2
			FROM = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = FROM
			FROM = {
				NOT = { has_state_flag = SAF_idc_factory_established }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 90
		state_target = yes
		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = FROM }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_establish_idc_factory_johannesburg target: [From.GetName]"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_establish_idc_factory_johannesburg target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_establish_idc_factory_johannesburg target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
				set_state_flag = SAF_idc_factory_established
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_establish_idc_factory_salisbury = {
		icon = GFX_decision_generic_industry
		allowed = { always = no }	# Activated by SAF_form_idc_of_south_africa

		available = {
			num_of_civilian_factories_available_for_projects > 2
			FROM = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = FROM
			FROM = {
				NOT = { has_state_flag = SAF_idc_factory_established }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 90
		state_target = yes
		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = FROM }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_establish_idc_factory_salisbury target: [From.GetName]"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_establish_idc_factory_salisbury target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_establish_idc_factory_salisbury target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
				set_state_flag = SAF_idc_factory_established
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_invest_cape_town = {
		icon = GFX_decision_hol_attract_foreign_investors
		allowed = { always = no }	# Activated by SAF_support_iscor_expansion

		available = {
			num_of_civilian_factories_available_for_projects > 2
			FROM = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = FROM
			FROM = {
				NOT = { has_state_flag = SAF_new_factories_constructed }
			}
		}

		fire_only_once = yes
		state_target = yes
		cost = 25
		days_remove = 90

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = FROM }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_invest_cape_town target: [From.GetName]"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_invest_cape_town target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_invest_cape_town target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				set_state_flag = SAF_new_factories_constructed
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_invest_durban = {
		icon = GFX_decision_hol_attract_foreign_investors
		allowed = { always = no }	# Activated by SAF_support_iscor_expansion

		available = {
			num_of_civilian_factories_available_for_projects > 2
			FROM = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = FROM
			FROM = {
				NOT = { has_state_flag = SAF_new_factories_constructed }
			}
		}

		fire_only_once = yes
		state_target = yes
		cost = 25
		days_remove = 90

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = FROM }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_invest_durban target: [From.GetName]"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_invest_durban target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_invest_durban target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				set_state_flag = SAF_new_factories_constructed
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_expand_vanderbijlspark = {
		icon = GFX_decision_generic_construction
		allowed = { always = no }	# Activated by SAF_vanderbijlparks_steelworks

		available = {
			num_of_civilian_factories_available_for_projects > 2
			FROM = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = FROM
			FROM = {
				NOT = { has_state_flag = SAF_new_factories_constructed_2 }
			}
		}

		fire_only_once = yes
		state_target = yes
		cost = 25
		days_remove = 90

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = FROM }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_expand_vanderbijlspark target: [From.GetName]"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_expand_vanderbijlspark target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_expand_vanderbijlspark target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				set_state_flag = SAF_new_factories_constructed_2
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_invest_witwatersrand = {
		icon = GFX_decision_hol_attract_foreign_investors
		allowed = { always = no }	# Activated by SAF_support_iscor_expansion

		available = {
			num_of_civilian_factories_available_for_projects > 2
			FROM = {
				is_owned_and_controlled_by = ROOT
			}
		}

		visible = {
			owns_state = FROM
			FROM = {
				NOT = { has_state_flag = SAF_new_factories_constructed }
			}
		}

		fire_only_once = yes
		state_target = yes
		cost = 25
		days_remove = 90

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = FROM }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_invest_witwatersrand target: [From.GetName]"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_invest_witwatersrand target: [From.GetName]"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_invest_witwatersrand target: [From.GetName]"
			FROM = {
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = industrial_complex
					level = 1
					instant_build = yes
				}
				set_state_flag = SAF_new_factories_constructed
			}
		}

		ai_will_do = { factor = 250 }
	}
}

SAF_exploit_resources = {
	SAF_develop_natal_steel_mines = {
		icon = steel

		highlight_states = {
			highlight_state_targets = { state = 719 }
		}

		available = {
			num_of_civilian_factories_available_for_projects > 2
			719 = { is_owned_and_controlled_by = ROOT }
			has_tech = excavation2
		}

		visible = {
			719 = {
				is_owned_by = ROOT
				NOT = { has_state_flag = SAF_steel_mines_developed }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 60

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = 719 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_develop_natal_steel_mines"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_develop_natal_steel_mines"

		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_develop_natal_steel_mines"
			719 = {
				set_state_flag = SAF_steel_mines_developed
				add_resource = {
					type = steel
					amount = 18
				}
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_develop_northern_cape_aluminium_mines = {
		icon = aluminium

		highlight_states = {
			highlight_state_targets = { state = 945 }
		}

		available = {
			num_of_civilian_factories_available_for_projects > 2
			945 = { is_owned_and_controlled_by = ROOT }
			has_tech = excavation1
		}

		visible = {
			945 = {
				is_owned_by = ROOT
				NOT = { has_state_flag = SAF_aluminium_mines_developed }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 60

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = 945 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_develop_northern_cape_aluminium_mines"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_develop_northern_cape_aluminium_mines"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_develop_northern_cape_aluminium_mines"
			945 = {
				set_state_flag = SAF_aluminium_mines_developed
				add_resource = {
					type = aluminium
					amount = 5
				}
			}
		}

		ai_will_do = { factor = 100 }
	}

	SAF_develop_northern_cape_steel_mines = {
		icon = steel
		allowed = { always = no }	# Activated by SAF_support_iscor_expansion

		highlight_states = {
			highlight_state_targets = { state = 945 }
		}

		available = {
			num_of_civilian_factories_available_for_projects > 2
			945 = { is_owned_and_controlled_by = ROOT }
		}

		visible = {
			945 = {
				is_owned_by = ROOT
				NOT = { has_state_flag = SAF_steel_mines_developed }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 60

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = 945 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_develop_northern_cape_steel_mines"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_develop_northern_cape_steel_mines"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_develop_northern_cape_steel_mines"
			945 = {
				set_state_flag = SAF_steel_mines_developed
				add_resource = {
					type = steel
					amount = 12
				}
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_develop_orange_free_state_chromium_mines = {
		icon = chromium

		highlight_states = {
			highlight_state_targets = { state = 947 }
		}

		available = {
			num_of_civilian_factories_available_for_projects > 2
			947 = { is_owned_and_controlled_by = ROOT }
			has_tech = excavation1
		}

		visible = {
			947 = {
				is_owned_by = ROOT
				NOT = { has_state_flag = SAF_chromium_mines_developed }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 60

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = 947 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_develop_orange_free_state_chromium_mines"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_develop_orange_free_state_chromium_mines"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_develop_orange_free_state_chromium_mines"
			947 = {
				set_state_flag = SAF_chromium_mines_developed
				add_resource = {
					type = chromium
					amount = 10
				}
			}
		}

		ai_will_do = { factor = 10 }
	}

	SAF_develop_orange_free_state_steel_mines = {
		icon = steel
		allowed = { always = no }	# Activated by SAF_diversified_territorial_economy/SAF_develop_borderlands

		highlight_states = {
			highlight_state_targets = { state = 947 }
		}

		available = {
			num_of_civilian_factories_available_for_projects > 2
			947 = { is_owned_and_controlled_by = ROOT }
		}

		visible = {
			947 = {
				is_owned_by = ROOT
				NOT = { has_state_flag = SAF_steel_mines_developed }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 60

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = 947 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_develop_orange_free_state_steel_mines"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_develop_orange_free_state_steel_mines"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_develop_orange_free_state_steel_mines"
			947 = {
				set_state_flag = SAF_steel_mines_developed
				add_resource = {
					type = steel
					amount = 10
				}
			}
		}

		ai_will_do = { factor = 250 }
	}

	SAF_develop_rhodesia_steel_mines = {
		icon = steel
		allowed = { always = no }	# Activated by SAF_diversified_territorial_economy/SAF_develop_borderlands

		highlight_states = {
			highlight_state_targets = { state = 545 }
		}

		available = {
			num_of_civilian_factories_available_for_projects > 2
			545 = { is_owned_and_controlled_by = ROOT }
		}

		visible = {
			545 = {
				is_owned_by = ROOT
				NOT = { has_state_flag = SAF_steel_mines_developed }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 60

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = 545 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_develop_rhodesia_steel_mines"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_develop_rhodesia_steel_mines"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_develop_rhodesia_steel_mines"
			545 = {
				set_state_flag = SAF_steel_mines_developed
				add_resource = {
					type = steel
					amount = 5
				}
			}
		}

		ai_will_do = { factor = 50 }
	}

	SAF_develop_transvaal_steel_mines = {
		icon = steel
		allowed = { always = no }	# Activated by SAF_support_iscor_expansion

		highlight_states = {
			highlight_state_targets = { state = 275 }
		}

		available = {
			num_of_civilian_factories_available_for_projects > 2
			275 = { is_owned_and_controlled_by = ROOT }
		}

		visible = {
			275 = {
				is_owned_by = ROOT
				NOT = { has_state_flag = SAF_steel_mines_developed }
			}
		}

		fire_only_once = yes

		cost = 25
		days_remove = 60

		modifier = {
			civilian_factory_use = 3
		}

		cancel_trigger = {
			NOT = { controls_state = 275 }
		}
		cancel_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision cancel SAF_develop_transvaal_steel_mines"
		}
		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_develop_transvaal_steel_mines"
		}
		remove_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision remove SAF_develop_transvaal_steel_mines"
			275 = {
				set_state_flag = SAF_steel_mines_developed
				add_resource = {
					type = steel
					amount = 15
				}
			}
		}

		ai_will_do = { factor = 250 }
	}
}

SAF_Decision_Group_Boer_War = {
	SAF_hold_natal_mission = {
		icon = generic_tank

		allowed = { always = no } #activated by effect

		available = {
			NAT = { has_capitulated = yes }
		}

		cancel_trigger = {
			NOT = { has_war_with = ZAR }
		}

		days_mission_timeout = 180
		is_good = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_hold_natal_mission"
			custom_effect_tooltip = dei_tt_the_timer_will_be_reset
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SAF_hold_natal_mission"
			if = {
				limit = { tag = NAT }
				random_country = {
					limit = {
						is_ally_with = NAT
						has_war_with = ZAR
						is_valid_peace_target = yes
					}
					country_event = natal.12 #Newcastle Convention
					set_country_flag = { flag = SAF_peace_deal_ongoing days = 16 value = 1 }
				}
			}
			else = {
				effect_tooltip = {
					random_country = {
						limit = {
							is_ally_with = NAT
							has_war_with = ZAR
							is_valid_peace_target = yes
						}
						country_event = natal.12 #Newcastle Convention
						set_country_flag = { flag = SAF_peace_deal_ongoing days = 16 value = 1 }
					}
				}
			}
		}
	}

	SAF_conquer_natal_mission = {
		icon = generic_tank

		allowed = { always = no } #activated by effect

		available = {
			NAT = { has_capitulated = yes }
		}

		cancel_trigger = {
			NOT = { has_war_with = NAT }
		}

		days_mission_timeout = 180
		is_good = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_conquer_natal_mission"
			custom_effect_tooltip = dei_tt_the_timer_will_be_reset
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SAF_conquer_natal_mission"
			effect_tooltip = {
				random_country = {
					limit = {
						is_ally_with = NAT
						has_war_with = ZAR
						is_valid_peace_target = yes
					}
					country_event = natal.12 #Newcastle Convention
				}
			}
		}
	}
	SAF_defend_south_africa_mission = {
		icon = generic_tank

		allowed = { always = no } #activated by effect

		available = {
			OR = {
				surrender_progress > 0.1
				AND = {
					has_war_with = ZIM
					ZIM = { has_capitulated = no }
				}
				AND = {
					has_war_with = NAT
					NAT = { has_capitulated = no }
				}
			}
		}

		cancel_trigger = {
			NOT = { has_war_with = ENT }
		}

		days_mission_timeout = 180
		is_good = yes

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete SAF_defend_south_africa_mission"
			custom_effect_tooltip = dei_tt_the_timer_will_be_reset
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout SAF_defend_south_africa_mission"
			ENT = { country_event = natal.15 } #Pretoria Convention
		}
	}

	ENT_invade_south_africa_mission = {
		icon = generic_tank

		allowed = { always = no } #activated by effect

		available = {
			OR = {
				ZAR = { surrender_progress > 0.1 }
				AND = {
					is_in_faction_with = ZIM
					ZIM = { has_capitulated = no }
				}
				AND = {
					is_in_faction_with = NAT
					NAT = { has_capitulated = no }
				}
			}
		}

		cancel_trigger = {
			NOT = { has_war_with = ZAR }
		}

		days_mission_timeout = 180
		is_good = no

		complete_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision complete ENT_invade_south_africa_mission"
			custom_effect_tooltip = dei_tt_the_timer_will_be_reset
		}

		timeout_effect = {
			log = "[GetDateText]: [Root.GetName]: Decision timeout ENT_invade_south_africa_mission"
			effect_tooltip = {
				ENT = { country_event = natal.15 } #Pretoria Convention
			}
		}
	}
}
