###########################################
## Russian Socialist Republic Focus Tree ##
## By fbruchmueller and Alpinia          ##
###########################################

focus_tree = {
	id = Russia_Socialist

	country = {
		factor = 0
		modifier = {
			add = 10
			tag = SOV
		}
	}

	default = no
	continuous_focus_position = { x = 1800 y = 1200 }

	focus = {
		id = SOV_Rebuild_The_Country
		icon = GFX_goal_big_news
		cost = 8

		x = 7
		y = 0

		select_effect = {
			log = "[GetDateText]: [Root.GetName]: Select Focus SOV_Rebuild_The_Country"
			country_event = { id = russoc.123 days = 28 random_days = 4 }
		}
		available = {
			NOT = { country_exists = RUS }
		}
		ai_will_do = { factor = 1000 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Rebuild_The_Country"
			if = {
				limit = { has_idea = SOV_war_communism }
				remove_ideas = SOV_war_communism
				custom_effect_tooltip = tooltip_white_line
			}
			if = {
				limit = { has_idea = SOV_chaotic_revolution }
				remove_ideas = SOV_chaotic_revolution
				hidden_effect = { country_lock_all_division_template = no }
				custom_effect_tooltip = tooltip_white_line
			}
			else_if = {
				limit = { has_idea = SOV_for_the_revolution }
				remove_ideas = SOV_for_the_revolution
				custom_effect_tooltip = tooltip_white_line
			}
			add_timed_idea = {
				idea = SOV_post_war_reconstruction
				days = 365
			}
			if = {
				limit = { has_template = "Gorodskaya Militsiya" }
				set_division_template_lock = {
					division_template = "Gorodskaya Militsiya"
					is_locked = no
				}
			}
			if = {
				limit = { has_template = "German Militia Division" }
				delete_unit_template_and_units = { division_template = "German Militia Division" disband = yes }
			}
			SOV_reduce_civil_war_devastation = yes
		}
	}

	### Political Tree ###
	focus = {
		id = SOV_Proletarian_Humanism
		icon = GFX_goal_workers_for_business
		cost = 4

		relative_position_id = SOV_Rebuild_The_Country
		x = -6
		y = 1

		available = {
			has_government = radical_socialist
		}
		prerequisite = {
			focus = SOV_Rebuild_The_Country
		}
		mutually_exclusive = {
			focus = SOV_Revolutionary_Vanguard
			focus = SOV_Industrial_Democracy
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Proletarian_Humanism"
			add_ideas = SOV_proletarian_humanism_idea_1
		}
		search_filters = { FOCUS_FILTER_STABILITY }
	}

	focus = {
		id = SOV_Fight_Urban_Rural_Conflict
		icon = GFX_goal_Communist_Discourse
		cost = 8

		relative_position_id = SOV_Proletarian_Humanism
		x = 0
		y = 1

		prerequisite = {
			focus = SOV_Proletarian_Humanism
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Fight_Urban_Rural_Conflict"
			if = { #has union control
				limit = { has_idea = SOV_proletarian_humanism_idea_4 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_4
					add_idea = SOV_proletarian_humanism_idea_6
				}
			}
			else_if = { #has industrialisation
				limit = { has_idea = SOV_proletarian_humanism_idea_5 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_5
					add_idea = SOV_proletarian_humanism_idea_8
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_1
					add_idea = SOV_proletarian_humanism_idea_2
				}
			}
		}
		search_filters = { FOCUS_FILTER_POLITICAL }
	}

	focus = {
		id = SOV_Voluntary_Collectivisation
		icon = GFX_goal_agricultural_aid
		cost = 8

		relative_position_id = SOV_Proletarian_Humanism
		x = -1
		y = 2

		prerequisite = {
			focus = SOV_Fight_Urban_Rural_Conflict
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Voluntary_Collectivisation"
			if = { #has union control
				limit = { has_idea = SOV_proletarian_humanism_idea_6 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_6
					add_idea = SOV_proletarian_humanism_idea_7
				}
			}
			else_if = { #has industrialisation
				limit = { has_idea = SOV_proletarian_humanism_idea_8 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_8
					add_idea = SOV_proletarian_humanism_idea_9
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_2
					add_idea = SOV_proletarian_humanism_idea_3
				}
			}
		}
		search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Cautious_Industrialisation
		icon = GFX_goal_factory_complex
		cost = 8

		relative_position_id = SOV_Proletarian_Humanism
		x = 1
		y = 2

		prerequisite = {
			focus = SOV_Proletarian_Humanism
		}
		prerequisite = {
			focus = SOV_Control_The_Unions
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Cautious_Industrialisation"
			if = { #has urban-rural conflict
				limit = { has_idea = SOV_proletarian_humanism_idea_6 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_6
					add_idea = SOV_proletarian_humanism_idea_8
				}
			}
			else_if = { #has collectivisation
				limit = { has_idea = SOV_proletarian_humanism_idea_7 }
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_7
					add_idea = SOV_proletarian_humanism_idea_9
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_proletarian_humanism_idea_4
					add_idea = SOV_proletarian_humanism_idea_5
				}
			}
		}
		search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Control_The_Unions
		icon = GFX_GBR_fate_of_unions
		cost = 8

		relative_position_id = SOV_Proletarian_Humanism
		x = 2
		y = 1

		prerequisite = {
			focus = SOV_Proletarian_Humanism
			focus = SOV_Revolutionary_Vanguard
		}
		ai_will_do = { factor = 40 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Control_The_Unions"
			add_stability = -0.1
			effect_tooltip = {
				if = {
					limit = { has_completed_focus = SOV_Proletarian_Humanism }
					swap_ideas = {
						remove_idea = SOV_proletarian_humanism_idea_1
						add_idea = SOV_proletarian_humanism_idea_4
					}
				}
				else_if = {
					limit = { has_completed_focus = SOV_Revolutionary_Vanguard }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_1
						add_idea = SOV_revolutionary_vanguard_idea_2
					}
				}
				else = {
					custom_effect_tooltip = SOV_Control_The_Unions_tooltip
				}
			}
			hidden_effect = {
				if = { #has proletarian humanism
					limit = { has_idea = SOV_proletarian_humanism_idea_1 }
					swap_ideas = {
						remove_idea = SOV_proletarian_humanism_idea_1
						add_idea = SOV_proletarian_humanism_idea_4
					}
				}
				else_if = { #has urban-rural conflict
					limit = { has_idea = SOV_proletarian_humanism_idea_2 }
					swap_ideas = {
						remove_idea = SOV_proletarian_humanism_idea_2
						add_idea = SOV_proletarian_humanism_idea_6
					}
				}
				else_if = { #has collectivisation
					limit = { has_idea = SOV_proletarian_humanism_idea_3 }
					swap_ideas = {
						remove_idea = SOV_proletarian_humanism_idea_3
						add_idea = SOV_proletarian_humanism_idea_7
					}
				}
				else_if = { #has revolutionary vanguard
					limit = { has_idea = SOV_revolutionary_vanguard_idea_1 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_1
						add_idea = SOV_revolutionary_vanguard_idea_2
					}
				}
				else_if = { #has militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_idea_3 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_3
						add_idea = SOV_revolutionary_vanguard_idea_6
					}
				}
				else_if = { #has proletarian revolution
					limit = { has_idea = SOV_revolutionary_vanguard_idea_4 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_4
						add_idea = SOV_revolutionary_vanguard_idea_7
					}
				}
				else_if = { #has mass collectivisation
					limit = { has_idea = SOV_revolutionary_vanguard_idea_5 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_5
						add_idea = SOV_revolutionary_vanguard_idea_8
					}
				}
				else_if = { #has militarisation of labour and proletarian revolution
					limit = { has_idea = SOV_revolutionary_vanguard_idea_9 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_9
						add_idea = SOV_revolutionary_vanguard_idea_11
					}
				}
				else_if = { #has militarisation of labour and mass collectivisation
					limit = { has_idea = SOV_revolutionary_vanguard_idea_10 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_10
						add_idea = SOV_revolutionary_vanguard_idea_12
					}
				}
			}
		}
		search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_INDUSTRY FOCUS_FILTER_STABILITY }
	}

	focus = {
		id = SOV_Fight_Bureaucratisation
		icon = GFX_goal_Fight_for_Freedom
		cost = 8

		relative_position_id = SOV_Proletarian_Humanism
		x = 2
		y = 3

		prerequisite = {
			focus = SOV_Control_The_Unions
		}
		ai_will_do = { factor = 50 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Fight_Bureaucratisation"
			add_research_slot_until_five = yes
		}
		search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Revolutionary_Vanguard
		icon = GFX_goal_generic_globe
		cost = 4

		relative_position_id = SOV_Proletarian_Humanism
		x = 3
		y = 0

		available = {
			has_government = totalist
		}
		prerequisite = {
			focus = SOV_Rebuild_The_Country
		}
		mutually_exclusive = {
			focus = SOV_Proletarian_Humanism
			focus = SOV_Industrial_Democracy
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Revolutionary_Vanguard"
			add_ideas = SOV_revolutionary_vanguard_idea_1
		}
		search_filters = { FOCUS_FILTER_WAR_SUPPORT }
	}

	focus = {
		id = SOV_Militarisation_of_Labour
		icon = GFX_goal_Focus_Military_Mobilisation
		cost = 8

		relative_position_id = SOV_Revolutionary_Vanguard
		x = 0
		y = 2

		prerequisite = {
			focus = SOV_Revolutionary_Vanguard
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Militarisation_of_Labour"
			if = { #has union control
				limit = { has_idea = SOV_revolutionary_vanguard_idea_2 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_idea_2
					add_idea = SOV_revolutionary_vanguard_idea_6
				}
			}
			else_if = { #has proletarian revolution
				limit = { has_idea = SOV_revolutionary_vanguard_idea_4 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_idea_4
					add_idea = SOV_revolutionary_vanguard_idea_9
				}
			}
			else_if = { #has mass collectivisation
				limit = { has_idea = SOV_revolutionary_vanguard_idea_5 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_idea_5
					add_idea = SOV_revolutionary_vanguard_idea_10
				}
			}
			else_if = { #has union control and proletarian revolution
				limit = { has_idea = SOV_revolutionary_vanguard_idea_7 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_idea_7
					add_idea = SOV_revolutionary_vanguard_idea_11
				}
			}
			else_if = { #has union control and mass collectivisation
				limit = { has_idea = SOV_revolutionary_vanguard_idea_8 }
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_idea_8
					add_idea = SOV_revolutionary_vanguard_idea_12
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_revolutionary_vanguard_idea_1
					add_idea = SOV_revolutionary_vanguard_idea_3
				}
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_First_Five_Year_Plan
		icon = GFX_goal_state_economy
		cost = 6

		relative_position_id = SOV_Revolutionary_Vanguard
		x = 1
		y = 1

		bypass = {
			count_triggers = {
				amount = 3
				num_of_factories > 100
				has_completed_focus = SOV_Khozraschyot
				has_completed_focus = SOV_Mechanisation
				has_completed_focus = SOV_Ural_Tractor_Plants
				has_completed_focus = SOV_Transsiberian_Expansion
				has_completed_focus = SOV_Resource_Prospection
				has_completed_focus = SOV_Research_Investments
			}
		}
		prerequisite = {
			focus = SOV_Revolutionary_Vanguard
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_First_Five_Year_Plan"
			activate_mission = SOV_The_First_Five_Year_Plan
		}
		search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Proletarian_Revolution
		icon = GFX_goal_Workers_Paradise
		cost = 8

		relative_position_id = SOV_Revolutionary_Vanguard
		x = 3
		y = 1

		prerequisite = {
			focus = SOV_Industrial_Democracy
			focus = SOV_Revolutionary_Vanguard
		}
		ai_will_do = { factor = 40 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Proletarian_Revolution"
			if = {
				limit = { has_completed_focus = SOV_Revolutionary_Vanguard }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_1
						add_idea = SOV_revolutionary_vanguard_idea_4
					}
				}
			}
			else_if = {
				limit = { has_completed_focus = SOV_Industrial_Democracy }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_1
						add_idea = SOV_industrial_democracy_idea_2
					}
				}
			}
			else = {
				custom_effect_tooltip = SOV_Proletarian_Revolution_tooltip
			}
			hidden_effect = {
				if = { #has revolutionary vanguard
					limit = { has_idea = SOV_revolutionary_vanguard_idea_1 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_1
						add_idea = SOV_revolutionary_vanguard_idea_4
					}
				}
				else_if = { #has union control
					limit = { has_idea = SOV_revolutionary_vanguard_idea_2 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_2
						add_idea = SOV_revolutionary_vanguard_idea_7
					}
				}
				else_if = { #has militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_idea_3 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_3
						add_idea = SOV_revolutionary_vanguard_idea_9
					}
				}
				else_if = { #has union control and militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_idea_6 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_6
						add_idea = SOV_revolutionary_vanguard_idea_11
					}
				}
				else_if = { #has industrial democracy
					limit = { has_idea = SOV_industrial_democracy_idea_1 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_1
						add_idea = SOV_industrial_democracy_idea_2
					}
				}
				else_if = { #has VSR
					limit = { has_idea = SOV_industrial_democracy_idea_5 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_5
						add_idea = SOV_industrial_democracy_idea_6
					}
				}
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Mass_Collectivisation
		icon = GFX_goal_OTT_Land_Reform
		cost = 8

		relative_position_id = SOV_Revolutionary_Vanguard
		x = 2
		y = 2

		prerequisite = {
			focus = SOV_Proletarian_Revolution
		}
		ai_will_do = {
			factor = 40
			modifier = {
				factor = 0.125
				has_stability < 0.25
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Mass_Collectivisation"
			add_stability = -0.2
			hidden_effect = {
				country_event = { id = russoc.106 days = 60 random_days = 20 }
				country_event = { id = russoc.107 days = 120 random_days = 20 }
			}
			if = {
				limit = { has_completed_focus = SOV_Revolutionary_Vanguard }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_4
						add_idea = SOV_revolutionary_vanguard_idea_5
					}
				}
			}
			else_if = {
				limit = { has_completed_focus = SOV_Industrial_Democracy }
				effect_tooltip = {
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_2
						add_idea = SOV_industrial_democracy_idea_3
					}
				}
			}
			else = {
				custom_effect_tooltip = SOV_Mass_Collectivisation_tooltip
			}
			hidden_effect = {
				if = { #has revolutionary vanguard
					limit = { has_idea = SOV_revolutionary_vanguard_idea_4 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_4
						add_idea = SOV_revolutionary_vanguard_idea_5
					}
				}
				else_if = { #has union control
					limit = { has_idea = SOV_revolutionary_vanguard_idea_7 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_7
						add_idea = SOV_revolutionary_vanguard_idea_8
					}
				}
				else_if = { #has militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_idea_9 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_9
						add_idea = SOV_revolutionary_vanguard_idea_10
					}
				}
				else_if = { #has union control and militarisation of labour
					limit = { has_idea = SOV_revolutionary_vanguard_idea_11 }
					swap_ideas = {
						remove_idea = SOV_revolutionary_vanguard_idea_11
						add_idea = SOV_revolutionary_vanguard_idea_12
					}
				}
				else_if = { #has proletarian revolution
					limit = { has_idea = SOV_industrial_democracy_idea_2 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_2
						add_idea = SOV_industrial_democracy_idea_3
					}
				}
				else_if = { #has smychka
					limit = { has_idea = SOV_industrial_democracy_idea_4 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_4
						add_idea = SOV_industrial_democracy_idea_9
					}
				}
				else_if = { #has VSR
					limit = { has_idea = SOV_industrial_democracy_idea_6 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_6
						add_idea = SOV_industrial_democracy_idea_10
					}
				}
				else_if = { #has smychka and VSR
					limit = { has_idea = SOV_industrial_democracy_idea_7 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_7
						add_idea = SOV_industrial_democracy_idea_11
					}
				}
				else_if = { #has separation of powers
					limit = { has_idea = SOV_industrial_democracy_idea_8 }
					swap_ideas = {
						remove_idea = SOV_industrial_democracy_idea_8
						add_idea = SOV_industrial_democracy_idea_12
					}
				}
			}
		}
		search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_STABILITY FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Industrial_Democracy
		icon = GFX_goal_generic_workers_democracy
		cost = 4

		relative_position_id = SOV_Proletarian_Humanism
		x = 7
		y = 0

		available = {
			has_government = syndicalist
		}
		prerequisite = {
			focus = SOV_Rebuild_The_Country
		}
		mutually_exclusive = {
			focus = SOV_Revolutionary_Vanguard
			focus = SOV_Proletarian_Humanism
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Industrial_Democracy"
			add_ideas = SOV_industrial_democracy_idea_1
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Break_The_Smychka
		icon = GFX_goal_DEI_focus_disband_volksraad
		cost = 8

		relative_position_id = SOV_Industrial_Democracy
		x = 0
		y = 2

		prerequisite = {
			focus = SOV_Industrial_Democracy
		}
		prerequisite = {
			focus = SOV_Proletarian_Revolution
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Break_The_Smychka"
			if = { #has mass collectivisation
				limit = { has_idea = SOV_industrial_democracy_idea_3 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_3
					add_idea = SOV_industrial_democracy_idea_9
				}
			}
			else_if = { #has VSR
				limit = { has_idea = SOV_industrial_democracy_idea_6 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_6
					add_idea = SOV_industrial_democracy_idea_7
				}
			}
			else_if = { #has mass collectivisation and VSR
				limit = { has_idea = SOV_industrial_democracy_idea_10 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_10
					add_idea = SOV_industrial_democracy_idea_11
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_2
					add_idea = SOV_industrial_democracy_idea_4
				}
			}
		}
		search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Create_the_VSR #Vserossiyskiy Sovet Rabochikh - All-Russian Congress of Producers
		icon = GFX_socialist_constitution
		cost = 8

		relative_position_id = SOV_Industrial_Democracy
		x = 1
		y = 1

		prerequisite = {
			focus = SOV_Industrial_Democracy
		}
		ai_will_do = { factor = 30 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Create_the_VSR"
			if = { #has proletarian revolution
				limit = { has_idea = SOV_industrial_democracy_idea_2 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_2
					add_idea = SOV_industrial_democracy_idea_6
				}
			}
			else_if = { #has mass collectivisation
				limit = { has_idea = SOV_industrial_democracy_idea_3 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_3
					add_idea = SOV_industrial_democracy_idea_10
				}
			}
			else_if = { #has smychka
				limit = { has_idea = SOV_industrial_democracy_idea_4 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_4
					add_idea = SOV_industrial_democracy_idea_7
				}
			}
			else_if = { #has mass collectivisation and smychka
				limit = { has_idea = SOV_industrial_democracy_idea_9 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_9
					add_idea = SOV_industrial_democracy_idea_11
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_1
					add_idea = SOV_industrial_democracy_idea_5
				}
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Separation_Of_Powers
		icon = GFX_goal_constitutional_guarantees
		cost = 8

		relative_position_id = SOV_Industrial_Democracy
		x = 1
		y = 3

		prerequisite = {
			focus = SOV_Create_the_VSR
		}
		prerequisite = {
			focus = SOV_Break_The_Smychka
		}
		ai_will_do = { factor = 50 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Separation_Of_Powers"
			add_research_slot_until_five = yes
			if = { #has mass collectivisation
				limit = { has_idea = SOV_industrial_democracy_idea_11 }
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_11
					add_idea = SOV_industrial_democracy_idea_12
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_industrial_democracy_idea_7
					add_idea = SOV_industrial_democracy_idea_8
				}
			}
		}
		search_filters = { FOCUS_FILTER_POLITICAL FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
	}

	### Economy Tree ###
	focus = {
		id = SOV_Help_The_People
		icon = GFX_goal_generic_construct_public_housing
		cost = 8

		relative_position_id = SOV_Rebuild_The_Country
		x = 3
		y = 1

		prerequisite = {
			focus = SOV_Rebuild_The_Country
		}
		ai_will_do = { factor = 100 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Help_The_People"
			SOV_reduce_civil_war_devastation = yes
		}
		search_filters = { FOCUS_FILTER_POLITICAL }
	}

	focus = {
		id = SOV_Rebuild_The_Bureaucracy
		icon = GFX_goal_agency
		cost = 8

		relative_position_id = SOV_Rebuild_The_Country
		x = 5
		y = 1

		prerequisite = {
			focus = SOV_Rebuild_The_Country
		}
		ai_will_do = { factor = 100 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Rebuild_The_Bureaucracy"
			SOV_reduce_civil_war_devastation = yes
		}
		search_filters = { FOCUS_FILTER_POLITICAL }
	}

	focus = {
		id = SOV_The_GOELRO_Plan
		icon = GFX_goal_Schelle
		cost = 8

		relative_position_id = SOV_Rebuild_The_Country
		x = 7
		y = 1

		prerequisite = {
			focus = SOV_Rebuild_The_Country
		}
		ai_will_do = { factor = 100 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_GOELRO_Plan"
			SOV_reduce_civil_war_devastation = yes
		}
		search_filters = { FOCUS_FILTER_POLITICAL }
	}

	focus = {
		id = SOV_Allow_Small_Traders
		icon = GFX_goal_generic_positive_trade_relations_gold
		cost = 8

		relative_position_id = SOV_Rebuild_The_Country
		x = 4
		y = 3

		prerequisite = {
			focus = SOV_Help_The_People
		}
		prerequisite = {
			focus = SOV_Rebuild_The_Bureaucracy
		}
		prerequisite = {
			focus = SOV_The_GOELRO_Plan
		}
		ai_will_do = { factor = 100 }
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Allow_Small_Traders"
			SOV_reduce_civil_war_devastation = yes
		}
		search_filters = { FOCUS_FILTER_POLITICAL }
	}

	focus = {
		id = SOV_Form_Gosplan
		icon = GFX_goal_economic_control
		cost = 6

		relative_position_id = SOV_Rebuild_The_Country
		x = 6
		y = 2

		prerequisite = {
			focus = SOV_Help_The_People
		}
		prerequisite = {
			focus = SOV_Rebuild_The_Bureaucracy
		}
		prerequisite = {
			focus = SOV_The_GOELRO_Plan
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Form_Gosplan"
			add_ideas = SOV_gosplan_1
			custom_effect_tooltip = tooltip_white_line
			custom_effect_tooltip = available_political_advisor
			show_ideas_tooltip = RUS_ivan_smirnov
			custom_effect_tooltip = tooltip_white_line
			custom_effect_tooltip = available_political_advisor
			show_ideas_tooltip = RUS_ivar_smilga
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Mechanisation
		icon = GFX_focus_AUS_agriculture
		cost = 6

		relative_position_id = SOV_Form_Gosplan
		x = 2
		y = 1

		prerequisite = {
			focus = SOV_Form_Gosplan
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Mechanisation"
			if = {
				limit = { has_idea = SOV_gosplan_2 } #has industrialisation
				swap_ideas = {
					remove_idea = SOV_gosplan_2
					add_idea = SOV_gosplan_8
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_3 } #has khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_3
					add_idea = SOV_gosplan_9
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_5 } #has tankograd
				swap_ideas = {
					remove_idea = SOV_gosplan_5
					add_idea = SOV_gosplan_12
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_7 } #has industrialisation + khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_7
					add_idea = SOV_gosplan_10
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_11 } #has tankograd + khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_11
					add_idea = SOV_gosplan_13
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_15 } #has research + khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_15
					add_idea = SOV_gosplan_16
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_1
					add_idea = SOV_gosplan_4
				}
			}
			activate_targeted_decision = { target = 220 decision = RUS_Develop_Civilian_Industry_In_State } #Kursk
			activate_targeted_decision = { target = 217 decision = RUS_Develop_Civilian_Industry_In_State } #Tsaritsyn
			activate_targeted_decision = { target = 249 decision = RUS_Develop_Civilian_Industry_In_State } #Kazan
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Khozraschyot
		icon = GFX_goal_manage_industries
		cost = 6

		relative_position_id = SOV_Form_Gosplan
		x = 0
		y = 1

		prerequisite = {
			focus = SOV_Form_Gosplan
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Khozraschyot"
			if = {
				limit = { has_idea = SOV_gosplan_2 } #has industrialisation
				swap_ideas = {
					remove_idea = SOV_gosplan_2
					add_idea = SOV_gosplan_7
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_4 } #has mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_4
					add_idea = SOV_gosplan_9
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_5 } #has tankograd
				swap_ideas = {
					remove_idea = SOV_gosplan_5
					add_idea = SOV_gosplan_11
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_8 } #has industrialisation + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_8
					add_idea = SOV_gosplan_10
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_12 } #has tankograd + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_12
					add_idea = SOV_gosplan_13
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_15 } #has research + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_15
					add_idea = SOV_gosplan_16
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_1
					add_idea = SOV_gosplan_3
				}
			}
			activate_targeted_decision = { target = 398 decision = RUS_Develop_Military_Industry_In_State } #Perm
			activate_targeted_decision = { target = 651 decision = RUS_Develop_Civilian_Industry_In_State } #Ufa
			activate_targeted_decision = { target = 209 decision = RUS_Develop_Civilian_Industry_In_State } #Pskov
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Promote_Industrialisation
		icon = GFX_goal_social_reforms
		cost = 6

		relative_position_id = SOV_Form_Gosplan
		x = -1
		y = 2

		prerequisite = {
			focus = SOV_Allow_Small_Traders
		}
		prerequisite = {
			focus = SOV_Form_Gosplan
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Promote_Industrialisation"
			if = {
				limit = { has_idea = SOV_gosplan_3 } #has khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_3
					add_idea = SOV_gosplan_7
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_4 } #has mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_4
					add_idea = SOV_gosplan_8
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_9 } #has khozraschyot + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_9
					add_idea = SOV_gosplan_10
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_1
					add_idea = SOV_gosplan_2
				}
			}
			activate_targeted_decision = { target = 263 decision = RUS_Develop_Civilian_Industry_In_State } #Novgorod
			activate_targeted_decision = { target = 248 decision = RUS_Develop_Civilian_Industry_In_State } #Yaroslavl
			activate_targeted_decision = { target = 252 decision = RUS_Develop_Civilian_Industry_In_State } #Nizhny Novgorod
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Ural_Tractor_Plants
		text = RUS_Ural_Tractor_Plants
		icon = GFX_goal_generic_heavy_armour_russian
		cost = 8

		relative_position_id = SOV_Promote_Industrialisation
		x = -2
		y = 1

		available = {
			572 = { is_owned_and_controlled_by = ROOT }
		}
		prerequisite = {
			focus = SOV_Promote_Industrialisation
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Ural_Tractor_Plants"
			if = {
				limit = { has_idea = SOV_gosplan_7 } #has khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_7
					add_idea = SOV_gosplan_11
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_8 } #has mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_8
					add_idea = SOV_gosplan_12
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_10 } #has khozraschyot + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_10
					add_idea = SOV_gosplan_13
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_2
					add_idea = SOV_gosplan_5
				}
			}
			572 = {
				if = {
					limit = { has_state_flag = RUS_developed_tractor_plants }
					add_extra_state_shared_building_slots = 1
					add_building_construction = {
						type = arms_factory
						level = 1
						instant_build = yes
					}
				}
				else = {
					set_state_flag = RUS_developed_tractor_plants
					add_extra_state_shared_building_slots = 4
					add_building_construction = {
						type = arms_factory
						level = 4
						instant_build = yes
					}
					add_resource = {
						type = steel
						amount = 25
					}
				}
			}
			activate_targeted_decision = { target = 653 decision = RUS_Develop_Military_Industry_In_State } #Yekaterinburg
			activate_targeted_decision = { target = 572 decision = RUS_Develop_Civilian_Industry_In_State } #Chelyabinsk
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Transsiberian_Expansion
		text = RUS_Expand_The_Transsiberian
		icon = GFX_goal_generic_railroad
		cost = 8

		relative_position_id = SOV_Promote_Industrialisation
		x = 0
		y = 1

		available = {
			561 = { is_owned_and_controlled_by = ROOT } # Amur
			563 = { is_owned_and_controlled_by = ROOT } # Chita
			564 = { is_owned_and_controlled_by = ROOT } # Verkhneudinsk
			566 = { is_owned_and_controlled_by = ROOT } # Irkutsk
			567 = { is_owned_and_controlled_by = ROOT } # Bratsk
			568 = { is_owned_and_controlled_by = ROOT } # Krasnoyarsk
			569 = { is_owned_and_controlled_by = ROOT } # Shcheglovsk
			657 = { is_owned_and_controlled_by = ROOT } # Blagoveshchensk
		}
		prerequisite = {
			focus = SOV_Promote_Industrialisation
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Transsiberian_Expansion"
			if = {
				limit = { owns_state = 408 }
				build_railway = {
					start_province = 6380
					target_province = 957
				}
			}
			else = {
				build_railway = {
					start_province = 6380
					target_province = 12189
				}
			}
			every_owned_state = {
				tooltip = RUS_all_states_with_less_than_three_infra
				limit = {
					is_siberia = yes
					is_controlled_by = ROOT
					infrastructure < 3
				}
				add_building_construction = { type = infrastructure level = 1 }
			}
			custom_effect_tooltip = tooltip_white_line
			activate_targeted_decision = { target = 571 decision = RUS_Develop_Civilian_Industry_In_State } #Omsk
			activate_targeted_decision = { target = 570 decision = RUS_Develop_Military_Industry_In_State } #Novo-Nikolayevsk
			activate_targeted_decision = { target = 568 decision = RUS_Develop_Civilian_Industry_In_State } #Krasnoyarsk
			activate_targeted_decision = { target = 566 decision = RUS_Develop_Civilian_Industry_In_State } #Irkutsk
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Resource_Prospection
		text = RUS_Resource_Prospection
		icon = GFX_goal_generic_coal_mining
		cost = 6

		relative_position_id = SOV_Promote_Industrialisation
		x = 2
		y = 1

		prerequisite = {
			focus = SOV_Promote_Industrialisation
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Resource_Prospection"
			activate_targeted_decision = { target = 569 decision = RUS_KuzBass_Coal_Mining }
			activate_targeted_decision = { target = 961 decision = RUS_Grozny_Oil_Fields }
			activate_targeted_decision = { target = 722 decision = RUS_Pechenga_Nickel_Mining }
			activate_targeted_decision = { target = 568 decision = RUS_Tunguss_Basin_Coal_Mining }
			activate_targeted_decision = { target = 137 decision = RUS_Kamysh_Burunskiy_Iron_Ore }
			activate_targeted_decision = { target = 264 decision = RUS_Tikhvin_Bauxite_Mining }
			activate_targeted_decision = { target = 218 decision = RUS_Azov_Black_Sea_DonBass_Mining }
			activate_targeted_decision = { target = 213 decision = RUS_Kovdor_Iron_Ore_Deposits }
			activate_targeted_decision = { target = 653 decision = RUS_Kamenskiy_Uralskiy_Aluminium_Plant }
			activate_targeted_decision = { target = 787 decision = RUS_Tyrnyauz_Tungsten_Mining }
			activate_targeted_decision = { target = 249 decision = RUS_Romashkino_Oil_Field }
			activate_targeted_decision = { target = 653 decision = RUS_Kachkanar_Exploitation }
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Research_Investments
		text = RUS_Research_Investments
		icon = GFX_focus_research2
		cost = 8

		relative_position_id = SOV_Promote_Industrialisation
		x = 0
		y = 2

		prerequisite = {
			focus = SOV_Ural_Tractor_Plants
		}
		prerequisite = {
			focus = SOV_Transsiberian_Expansion
		}
		prerequisite = {
			focus = SOV_Resource_Prospection
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 1.5
				has_active_mission = SOV_The_First_Five_Year_Plan
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Research_Investments"
			if = {
				limit = { has_idea = SOV_gosplan_11 } #has khozraschyot
				swap_ideas = {
					remove_idea = SOV_gosplan_11
					add_idea = SOV_gosplan_14
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_12 } #has mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_12
					add_idea = SOV_gosplan_15
				}
			}
			else_if = {
				limit = { has_idea = SOV_gosplan_13 } #has khozraschyot + mechanisation
				swap_ideas = {
					remove_idea = SOV_gosplan_13
					add_idea = SOV_gosplan_16
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_gosplan_5
					add_idea = SOV_gosplan_6
				}
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	### Foreign Tree ###
	focus = {
		id = SOV_Secure_Central_Asia
		icon = GFX_focus_generic_eagle
		cost = 4

		relative_position_id = SOV_Rebuild_The_Country
		x = 9
		y = 1

		available = {
			is_subject = no
			has_army_manpower = { size > 500000 }
		}
		bypass = {
			NOT = {
				can_declare_war_on = ALO
				can_declare_war_on = TRK
				can_declare_war_on = BUK
				can_declare_war_on = KHI
			}
		}
		prerequisite = {
			focus = SOV_Rebuild_The_Country
		}
		will_lead_to_war_with = ALO
		will_lead_to_war_with = TRK
		will_lead_to_war_with = BUK
		will_lead_to_war_with = KHI
		ai_will_do = {
			factor = 1000
			modifier = {
				factor = 0
				RUS_dont_attack_if_vulnerable_or_preparing = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Secure_Central_Asia"
			add_state_claim = 418 #Ashkhabad
			if = {
				limit = { can_declare_war_on = ALO }
				declare_war_on = {
					target = ALO
					type = annex_everything
				}
			}
			if = {
				limit = { can_declare_war_on = TRK }
				declare_war_on = {
					target = TRK
					type = annex_everything
				}
			}
			if = {
				limit = { can_declare_war_on = BUK }
				declare_war_on = {
					target = BUK
					type = annex_everything
				}
			}
			if = {
				limit = { can_declare_war_on = KHI }
				declare_war_on = {
					target = KHI
					type = annex_everything
				}
			}
			add_named_threat = {
				threat = 4
				name = RUS_central_asia_threat
			}
		}
		search_filters = { FOCUS_FILTER_ANNEXATION }
	}

	focus = {
		id = SOV_Spreading_The_Revolution
		icon = GFX_goal_FRA_french_revanchism
		cost = 6

		relative_position_id = SOV_Secure_Central_Asia
		x = 0
		y = 1

		available = {
			is_subject = no
		}
		prerequisite = {
			focus = SOV_Secure_Central_Asia
		}

		ai_will_do = {
			factor = 1000
			modifier = {
				factor = 0
				OR = {
					has_idea = SOV_aftermath_of_the_civil_war_1
					has_idea = SOV_aftermath_of_the_civil_war_2
					has_idea = SOV_aftermath_of_the_civil_war_3
					has_idea = SOV_aftermath_of_the_civil_war_4
					has_idea = SOV_aftermath_of_the_civil_war_5
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Spreading_The_Revolution"
			if = {
				limit = { NOT = { country_exists = INT } }
				save_global_event_target_as = KR_internationale_leader
				create_faction = fourth_internationale
				set_global_flag = FRA_created_phalanstere
				FRA_add_to_phalanstere = yes
			}
			else = {
				create_faction = SOV_faction
				calculate_faction_joining_tension = yes
				add_named_threat = {
					threat = threat_value
					name = SOV_spreading_the_revolution_threat
				}
				if = {
					limit = { has_global_flag = FRA_created_phalanstere }
					FRA_add_to_phalanstere = yes
				}
				custom_effect_tooltip = tooltip_white_line
				INT = {
					diplomatic_relation = {
						country = ROOT
						relation = non_aggression_pact
					}
				}
				custom_effect_tooltip = tooltip_white_line
				every_other_country = {
					limit = {
						is_subject = no
						is_in_faction_with = INT
						NOT = {
							tag = INT
							tag = FIN
							tag = EST
							tag = LAT
							tag = LIT
							tag = WHR
							tag = UKR
							tag = POL
						}
					}
					diplomatic_relation = {
						country = ROOT
						relation = non_aggression_pact
					}
				}
				if = {
					limit = {
						INT = {
							any_allied_country = {
								OR = {
									tag = FIN
									tag = EST
									tag = LAT
									tag = LIT
									tag = WHR
									tag = UKR
									tag = POL
								}
								is_subject = no
							}
						}
					}
					custom_effect_tooltip = tooltip_white_line
					every_other_country = {
						limit = {
							is_subject = no
							is_in_faction_with = INT
							OR = {
								tag = FIN
								tag = EST
								tag = LAT
								tag = LIT
								tag = WHR
								tag = UKR
								tag = POL
							}
						}
						country_event = russoc.114
					}
				}
			}
			custom_effect_tooltip = tooltip_white_line
			unlock_decision_category_tooltip = SOV_Spreading_The_Revolution_decisions
			hidden_effect = { MIE_form_intermarium = yes }
		}
		search_filters = { FOCUS_FILTER_ANNEXATION }
	}

	focus = {
		id = SOV_The_Final_Battle
		icon = GFX_focus_ger_great_red_menace
		cost = 6

		relative_position_id = SOV_Spreading_The_Revolution
		x = 0
		y = 2

		available = {
			second_weltkrieg_can_start = yes
			is_faction_leader = yes
		}
		continue_if_invalid = yes
		cancel = {
			is_faction_leader = no
		}
		bypass = {
			NOT = { can_declare_war_on = GER }
		}
		prerequisite = {
			focus = SOV_Spreading_The_Revolution
		}
		ai_will_do = {
			factor = 3000
			modifier = {
				factor = 0
				date < 1939.6.1
			}
			modifier = {
				factor = 0
				RUS_dont_attack_if_vulnerable_or_preparing = yes
			}
			modifier = {
				factor = 0
				UKR = {
					is_in_faction_with = GER
					RUS_dont_attack_if_target_is_stronger = yes
				}
			}
			modifier = {
				factor = 0
				POL = {
					is_in_faction_with = GER
					RUS_dont_attack_if_target_is_stronger = yes
				}
			}
		}
		will_lead_to_war_with = GER
		will_lead_to_war_with = AUS
		will_lead_to_war_with = UKR
		will_lead_to_war_with = GEO
		will_lead_to_war_with = AZR
		select_effect = {
			log = "[GetDateText]: [Root.GetName]: Select Focus SOV_The_Final_Battle"
			set_country_flag = { flag = imminent_war days = 60 value = 1 }
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_Final_Battle"
			if = {
				limit = { FIN = { has_socialist_government = no } }
				add_state_claim = 146 #Karelia
			}
			add_state_claim = 537 #Sakhalin
			add_state_claim = 555 #Kurils
			declare_war_on = {
				target = GER
				type = annex_everything
			}
			if = {
				limit = {
					can_declare_war_on = GEO
					GEO = {
						OR = {
							is_subject = no
							is_ally_with = GER
							is_guaranteed_by = GER
						}
					}
				}
				declare_war_on = {
					target = GEO
					type = annex_everything
				}
			}
			if = {
				limit = {
					can_declare_war_on = AZR
					AZR = {
						OR = {
							is_subject = no
							is_ally_with = GER
							is_guaranteed_by = GER
						}
					}
				}
				declare_war_on = {
					target = AZR
					type = annex_everything
				}
			}
			if = {
				limit = {
					can_declare_war_on = WHR
					WHR = {
						has_socialist_government = no
						NOT = { is_in_faction_with = GER }
					}
				}
				declare_war_on = {
					target = WHR
					type = annex_everything
				}
			}
			if = {
				limit = {
					can_declare_war_on = UKR
					UKR = {
						has_socialist_government = no
						NOT = { is_in_faction_with = GER }
					}
				}
				declare_war_on = {
					target = UKR
					type = annex_everything
				}
			}
			hidden_effect = {
				every_other_country = {
					limit = {
						is_in_faction_with = GER
						OR = {
							original_tag = FIN
							original_tag = BAT
							original_tag = EST
							original_tag = LAT
							original_tag = LIT
							original_tag = WHR
							original_tag = UKR
							original_tag = POL
						}
						ROOT = { can_declare_war_on = PREV }
					}
					add_to_war = {
						targeted_alliance = GER
						enemy = ROOT
					}
				}
				WHR = { country_event = { id = whrpol.53 days = 2 } }
			}
		}
		search_filters = { FOCUS_FILTER_ANNEXATION }
	}

	### Army Tree ###
	focus = {
		id = SOV_Mobilise_Urban_Militias
		icon = GFX_goal_generic_drafted_army
		cost = 6

		x = 20
		y = 0

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Mobilise_Urban_Militias"
			add_equipment_to_stockpile = {
				type = infantry_equipment
				amount = 5000
				producer = SOV
			}
			hidden_effect = {
				if = {
					limit = { has_template = "Gorodskaya Militsiya" }
					delete_unit_template_and_units = { division_template = "Gorodskaya Militsiya" disband = yes } #no cheating
				}
			}
			division_template = {
				name = "Gorodskaya Militsiya"
				division_names_group = SOV_GAR_01
				is_locked = yes
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 0 y = 3 }
					infantry = { x = 0 y = 4 }
				}
				template_counter = 68
			}
			random_owned_controlled_state = {
				prioritize = { 195 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					count = 3
				}
			}
			random_owned_controlled_state = {
				prioritize = { 219 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					count = 3
				}
			}
			random_owned_controlled_state = {
				prioritize = { 242 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 306
				}
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 11241
				}
			}
			random_owned_controlled_state = {
				prioritize = { 246 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 11349
				}
			}
			random_owned_controlled_state = {
				prioritize = { 247 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6245
				}
			}
			random_owned_controlled_state = {
				prioritize = { 223 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 6262
				}
			}
			random_owned_controlled_state = {
				prioritize = { 222 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 9355
				}
			}
			random_owned_controlled_state = {
				prioritize = { 224 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 3335
				}
			}
			random_owned_controlled_state = {
				prioritize = { 220 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 3580
				}
			}
			random_owned_controlled_state = {
				prioritize = { 248 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 121
				}
			}
			random_owned_controlled_state = {
				prioritize = { 252 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 11375
				}
			}
			random_owned_controlled_state = {
				prioritize = { 260 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Gorodskaya Militsiya\" start_experience_factor = 0.1"
					owner = SOV
					prioritize_location = 413
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Krasnaya_Gvardiya_Units
		icon = GFX_goal_agrarian_socialism
		cost = 6

		relative_position_id = SOV_Mobilise_Urban_Militias
		x = 2
		y = 0

		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Krasnaya_Gvardiya_Units"
			add_doctrine_cost_reduction = {
				name = SOV_Krasnaya_Gvardiya_Units
				cost_reduction = 0.5
				uses = 1
				category = land_doctrine
			}
			hidden_effect = {
				if = {
					limit = { has_template = "Krasnaya Gvardiya" }
					delete_unit_template_and_units = { division_template = "Krasnaya Gvardiya" disband = yes } #no cheating
				}
			}
			division_template = {
				name = "Krasnaya Gvardiya"
				division_names_group = SOV_GAR_01
				regiments = {
					infantry = { x = 0 y = 0 }
					infantry = { x = 0 y = 1 }
					infantry = { x = 0 y = 2 }
					infantry = { x = 1 y = 0 }
					infantry = { x = 1 y = 1 }
					infantry = { x = 1 y = 2 }
					infantry = { x = 2 y = 0 }
					infantry = { x = 2 y = 1 }
					infantry = { x = 2 y = 2 }
				}
			}
			random_owned_controlled_state = {
				prioritize = { 195 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Krasnaya Gvardiya\" start_experience_factor = 0.1"
					owner = SOV
					count = 3
				}
			}
			random_owned_controlled_state = {
				prioritize = { 219 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				create_unit = {
					division = "division_template = \"Krasnaya Gvardiya\" start_experience_factor = 0.1"
					owner = SOV
					count = 3
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Rally_The_Defectors
		icon = GFX_goal_Communist_Discourse
		cost = 6

		relative_position_id = SOV_Mobilise_Urban_Militias
		x = 4
		y = 0

		ai_will_do = {
			factor = 40
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Rally_The_Defectors"
			if = {
				limit = { country_exists = RUS }
				effect_tooltip = { country_event = russoc.112 }
				RUS = {
					country_event = russoc.113
					if = {
						limit = {
							RUS = { has_completed_focus = RUS_Front_Line_Commissars }
						}
						custom_effect_tooltip = SOV_Rally_The_Defectors_tooltip
						transfer_units_fraction = {
							target = ROOT
							size = 0.1
							air_ratio = 0
							navy_ratio = 0
							keep_unit_leaders_trigger = { always = yes }
						}
					}
					else = {
						transfer_units_fraction = {
							target = ROOT
							size = 0.15
							air_ratio = 0
							navy_ratio = 0
							keep_unit_leaders_trigger = { always = yes }
						}
					}
				}
				hidden_effect = {
					transfer_navy = { target = RUS }
					RUS = {
						country_event = { id = russia.1945 days = 10 random_days = 10 }
					}
				}
			}
			else = {
				country_event = russoc.112
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_The_War_Effort
		icon = GFX_goal_SOV_army
		cost = 5

		relative_position_id = SOV_Krasnaya_Gvardiya_Units
		x = 0
		y = 1

		bypass = {
			NOT = { has_war_with = RUS }
		}
		prerequisite = {
			focus = SOV_Mobilise_Urban_Militias
		}
		prerequisite = {
			focus = SOV_Krasnaya_Gvardiya_Units
		}
		prerequisite = {
			focus = SOV_Rally_The_Defectors
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_War_Effort"
			swap_ideas = {
				remove_idea = SOV_chaotic_revolution
				add_idea = SOV_for_the_revolution
			}
			hidden_effect = { country_lock_all_division_template = no }
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Rebuild_The_Red_Army
		icon = GFX_goal_reform_socialist_army
		cost = 6

		relative_position_id = SOV_The_War_Effort
		x = -2
		y = 1

		mutually_exclusive = {
			focus = SOV_Empower_The_Krasnaya_Gvardiya
		}
		prerequisite = {
			focus = SOV_The_War_Effort
		}
		ai_will_do = {
			factor = 20
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Rebuild_The_Red_Army"
			add_ideas = SOV_new_red_army_1
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Centralised_Command
		icon = GFX_goal_officers
		cost = 6

		relative_position_id = SOV_Rebuild_The_Red_Army
		x = -1
		y = 1

		prerequisite = {
			focus = SOV_Rebuild_The_Red_Army
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Centralised_Command"
			swap_ideas = {
				remove_idea = SOV_new_red_army_1
				add_idea = SOV_new_red_army_2
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Reinstate_The_Cheka
		icon = GFX_goal_NOR_secret_police
		cost = 6

		relative_position_id = SOV_Rebuild_The_Red_Army
		x = -1
		y = 2

		prerequisite = {
			focus = SOV_Centralised_Command
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Reinstate_The_Cheka"
			if = {
				limit = { has_dlc_lar = yes }
				if = {
					limit = { has_intelligence_agency = no }
					create_intelligence_agency = yes
				}
				else_if = {
					limit = {
						NOT = { has_done_agency_upgrade = upgrade_army_department }
					}
					upgrade_intelligence_agency = upgrade_army_department
				}
				else = {
					add_political_power = 50
				}
				swap_ideas = {
					remove_idea = SOV_new_red_army_2
					add_idea = SOV_new_red_army_3_lar
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_new_red_army_2
					add_idea = SOV_new_red_army_3
				}
				add_tech_bonus = {
					name = SOV_Reinstate_The_Cheka
					bonus = 1
					uses = 1
					category = encryption_tech
					category = decryption_tech
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_War_Communism
		icon = GFX_goal_Focus_Military_Mobilisation
		cost = 6

		relative_position_id = SOV_Rebuild_The_Red_Army
		x = 1
		y = 1

		prerequisite = {
			focus = SOV_Rebuild_The_Red_Army
		}
		bypass = {
			NOT = { has_war_with = RUS }
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_War_Communism"
			add_ideas = SOV_war_communism
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_INDUSTRY FOCUS_FILTER_POLITICAL FOCUS_FILTER_STABILITY FOCUS_FILTER_WAR_SUPPORT }
	}

	focus = {
		id = SOV_The_Second_Red_Army
		icon = GFX_goal_generic_join_faction
		cost = 6

		relative_position_id = SOV_Rebuild_The_Red_Army
		x = 0
		y = 3

		prerequisite = {
			focus = SOV_War_Communism
		}
		prerequisite = {
			focus = SOV_Reinstate_The_Cheka
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_Second_Red_Army"
			if = {
				limit = { has_dlc_lar = yes }
				swap_ideas = {
					remove_idea = SOV_new_red_army_3_lar
					add_idea = SOV_new_red_army_4_lar
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_new_red_army_3
					add_idea = SOV_new_red_army_4
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Reorganise_Armament_Production
		icon = GFX_focus_focus_fra_maquis
		cost = 6

		relative_position_id = SOV_The_War_Effort
		x = 1
		y = 2

		prerequisite = {
			focus = SOV_Rebuild_The_Red_Army
			focus = SOV_Empower_The_Krasnaya_Gvardiya
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Reorganise_Armament_Production"
			add_tech_bonus = {
				name = SOV_Reorganise_Armament_Production
				bonus = 1
				uses = 1
				category = infantry_weapons
			}
			add_ideas = SOV_armament_production_1
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_The_Peoples_Logistics_Corps
		icon = GFX_goal_generic_war_in_the_plate
		cost = 6

		relative_position_id = SOV_Reorganise_Armament_Production
		x = -1
		y = 1

		prerequisite = {
			focus = SOV_Rebuild_The_Red_Army
		}
		prerequisite = {
			focus = SOV_Reorganise_Armament_Production
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_Peoples_Logistics_Corps"
			swap_ideas = {
				remove_idea = SOV_armament_production_1
				add_idea = SOV_armament_production_2
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Local_Workshops
		icon = GFX_goal_syndicalist_workers
		cost = 6

		relative_position_id = SOV_Reorganise_Armament_Production
		x = 1
		y = 1

		prerequisite = {
			focus = SOV_Reorganise_Armament_Production
		}
		prerequisite = {
			focus = SOV_Empower_The_Krasnaya_Gvardiya
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Local_Workshops"
			swap_ideas = {
				remove_idea = SOV_armament_production_1
				add_idea = SOV_armament_production_3
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Dedicated_Artillery_Battalions
		icon = GFX_goal_GEO_Artillery_Tactics
		cost = 6

		relative_position_id = SOV_Reorganise_Armament_Production
		x = 0
		y = 2

		prerequisite = {
			focus = SOV_Local_Workshops
			focus = SOV_The_Peoples_Logistics_Corps
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Dedicated_Artillery_Battalions"
			if = {
				limit = { has_idea = SOV_armament_production_2 }
				swap_ideas = {
					remove_idea = SOV_armament_production_2
					add_idea = SOV_armament_production_4
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_armament_production_3
					add_idea = SOV_armament_production_5
				}
			}
			add_tech_bonus = {
				name = SOV_Dedicated_Artillery_Battalions
				bonus = 1
				uses = 1
				category = artillery
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Empower_The_Krasnaya_Gvardiya
		icon = GFX_goal_integrate_the_militia
		cost = 6

		relative_position_id = SOV_The_War_Effort
		x = 2
		y = 1

		mutually_exclusive = {
			focus = SOV_Rebuild_The_Red_Army
		}
		prerequisite = {
			focus = SOV_The_War_Effort
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Empower_The_Krasnaya_Gvardiya"
			add_ideas = SOV_krasnaya_gvardiya_1
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Decentralised_Structure
		icon = GFX_goal_planning_bonus
		cost = 6

		relative_position_id = SOV_Empower_The_Krasnaya_Gvardiya
		x = 1
		y = 1

		prerequisite = {
			focus = SOV_Empower_The_Krasnaya_Gvardiya
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Decentralised_Structure"
			swap_ideas = {
				remove_idea = SOV_krasnaya_gvardiya_1
				add_idea = SOV_krasnaya_gvardiya_2
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Reconnaissance_Units
		icon = GFX_goal_DOM_Recon
		cost = 6

		relative_position_id = SOV_Empower_The_Krasnaya_Gvardiya
		x = 2
		y = 2

		prerequisite = {
			focus = SOV_Decentralised_Structure
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Reconnaissance_Units"
			custom_effect_tooltip = improved_recon_units_tech_effect
			hidden_effect = {
				set_technology = { improved_recon_units_tech = 1 popup = no }
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Officer_Initiative
		icon = GFX_focus_prc_infiltration
		cost = 6

		relative_position_id = SOV_Empower_The_Krasnaya_Gvardiya
		x = 4
		y = 2

		prerequisite = {
			focus = SOV_Decentralised_Structure
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Officer_Initiative"
			swap_ideas = {
				remove_idea = SOV_krasnaya_gvardiya_2
				add_idea = SOV_krasnaya_gvardiya_3
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Small_Unit_Tactics
		icon = GFX_focus_generic_manpower
		cost = 6

		relative_position_id = SOV_Empower_The_Krasnaya_Gvardiya
		x = 2
		y = 3

		prerequisite = {
			focus = SOV_Reconnaissance_Units
		}
		prerequisite = {
			focus = SOV_Local_Workshops
		}
		prerequisite = {
			focus = SOV_Officer_Initiative
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Small_Unit_Tactics"
			swap_ideas = {
				remove_idea = SOV_krasnaya_gvardiya_3
				add_idea = SOV_krasnaya_gvardiya_4
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Frunzes_Reform_Plan
		icon = GFX_focus_chi_army_reform
		cost = 6

		relative_position_id = SOV_The_War_Effort
		x = -1
		y = 5

		available = {
			NOT = { country_exists = RUS }
		}
		mutually_exclusive = {
			focus = SOV_Tukhachevskiys_Reform_Plan
		}
		prerequisite = {
			focus = SOV_The_Second_Red_Army
			focus = SOV_Small_Unit_Tactics
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
			modifier = {
				factor = 0.5
				OR = {
					has_tech = mobile_warfare
					has_tech = superior_firepower
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Frunzes_Reform_Plan"
			add_ideas = SOV_frunzes_reform_plan_1
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Expand_The_High_Command
		icon = GFX_focus_generic_military_mission
		cost = 8

		relative_position_id = SOV_Frunzes_Reform_Plan
		x = -2
		y = 1

		prerequisite = {
			focus = SOV_Frunzes_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Expand_The_High_Command"
			add_doctrine_cost_reduction = {
				name = SOV_Expand_The_High_Command
				cost_reduction = 0.5
				uses = 1
				category = land_doctrine
			}
			if = {
				limit = { has_idea = SOV_frunzes_reform_plan_3 }
				swap_ideas = {
					remove_idea = SOV_frunzes_reform_plan_3
					add_idea = SOV_frunzes_reform_plan_4
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_frunzes_reform_plan_1
					add_idea = SOV_frunzes_reform_plan_2
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Officer_Training_Academies
		icon = GFX_focus_generic_military_academy
		cost = 8

		relative_position_id = SOV_Frunzes_Reform_Plan
		x = 0
		y = 1

		prerequisite = {
			focus = SOV_Frunzes_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Officer_Training_Academies"
			add_doctrine_cost_reduction = {
				name = SOV_Officer_Training_Academies
				cost_reduction = 0.5
				uses = 1
				category = land_doctrine
			}
			if = {
				limit = { has_idea = SOV_frunzes_reform_plan_2 }
				swap_ideas = {
					remove_idea = SOV_frunzes_reform_plan_2
					add_idea = SOV_frunzes_reform_plan_4
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_frunzes_reform_plan_1
					add_idea = SOV_frunzes_reform_plan_3
				}
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Professional_Engineer_Corps
		icon = GFX_goal_generic_construction2
		cost = 6

		relative_position_id = SOV_Frunzes_Reform_Plan
		x = 2
		y = 1

		prerequisite = {
			focus = SOV_Frunzes_Reform_Plan
			focus = SOV_Tukhachevskiys_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Professional_Engineer_Corps"
			custom_effect_tooltip = expanded_engineer_corps_tech_effect
			hidden_effect = {
				set_technology = { expanded_engineer_corps_tech = 1 popup = no }
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Tukhachevskiys_Reform_Plan
		icon = GFX_focus_generic_combined_arms
		cost = 6

		relative_position_id = SOV_The_War_Effort
		x = 2
		y = 5

		available = {
			NOT = { country_exists = RUS }
		}
		mutually_exclusive = {
			focus = SOV_Frunzes_Reform_Plan
		}
		prerequisite = {
			focus = SOV_The_Second_Red_Army
			focus = SOV_Small_Unit_Tactics
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
			modifier = {
				factor = 0.5
				OR = {
					has_tech = trench_warfare
					has_tech = mass_assault
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Tukhachevskiys_Reform_Plan"
			add_ideas = SOV_tukhachevskiys_reform_plan_1
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS }
	}

	focus = {
		id = SOV_Mass_Breakthroughs
		icon = GFX_EGY_Operation_Abu
		cost = 8

		relative_position_id = SOV_Tukhachevskiys_Reform_Plan
		x = 1
		y = 1

		prerequisite = {
			focus = SOV_Tukhachevskiys_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Mass_Breakthroughs"
			if = {
				limit = { has_idea = SOV_tukhachevskiys_reform_plan_3 }
				swap_ideas = {
					remove_idea = SOV_tukhachevskiys_reform_plan_3
					add_idea = SOV_tukhachevskiys_reform_plan_4
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_tukhachevskiys_reform_plan_1
					add_idea = SOV_tukhachevskiys_reform_plan_2
				}
			}
			add_tech_bonus = {
				name = SOV_Mass_Breakthroughs
				bonus = 1
				uses = 1
				category = armor
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Land_Air_Integration
		icon = GFX_goal_new_airforce
		cost = 8

		relative_position_id = SOV_Tukhachevskiys_Reform_Plan
		x = 3
		y = 1

		prerequisite = {
			focus = SOV_Tukhachevskiys_Reform_Plan
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 3
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Land_Air_Integration"
			if = {
				limit = { has_idea = SOV_tukhachevskiys_reform_plan_2 }
				swap_ideas = {
					remove_idea = SOV_tukhachevskiys_reform_plan_2
					add_idea = SOV_tukhachevskiys_reform_plan_4
				}
			}
			else = {
				swap_ideas = {
					remove_idea = SOV_tukhachevskiys_reform_plan_1
					add_idea = SOV_tukhachevskiys_reform_plan_3
				}
			}
			add_tech_bonus = {
				name = SOV_Land_Air_Integration
				bonus = 1
				uses = 1
				category = cas_bomber
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
	}

	### Air Tree ###
	focus = {
		id = SOV_Establish_The_VVS
		icon = GFX_goal_SOV_airforce
		cost = 6

		x = 2
		y = 7

		available = {
			OR = {
				NOT = { country_exists = RUS }
				has_completed_focus = SOV_The_War_Effort
			}
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Establish_The_VVS"
			air_experience = 50
		}
		search_filters = { FOCUS_FILTER_AIR_XP }
	}

	focus = {
		id = SOV_Airspace_Defence
		icon = GFX_focus_generic_air_defense2
		cost = 6

		relative_position_id = SOV_Establish_The_VVS
		x = -2
		y = 1

		prerequisite = {
			focus = SOV_Establish_The_VVS
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Airspace_Defence"
			219 = {
				add_building_construction = {
					type = anti_air_building
					level = 1
					instant_build = yes
				}
			}
			195 = {
				add_building_construction = {
					type = anti_air_building
					level = 1
					instant_build = yes
				}
			}
		}
		search_filters = { FOCUS_FILTER_AIRFORCE_BONUS }
	}

	focus = {
		id = SOV_The_ORT_System
		icon = GFX_EGY_Radio_Free_Cairo
		cost = 8

		relative_position_id = SOV_Establish_The_VVS
		x = -2
		y = 2

		prerequisite = {
			focus = SOV_Airspace_Defence
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_ORT_System"
			add_tech_bonus = {
				name = SOV_The_ORT_System
				bonus = 1
				uses = 2
				category = radar_tech
			}
		}
		search_filters = { FOCUS_FILTER_AIRFORCE_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Aviation_Bureaus
		icon = GFX_goal_generic_air_fighter2_new
		cost = 8

		relative_position_id = SOV_Establish_The_VVS
		x = 0
		y = 2

		prerequisite = {
			focus = SOV_Establish_The_VVS
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Aviation_Bureaus"
			add_doctrine_cost_reduction = {
				name = SOV_Aviation_Bureaus
				cost_reduction = 0.5
				uses = 2
				category = air_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_AIRFORCE_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Nationalise_The_Aircraft_Industry
		icon = GFX_goal_generic_takeover_industries
		cost = 6

		relative_position_id = SOV_Establish_The_VVS
		x = 1
		y = 1

		prerequisite = {
			focus = SOV_Establish_The_VVS
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Nationalise_The_Aircraft_Industry"
			random_owned_controlled_state = {
				prioritize = { 263 }
				add_extra_state_shared_building_slots = 1
				add_building_construction = {
					type = arms_factory
					level = 1
					instant_build = yes
				}
			}
			add_equipment_to_stockpile = {
				type = small_plane_airframe
				amount = 100
			}
		}
		search_filters = { FOCUS_FILTER_AIRFORCE_BONUS FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Naval_Bomber_Development
		text = RUS_Naval_Bomber_Development
		icon = GFX_goal_generic_air_naval_bomber_new
		cost = 6

		relative_position_id = SOV_Establish_The_VVS
		x = 2
		y = 2

		prerequisite = {
			focus = SOV_Nationalise_The_Aircraft_Industry
		}
		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Naval_Bomber_Development"
			add_tech_bonus = {
				name = RUS_Naval_Bomber_Development
				bonus = 1
				uses = 1
				category = naval_bomber
			}
		}
		search_filters = { FOCUS_FILTER_AIRFORCE_BONUS FOCUS_FILTER_NAVY_BONUS FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Create_The_VDV
		text = RUS_Create_The_VDV
		icon = GFX_focus_generic_paratrooper
		cost = 8

		relative_position_id = SOV_Establish_The_VVS
		x = -1
		y = 3

		prerequisite = {
			focus = SOV_Aviation_Bureaus
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Create_The_VDV"
			hidden_effect = {
				if = {
					limit = { has_template = "Vozdushno-Desantnye Voyska" }
					delete_unit_template_and_units = { division_template = "Vozdushno-Desantnye Voyska" disband = yes } #no cheating
				}
			}
			division_template = {
				name = "Vozdushno-Desantnye Voyska"
				division_names_group = SOV_PAR_01
				regiments = {
					paratrooper = { x = 0 y = 0 }
					paratrooper = { x = 0 y = 1 }
					paratrooper = { x = 0 y = 2 }
					paratrooper = { x = 1 y = 0 }
					paratrooper = { x = 1 y = 1 }
					paratrooper = { x = 1 y = 2 }
				}
			}
			random_owned_controlled_state = {
				prioritize = { 219 }
				limit = { valid_state_for_spawning_friendly_unit = yes }
				custom_effect_tooltip = RUS_paratrooper_tooltip
				hidden_effect = {
					create_unit = {
						division = "division_template = \"Vozdushno-Desantnye Voyska\" start_experience_factor = 0.1"
						owner = ROOT
					}
				}
			}
			add_tech_bonus = {
				name = RUS_Create_The_VDV
				bonus = 1
				uses = 1
				category = para_tech
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_AIRFORCE_BONUS }
	}

	focus = {
		id = SOV_New_Fighters
		icon = GFX_goal_generic_air_fighter_new
		cost = 8

		relative_position_id = SOV_Establish_The_VVS
		x = 1
		y = 3

		prerequisite = {
			focus = SOV_Nationalise_The_Aircraft_Industry
		}
		prerequisite = {
			focus = SOV_Aviation_Bureaus
		}
		ai_will_do = {
			factor = 10
			modifier = {
				factor = 2
				has_war = yes
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_New_Fighters"
			add_tech_bonus = {
				name = SOV_New_Fighters
				bonus = 1
				uses = 2
				category = light_fighter
				category = cat_heavy_fighter
			}
		}
		search_filters = { FOCUS_FILTER_ARMY_BONUS FOCUS_FILTER_RESEARCH }
	}

	### Navy Tree ###
	focus = {
		id = SOV_Take_To_The_Seas
		icon = GFX_goal_SOV_navy
		cost = 10

		relative_position_id = SOV_Establish_The_VVS
		x = 8
		y = 0

		available = {
			NOT = { country_exists = RUS }
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Take_To_The_Seas"
			navy_experience = 50
		}
		search_filters = { FOCUS_FILTER_NAVY_XP }
	}

	focus = {
		id = SOV_Floating_Fortresses
		text = RUS_Floating_Fortresses
		icon = GFX_focus_generic_navy_battleship3alt
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -5
		y = 1

		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		mutually_exclusive = {
			focus = SOV_Death_From_Above
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Floating_Fortresses"
			navy_experience = 50
			add_doctrine_cost_reduction = {
				name = RUS_Floating_Fortresses
				cost_reduction = 0.5
				uses = 2
				category = naval_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_NAVY_XP FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Death_From_Above
		text = RUS_Death_From_Above
		icon = GFX_goal_generic_air_naval_bomber2_new
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -3
		y = 1

		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		mutually_exclusive = {
			focus = SOV_Floating_Fortresses
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Death_From_Above"
			air_experience = 25
			add_tech_bonus = {
				name = RUS_Death_From_Above
				bonus = 1
				uses = 1
				category = naval_bomber
			}
			add_doctrine_cost_reduction = {
				name = RUS_Death_From_Above
				cost_reduction = 0.5
				uses = 2
				category = naval_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_AIR_XP FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_War_Under_The_Sea
		text = RUS_War_Under_The_Sea
		icon = GFX_goal_generic_navy_anti_submarine
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -1
		y = 1

		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		mutually_exclusive = {
			focus = SOV_Floating_Fortresses
			focus = SOV_Death_From_Above
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_War_Under_The_Sea"
			add_tech_bonus = {
				name = RUS_The_Invisible_Navy
				bonus = 0.5
				uses = 2
				category = ss_tech
			}
			add_doctrine_cost_reduction = {
				name = RUS_War_Under_The_Sea
				cost_reduction = 0.5
				uses = 2
				category = naval_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_The_Invisible_Navy
		text = RUS_The_Invisible_Navy
		icon = GFX_goal_generic_navy_submarine
		cost = 5

		relative_position_id = SOV_Take_To_The_Seas
		x = -4
		y = 2

		prerequisite = {
			focus = SOV_Floating_Fortresses
			focus = SOV_Death_From_Above
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_The_Invisible_Navy"
			add_tech_bonus = {
				name = RUS_The_Invisible_Navy
				bonus = 1
				uses = 1
				category = ss_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Coastal_Defences
		text = RUS_Coastal_Defences
		icon = GFX_goal_nested_fortifications
		cost = 5

		relative_position_id = SOV_Take_To_The_Seas
		x = -6
		y = 4

		allow_branch = { has_dlc_mtg = yes }
		prerequisite = {
			focus = SOV_The_Invisible_Navy
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Coastal_Defences"
			add_tech_bonus = {
				name = RUS_Coastal_Defences
				bonus = 0.5
				uses = 2
				category = naval_mines
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_A_Destroyer_Armada
		text = RUS_A_Destroyer_Armada
		icon = GFX_focus_generic_destroyer
		cost = 5

		relative_position_id = SOV_Take_To_The_Seas
		x = -2
		y = 2

		prerequisite = {
			focus = SOV_Floating_Fortresses
			focus = SOV_Death_From_Above
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_A_Destroyer_Armada"
			add_tech_bonus = {
				name = RUS_A_Destroyer_Armada
				bonus = 1
				uses = 1
				category = dd_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Fleet_Protectors
		text = RUS_Fleet_Protectors
		icon = GFX_goal_generic_navy_cruiser
		cost = 5

		relative_position_id = SOV_Take_To_The_Seas
		x = -5
		y = 3

		allow_branch = { has_dlc_mtg = yes }
		prerequisite = {
			focus = SOV_A_Destroyer_Armada
		}
		prerequisite = {
			focus = SOV_The_Invisible_Navy
		}
		mutually_exclusive = {
			focus = SOV_Fleet_Vanguards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Fleet_Protectors"
			add_tech_bonus = {
				name = RUS_Fleet_Protectors
				bonus = 0.5
				uses = 2
				category = asw_tech
				category = cat_anti_air
			}
			add_tech_bonus = {
				name = RUS_Fleet_Protectors
				bonus = 0.5
				uses = 1
				category = cl_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Commerce_Raiders
		text = RUS_Commerce_Raiders
		icon = GFX_focus_generic_cruiser2
		cost = 5

		relative_position_id = SOV_Take_To_The_Seas
		x = -5
		y = 5

		allow_branch = { has_dlc_mtg = yes }
		prerequisite = {
			focus = SOV_Fleet_Protectors
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Commerce_Raiders"
			add_tech_bonus = {
				name = RUS_Commerce_Raiders
				bonus = 0.75
				uses = 2
				category = ship_modules_tech
			}
			add_tech_bonus = {
				name = RUS_Commerce_Raiders
				bonus = 1
				uses = 1
				category = cl_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Fleet_Vanguards
		text = RUS_Fleet_Vanguards
		icon = GFX_focus_generic_navy_battleship2
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -2
		y = 3

		offset = {
			x = -1
			y = 0
			trigger = {
				has_dlc_mtg = no
			}
		}
		prerequisite = {
			focus = SOV_A_Destroyer_Armada
		}
		prerequisite = {
			focus = SOV_The_Invisible_Navy
		}
		mutually_exclusive = {
			focus = SOV_Fleet_Protectors
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Fleet_Vanguards"
			if = {
				limit = { has_dlc_mtg = yes }
				add_tech_bonus = {
					name = RUS_Fleet_Vanguards
					bonus = 0.75
					uses = 3
					category = naval_equipment
				}
				add_tech_bonus = {
					name = RUS_Fleet_Vanguards
					bonus = 0.75
					uses = 2
					category = cl_tech
					category = ca_tech
				}
			}
			else = {
				add_tech_bonus = {
					name = RUS_Fleet_Vanguards
					bonus = 1
					uses = 2
					category = cl_tech
					category = ca_tech
				}
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Naval_Infantry_MTG
		text = RUS_Naval_Infantry
		icon = GFX_goal_generic_amphibious_assault
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -4
		y = 4

		allow_branch = { has_dlc_mtg = yes }
		prerequisite = {
			focus = SOV_Fleet_Protectors
			focus = SOV_Fleet_Vanguards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Naval_Infantry_MTG"
			add_tech_bonus = {
				name = RUS_Naval_Infantry
				bonus = 1
				uses = 2
				category = marine_tech
				category = tp_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Naval_Infantry
		text = RUS_Naval_Infantry
		icon = GFX_goal_generic_amphibious_assault
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -2
		y = 4

		allow_branch = {
			has_dlc_mtg = no
		}
		prerequisite = {
			focus = SOV_Fleet_Vanguards
			focus = SOV_New_Tactics_For_New_Ships
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Naval_Infantry"
			add_tech_bonus = {
				name = RUS_Naval_Infantry
				bonus = 1
				uses = 2
				category = marine_tech
				category = tp_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_New_Tactics_For_New_Ships
		text = RUS_New_Tactics_For_New_Ships
		icon = GFX_goal_navy_hat_ships
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -1
		y = 3

		allow_branch = {
			has_dlc_mtg = no
		}
		prerequisite = {
			focus = SOV_Floating_Fortresses
			focus = SOV_Death_From_Above
			focus = SOV_War_Under_The_Sea
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_New_Tactics_For_New_Ships"
			add_doctrine_cost_reduction = {
				name = RUS_New_Tactics_For_New_Ships
				cost_reduction = 0.5
				uses = 2
				category = naval_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_New_Tactics_For_New_Ships_MTG
		text = RUS_New_Tactics_For_New_Ships
		icon = GFX_goal_navy_hat_ships
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -2
		y = 4

		allow_branch = { has_dlc_mtg = yes }
		prerequisite = {
			focus = SOV_Fleet_Protectors
			focus = SOV_Fleet_Vanguards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_New_Tactics_For_New_Ships_MTG"
			add_doctrine_cost_reduction = {
				name = RUS_New_Tactics_For_New_Ships
				cost_reduction = 0.5
				uses = 2
				category = naval_doctrine
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Modernise_The_Petrograd_Dockyards
		text = RUS_Modernise_The_Petrograd_Dockyards
		icon = GFX_goal_generic_shipyard
		cost = 8

		relative_position_id = SOV_Take_To_The_Seas
		x = 1
		y = 1

		available = {
			195 = { is_owned_and_controlled_by = ROOT }
		}
		prerequisite = {
			focus = SOV_Take_To_The_Seas
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Modernise_The_Petrograd_Dockyards"
			random_owned_controlled_state = {
				prioritize = { 195 }
				limit = {
					is_coastal = yes
					free_building_slots = {
						building = dockyard
						size > 2
						include_locked = yes
					}
				}
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Modernise_Murmansk
		text = RUS_Modernise_Murmansk
		icon = GFX_goal_CAN_explore_north
		cost = 15

		relative_position_id = SOV_Take_To_The_Seas
		x = 2
		y = 2

		available = {
			213 = { is_owned_and_controlled_by = ROOT }
		}
		prerequisite = {
			focus = SOV_Modernise_The_Petrograd_Dockyards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Modernise_Murmansk"
			213 = {
				add_building_construction = {
					type = coastal_bunker
					level = 3
					province = 3134
					instant_build = yes
				}
				add_building_construction = {
					type = naval_base
					level = 4
					province = 3134
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
				add_building_construction = {
					type = anti_air_building
					level = 2
					instant_build = yes
				}
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
			add_tech_bonus = {
				name = RUS_Modernise_Murmansk
				bonus = 1
				uses = 1
				ahead_reduction = 2
				category = dd_tech
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Recover_Foreign_Blueprints
		text = RUS_Recover_Foreign_Blueprints
		icon = GFX_goal_navy_decision
		cost = 5

		relative_position_id = SOV_Take_To_The_Seas
		x = 1
		y = 3

		available = {
			OR = {
				137 = { is_owned_and_controlled_by = ROOT }
				408 = { is_owned_and_controlled_by = ROOT }
			}
		}
		prerequisite = {
			focus = SOV_Modernise_The_Petrograd_Dockyards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Recover_Foreign_Blueprints"
			add_tech_bonus = {
				name = RUS_Recover_Foreign_Blueprints
				bonus = 1
				uses = 1
				ahead_reduction = 3
				category = cv_tech
				category = bb_tech

			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Submarines_In_Nikolayevsk
		text = RUS_Submarines_In_Nikolayevsk
		icon = GFX_goal_generic_wolf_pack
		cost = 15

		relative_position_id = SOV_Take_To_The_Seas
		x = 0
		y = 2

		available = {
			560 = { is_owned_and_controlled_by = ROOT }
		}
		prerequisite = {
			focus = SOV_Modernise_The_Petrograd_Dockyards
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Submarines_In_Nikolayevsk"
			560 = {
				add_building_construction = {
					type = coastal_bunker
					level = 3
					province = 12559
					instant_build = yes
				}
				add_building_construction = {
					type = naval_base
					level = 5
					province = 12559
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 1
					instant_build = yes
				}
				add_building_construction = {
					type = anti_air_building
					level = 2
					instant_build = yes
				}
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
			add_tech_bonus = {
				name = RUS_Submarines_In_Nikolayevsk
				bonus = 1
				uses = 1
				ahead_reduction = 2
				category = ss_tech
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Repair_Sevastopol
		text = RUS_Repair_Sevastopol
		icon = GFX_goal_generic_construct_naval_dockyard
		cost = 8

		relative_position_id = SOV_Take_To_The_Seas
		x = 0
		y = 4

		available = {
			137 = { is_owned_and_controlled_by = ROOT }
		}
		prerequisite = {
			focus = SOV_Recover_Foreign_Blueprints
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Repair_Sevastopol"
			137 = {
				add_building_construction = {
					type = coastal_bunker
					level = 3
					province = 3686
					instant_build = yes
				}
				add_building_construction = {
					type = naval_base
					level = 1
					province = 3686
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 2
					instant_build = yes
				}
				add_building_construction = {
					type = anti_air_building
					level = 2
					instant_build = yes
				}
				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 3
					instant_build = yes
				}
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Repair_Vladivostok
		text = RUS_Repair_Vladivostok
		icon = GFX_goal_AST_upgrade_reserves
		cost = 8

		relative_position_id = SOV_Take_To_The_Seas
		x = 2
		y = 4

		available = {
			408 = { is_owned_and_controlled_by = ROOT }
		}
		prerequisite = {
			focus = SOV_Recover_Foreign_Blueprints
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Repair_Vladivostok"
			408 = {
				add_building_construction = {
					type = coastal_bunker
					level = 3
					province = 957
					instant_build = yes
				}
				add_building_construction = {
					type = naval_base
					level = 4
					province = 957
					instant_build = yes
				}
				add_building_construction = {
					type = infrastructure
					level = 1
					instant_build = yes
				}
				add_building_construction = {
					type = anti_air_building
					level = 2
					instant_build = yes
				}

				add_extra_state_shared_building_slots = 3
				add_building_construction = {
					type = dockyard
					level = 2
					instant_build = yes
				}
			}
		}
		search_filters = { FOCUS_FILTER_INDUSTRY }
	}

	focus = {
		id = SOV_Battleship_Development
		text = RUS_Battleship_Development
		icon = GFX_goal_generic_navy_battleship
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = -1
		y = 5

		mutually_exclusive = {
			focus = SOV_Carrier_Development
		}
		prerequisite = {
			focus = SOV_Repair_Sevastopol
			focus = SOV_Repair_Vladivostok
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Battleship_Development"
			if = {
				limit = { has_dlc_mtg = yes }
				add_tech_bonus = {
					name = RUS_Battleship_Development
					bonus = 0.75
					uses = 2
					category = ship_modules_tech
				}
			}
			add_tech_bonus = {
				name = RUS_Battleship_Development
				bonus = 1
				uses = 1
				category = bb_tech
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}

	focus = {
		id = SOV_Carrier_Development
		text = RUS_Carrier_Development
		icon = GFX_goal_generic_navy_carrier
		cost = 10

		relative_position_id = SOV_Take_To_The_Seas
		x = 2
		y = 5

		mutually_exclusive = {
			focus = SOV_Battleship_Development
		}
		prerequisite = {
			focus = SOV_Repair_Sevastopol
			focus = SOV_Repair_Vladivostok
		}
		ai_will_do = {
			factor = 4
			modifier = {
				factor = 5
				OR = {
					has_war_with = USA
					has_war_with = TEX
					has_war_with = PSA
					has_war_with = ENT
					has_war_with = JAP
				}
			}
		}
		completion_reward = {
			log = "[GetDateText]: [Root.GetName]: Focus SOV_Carrier_Development"
			add_tech_bonus = {
				name = RUS_Carrier_Development
				bonus = 0.5
				uses = 2
				category = cv_tech
			}
			add_tech_bonus = {
				name = RUS_Carrier_Development
				bonus = 0.5
				uses = 2
				category = naval_air
			}
		}
		search_filters = { FOCUS_FILTER_RESEARCH }
	}
}

